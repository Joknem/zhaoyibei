ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/tim.c"
  20              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_TIM_Base_MspInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_TIM_Base_MspInit:
  28              	.LVL0:
  29              	.LFB133:
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** DMA_HandleTypeDef hdma_tim1_ch1;
  29:Core/Src/tim.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 2


  30:Core/Src/tim.c **** /* TIM1 init function */
  31:Core/Src/tim.c **** void MX_TIM1_Init(void)
  32:Core/Src/tim.c **** {
  33:Core/Src/tim.c **** 
  34:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  35:Core/Src/tim.c **** 
  36:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  37:Core/Src/tim.c **** 
  38:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  42:Core/Src/tim.c **** 
  43:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  44:Core/Src/tim.c **** 
  45:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  46:Core/Src/tim.c ****   htim1.Instance = TIM1;
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  49:Core/Src/tim.c ****   htim1.Init.Period = 19;
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  54:Core/Src/tim.c ****   {
  55:Core/Src/tim.c ****     Error_Handler();
  56:Core/Src/tim.c ****   }
  57:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  59:Core/Src/tim.c ****   {
  60:Core/Src/tim.c ****     Error_Handler();
  61:Core/Src/tim.c ****   }
  62:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  63:Core/Src/tim.c ****   {
  64:Core/Src/tim.c ****     Error_Handler();
  65:Core/Src/tim.c ****   }
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  70:Core/Src/tim.c ****   {
  71:Core/Src/tim.c ****     Error_Handler();
  72:Core/Src/tim.c ****   }
  73:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  81:Core/Src/tim.c ****   {
  82:Core/Src/tim.c ****     Error_Handler();
  83:Core/Src/tim.c ****   }
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 3


  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
  96:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  97:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  98:Core/Src/tim.c ****   {
  99:Core/Src/tim.c ****     Error_Handler();
 100:Core/Src/tim.c ****   }
 101:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 102:Core/Src/tim.c **** 
 103:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
 104:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 105:Core/Src/tim.c **** 
 106:Core/Src/tim.c **** }
 107:Core/Src/tim.c **** 
 108:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 109:Core/Src/tim.c **** {
  30              		.loc 1 109 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
  34              		.loc 1 111 3 view .LVU1
  35              		.loc 1 111 20 is_stmt 0 view .LVU2
  36 0000 0268     		ldr	r2, [r0]
  37              		.loc 1 111 5 view .LVU3
  38 0002 1C4B     		ldr	r3, .L10
  39 0004 9A42     		cmp	r2, r3
  40 0006 00D0     		beq	.L8
  41 0008 7047     		bx	lr
  42              	.L8:
 109:Core/Src/tim.c **** 
  43              		.loc 1 109 1 view .LVU4
  44 000a 10B5     		push	{r4, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 8
  47              		.cfi_offset 4, -8
  48              		.cfi_offset 14, -4
  49 000c 82B0     		sub	sp, sp, #8
  50              	.LCFI1:
  51              		.cfi_def_cfa_offset 16
  52 000e 0446     		mov	r4, r0
 112:Core/Src/tim.c ****   {
 113:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 114:Core/Src/tim.c **** 
 115:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 116:Core/Src/tim.c ****     /* TIM1 clock enable */
 117:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
  53              		.loc 1 117 5 is_stmt 1 view .LVU5
  54              	.LBB2:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 4


  55              		.loc 1 117 5 view .LVU6
  56              		.loc 1 117 5 view .LVU7
  57 0010 03F56443 		add	r3, r3, #58368
  58 0014 1A6E     		ldr	r2, [r3, #96]
  59 0016 42F40062 		orr	r2, r2, #2048
  60 001a 1A66     		str	r2, [r3, #96]
  61              		.loc 1 117 5 view .LVU8
  62 001c 1B6E     		ldr	r3, [r3, #96]
  63 001e 03F40063 		and	r3, r3, #2048
  64 0022 0193     		str	r3, [sp, #4]
  65              		.loc 1 117 5 view .LVU9
  66 0024 019B     		ldr	r3, [sp, #4]
  67              	.LBE2:
  68              		.loc 1 117 5 view .LVU10
 118:Core/Src/tim.c **** 
 119:Core/Src/tim.c ****     /* TIM1 DMA Init */
 120:Core/Src/tim.c ****     /* TIM1_CH1 Init */
 121:Core/Src/tim.c ****     hdma_tim1_ch1.Instance = DMA1_Channel1;
  69              		.loc 1 121 5 view .LVU11
  70              		.loc 1 121 28 is_stmt 0 view .LVU12
  71 0026 1448     		ldr	r0, .L10+4
  72              	.LVL1:
  73              		.loc 1 121 28 view .LVU13
  74 0028 144B     		ldr	r3, .L10+8
  75 002a 0360     		str	r3, [r0]
 122:Core/Src/tim.c ****     hdma_tim1_ch1.Init.Request = DMA_REQUEST_TIM1_CH1;
  76              		.loc 1 122 5 is_stmt 1 view .LVU14
  77              		.loc 1 122 32 is_stmt 0 view .LVU15
  78 002c 2A23     		movs	r3, #42
  79 002e 4360     		str	r3, [r0, #4]
 123:Core/Src/tim.c ****     hdma_tim1_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
  80              		.loc 1 123 5 is_stmt 1 view .LVU16
  81              		.loc 1 123 34 is_stmt 0 view .LVU17
  82 0030 1023     		movs	r3, #16
  83 0032 8360     		str	r3, [r0, #8]
 124:Core/Src/tim.c ****     hdma_tim1_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
  84              		.loc 1 124 5 is_stmt 1 view .LVU18
  85              		.loc 1 124 34 is_stmt 0 view .LVU19
  86 0034 0023     		movs	r3, #0
  87 0036 C360     		str	r3, [r0, #12]
 125:Core/Src/tim.c ****     hdma_tim1_ch1.Init.MemInc = DMA_MINC_ENABLE;
  88              		.loc 1 125 5 is_stmt 1 view .LVU20
  89              		.loc 1 125 31 is_stmt 0 view .LVU21
  90 0038 8022     		movs	r2, #128
  91 003a 0261     		str	r2, [r0, #16]
 126:Core/Src/tim.c ****     hdma_tim1_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
  92              		.loc 1 126 5 is_stmt 1 view .LVU22
  93              		.loc 1 126 44 is_stmt 0 view .LVU23
  94 003c 4FF48072 		mov	r2, #256
  95 0040 4261     		str	r2, [r0, #20]
 127:Core/Src/tim.c ****     hdma_tim1_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
  96              		.loc 1 127 5 is_stmt 1 view .LVU24
  97              		.loc 1 127 41 is_stmt 0 view .LVU25
  98 0042 4FF48062 		mov	r2, #1024
  99 0046 8261     		str	r2, [r0, #24]
 128:Core/Src/tim.c ****     hdma_tim1_ch1.Init.Mode = DMA_CIRCULAR;
 100              		.loc 1 128 5 is_stmt 1 view .LVU26
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 5


 101              		.loc 1 128 29 is_stmt 0 view .LVU27
 102 0048 2022     		movs	r2, #32
 103 004a C261     		str	r2, [r0, #28]
 129:Core/Src/tim.c ****     hdma_tim1_ch1.Init.Priority = DMA_PRIORITY_LOW;
 104              		.loc 1 129 5 is_stmt 1 view .LVU28
 105              		.loc 1 129 33 is_stmt 0 view .LVU29
 106 004c 0362     		str	r3, [r0, #32]
 130:Core/Src/tim.c ****     if (HAL_DMA_Init(&hdma_tim1_ch1) != HAL_OK)
 107              		.loc 1 130 5 is_stmt 1 view .LVU30
 108              		.loc 1 130 9 is_stmt 0 view .LVU31
 109 004e FFF7FEFF 		bl	HAL_DMA_Init
 110              	.LVL2:
 111              		.loc 1 130 8 view .LVU32
 112 0052 60B9     		cbnz	r0, .L9
 113              	.L3:
 131:Core/Src/tim.c ****     {
 132:Core/Src/tim.c ****       Error_Handler();
 133:Core/Src/tim.c ****     }
 134:Core/Src/tim.c **** 
 135:Core/Src/tim.c ****     __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_CC1],hdma_tim1_ch1);
 114              		.loc 1 135 5 is_stmt 1 view .LVU33
 115              		.loc 1 135 5 view .LVU34
 116 0054 084B     		ldr	r3, .L10+4
 117 0056 6362     		str	r3, [r4, #36]
 118              		.loc 1 135 5 view .LVU35
 119 0058 9C62     		str	r4, [r3, #40]
 120              		.loc 1 135 5 view .LVU36
 136:Core/Src/tim.c **** 
 137:Core/Src/tim.c ****     /* TIM1 interrupt Init */
 138:Core/Src/tim.c ****     HAL_NVIC_SetPriority(TIM1_TRG_COM_TIM17_IRQn, 5, 0);
 121              		.loc 1 138 5 view .LVU37
 122 005a 0022     		movs	r2, #0
 123 005c 0521     		movs	r1, #5
 124 005e 1A20     		movs	r0, #26
 125 0060 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 126              	.LVL3:
 139:Core/Src/tim.c ****     HAL_NVIC_EnableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 127              		.loc 1 139 5 view .LVU38
 128 0064 1A20     		movs	r0, #26
 129 0066 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 130              	.LVL4:
 140:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 141:Core/Src/tim.c **** 
 142:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 143:Core/Src/tim.c ****   }
 144:Core/Src/tim.c **** }
 131              		.loc 1 144 1 is_stmt 0 view .LVU39
 132 006a 02B0     		add	sp, sp, #8
 133              	.LCFI2:
 134              		.cfi_remember_state
 135              		.cfi_def_cfa_offset 8
 136              		@ sp needed
 137 006c 10BD     		pop	{r4, pc}
 138              	.LVL5:
 139              	.L9:
 140              	.LCFI3:
 141              		.cfi_restore_state
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 6


 132:Core/Src/tim.c ****     }
 142              		.loc 1 132 7 is_stmt 1 view .LVU40
 143 006e FFF7FEFF 		bl	Error_Handler
 144              	.LVL6:
 145 0072 EFE7     		b	.L3
 146              	.L11:
 147              		.align	2
 148              	.L10:
 149 0074 002C0140 		.word	1073818624
 150 0078 00000000 		.word	hdma_tim1_ch1
 151 007c 08000240 		.word	1073872904
 152              		.cfi_endproc
 153              	.LFE133:
 155              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 156              		.align	1
 157              		.global	HAL_TIM_MspPostInit
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	HAL_TIM_MspPostInit:
 163              	.LVL7:
 164              	.LFB134:
 145:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 146:Core/Src/tim.c **** {
 165              		.loc 1 146 1 view -0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 24
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		.loc 1 146 1 is_stmt 0 view .LVU42
 170 0000 00B5     		push	{lr}
 171              	.LCFI4:
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 14, -4
 174 0002 87B0     		sub	sp, sp, #28
 175              	.LCFI5:
 176              		.cfi_def_cfa_offset 32
 147:Core/Src/tim.c **** 
 148:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 177              		.loc 1 148 3 is_stmt 1 view .LVU43
 178              		.loc 1 148 20 is_stmt 0 view .LVU44
 179 0004 0023     		movs	r3, #0
 180 0006 0193     		str	r3, [sp, #4]
 181 0008 0293     		str	r3, [sp, #8]
 182 000a 0393     		str	r3, [sp, #12]
 183 000c 0493     		str	r3, [sp, #16]
 184 000e 0593     		str	r3, [sp, #20]
 149:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
 185              		.loc 1 149 3 is_stmt 1 view .LVU45
 186              		.loc 1 149 15 is_stmt 0 view .LVU46
 187 0010 0268     		ldr	r2, [r0]
 188              		.loc 1 149 5 view .LVU47
 189 0012 0D4B     		ldr	r3, .L16
 190 0014 9A42     		cmp	r2, r3
 191 0016 02D0     		beq	.L15
 192              	.LVL8:
 193              	.L12:
 150:Core/Src/tim.c ****   {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 7


 151:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 152:Core/Src/tim.c **** 
 153:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 154:Core/Src/tim.c **** 
 155:Core/Src/tim.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 156:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 157:Core/Src/tim.c ****     PC0     ------> TIM1_CH1
 158:Core/Src/tim.c ****     */
 159:Core/Src/tim.c ****     GPIO_InitStruct.Pin = RGB_Pin;
 160:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 161:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 162:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 163:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 164:Core/Src/tim.c ****     HAL_GPIO_Init(RGB_GPIO_Port, &GPIO_InitStruct);
 165:Core/Src/tim.c **** 
 166:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 167:Core/Src/tim.c **** 
 168:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 169:Core/Src/tim.c ****   }
 170:Core/Src/tim.c **** 
 171:Core/Src/tim.c **** }
 194              		.loc 1 171 1 view .LVU48
 195 0018 07B0     		add	sp, sp, #28
 196              	.LCFI6:
 197              		.cfi_remember_state
 198              		.cfi_def_cfa_offset 4
 199              		@ sp needed
 200 001a 5DF804FB 		ldr	pc, [sp], #4
 201              	.LVL9:
 202              	.L15:
 203              	.LCFI7:
 204              		.cfi_restore_state
 155:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 205              		.loc 1 155 5 is_stmt 1 view .LVU49
 206              	.LBB3:
 155:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 207              		.loc 1 155 5 view .LVU50
 155:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 208              		.loc 1 155 5 view .LVU51
 209 001e 03F56443 		add	r3, r3, #58368
 210 0022 DA6C     		ldr	r2, [r3, #76]
 211 0024 42F00402 		orr	r2, r2, #4
 212 0028 DA64     		str	r2, [r3, #76]
 155:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 213              		.loc 1 155 5 view .LVU52
 214 002a DB6C     		ldr	r3, [r3, #76]
 215 002c 03F00403 		and	r3, r3, #4
 216 0030 0093     		str	r3, [sp]
 155:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 217              		.loc 1 155 5 view .LVU53
 218 0032 009B     		ldr	r3, [sp]
 219              	.LBE3:
 155:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 220              		.loc 1 155 5 view .LVU54
 159:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 221              		.loc 1 159 5 view .LVU55
 159:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 8


 222              		.loc 1 159 25 is_stmt 0 view .LVU56
 223 0034 0123     		movs	r3, #1
 224 0036 0193     		str	r3, [sp, #4]
 160:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 225              		.loc 1 160 5 is_stmt 1 view .LVU57
 160:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 226              		.loc 1 160 26 is_stmt 0 view .LVU58
 227 0038 0223     		movs	r3, #2
 228 003a 0293     		str	r3, [sp, #8]
 161:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 229              		.loc 1 161 5 is_stmt 1 view .LVU59
 162:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM1;
 230              		.loc 1 162 5 view .LVU60
 163:Core/Src/tim.c ****     HAL_GPIO_Init(RGB_GPIO_Port, &GPIO_InitStruct);
 231              		.loc 1 163 5 view .LVU61
 163:Core/Src/tim.c ****     HAL_GPIO_Init(RGB_GPIO_Port, &GPIO_InitStruct);
 232              		.loc 1 163 31 is_stmt 0 view .LVU62
 233 003c 0593     		str	r3, [sp, #20]
 164:Core/Src/tim.c **** 
 234              		.loc 1 164 5 is_stmt 1 view .LVU63
 235 003e 01A9     		add	r1, sp, #4
 236 0040 0248     		ldr	r0, .L16+4
 237              	.LVL10:
 164:Core/Src/tim.c **** 
 238              		.loc 1 164 5 is_stmt 0 view .LVU64
 239 0042 FFF7FEFF 		bl	HAL_GPIO_Init
 240              	.LVL11:
 241              		.loc 1 171 1 view .LVU65
 242 0046 E7E7     		b	.L12
 243              	.L17:
 244              		.align	2
 245              	.L16:
 246 0048 002C0140 		.word	1073818624
 247 004c 00080048 		.word	1207961600
 248              		.cfi_endproc
 249              	.LFE134:
 251              		.section	.text.MX_TIM1_Init,"ax",%progbits
 252              		.align	1
 253              		.global	MX_TIM1_Init
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	MX_TIM1_Init:
 259              	.LFB132:
  32:Core/Src/tim.c **** 
 260              		.loc 1 32 1 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 112
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 10B5     		push	{r4, lr}
 265              	.LCFI8:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 4, -8
 268              		.cfi_offset 14, -4
 269 0002 9CB0     		sub	sp, sp, #112
 270              	.LCFI9:
 271              		.cfi_def_cfa_offset 120
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 9


  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 272              		.loc 1 38 3 view .LVU67
  38:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 273              		.loc 1 38 26 is_stmt 0 view .LVU68
 274 0004 0024     		movs	r4, #0
 275 0006 1894     		str	r4, [sp, #96]
 276 0008 1994     		str	r4, [sp, #100]
 277 000a 1A94     		str	r4, [sp, #104]
 278 000c 1B94     		str	r4, [sp, #108]
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 279              		.loc 1 39 3 is_stmt 1 view .LVU69
  39:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 280              		.loc 1 39 27 is_stmt 0 view .LVU70
 281 000e 1594     		str	r4, [sp, #84]
 282 0010 1694     		str	r4, [sp, #88]
 283 0012 1794     		str	r4, [sp, #92]
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 284              		.loc 1 40 3 is_stmt 1 view .LVU71
  40:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 285              		.loc 1 40 22 is_stmt 0 view .LVU72
 286 0014 0E94     		str	r4, [sp, #56]
 287 0016 0F94     		str	r4, [sp, #60]
 288 0018 1094     		str	r4, [sp, #64]
 289 001a 1194     		str	r4, [sp, #68]
 290 001c 1294     		str	r4, [sp, #72]
 291 001e 1394     		str	r4, [sp, #76]
 292 0020 1494     		str	r4, [sp, #80]
  41:Core/Src/tim.c **** 
 293              		.loc 1 41 3 is_stmt 1 view .LVU73
  41:Core/Src/tim.c **** 
 294              		.loc 1 41 34 is_stmt 0 view .LVU74
 295 0022 3422     		movs	r2, #52
 296 0024 2146     		mov	r1, r4
 297 0026 01A8     		add	r0, sp, #4
 298 0028 FFF7FEFF 		bl	memset
 299              	.LVL12:
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 300              		.loc 1 46 3 is_stmt 1 view .LVU75
  46:Core/Src/tim.c ****   htim1.Init.Prescaler = 0;
 301              		.loc 1 46 18 is_stmt 0 view .LVU76
 302 002c 3048     		ldr	r0, .L32
 303 002e 314B     		ldr	r3, .L32+4
 304 0030 0360     		str	r3, [r0]
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 305              		.loc 1 47 3 is_stmt 1 view .LVU77
  47:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 306              		.loc 1 47 24 is_stmt 0 view .LVU78
 307 0032 4460     		str	r4, [r0, #4]
  48:Core/Src/tim.c ****   htim1.Init.Period = 19;
 308              		.loc 1 48 3 is_stmt 1 view .LVU79
  48:Core/Src/tim.c ****   htim1.Init.Period = 19;
 309              		.loc 1 48 26 is_stmt 0 view .LVU80
 310 0034 8460     		str	r4, [r0, #8]
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 311              		.loc 1 49 3 is_stmt 1 view .LVU81
  49:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 312              		.loc 1 49 21 is_stmt 0 view .LVU82
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 10


 313 0036 1323     		movs	r3, #19
 314 0038 C360     		str	r3, [r0, #12]
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 315              		.loc 1 50 3 is_stmt 1 view .LVU83
  50:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 316              		.loc 1 50 28 is_stmt 0 view .LVU84
 317 003a 0461     		str	r4, [r0, #16]
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 318              		.loc 1 51 3 is_stmt 1 view .LVU85
  51:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 319              		.loc 1 51 32 is_stmt 0 view .LVU86
 320 003c 4461     		str	r4, [r0, #20]
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 321              		.loc 1 52 3 is_stmt 1 view .LVU87
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 322              		.loc 1 52 32 is_stmt 0 view .LVU88
 323 003e 8461     		str	r4, [r0, #24]
  53:Core/Src/tim.c ****   {
 324              		.loc 1 53 3 is_stmt 1 view .LVU89
  53:Core/Src/tim.c ****   {
 325              		.loc 1 53 7 is_stmt 0 view .LVU90
 326 0040 FFF7FEFF 		bl	HAL_TIM_Base_Init
 327              	.LVL13:
  53:Core/Src/tim.c ****   {
 328              		.loc 1 53 6 view .LVU91
 329 0044 0028     		cmp	r0, #0
 330 0046 41D1     		bne	.L26
 331              	.L19:
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 332              		.loc 1 57 3 is_stmt 1 view .LVU92
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 333              		.loc 1 57 34 is_stmt 0 view .LVU93
 334 0048 4FF48053 		mov	r3, #4096
 335 004c 1893     		str	r3, [sp, #96]
  58:Core/Src/tim.c ****   {
 336              		.loc 1 58 3 is_stmt 1 view .LVU94
  58:Core/Src/tim.c ****   {
 337              		.loc 1 58 7 is_stmt 0 view .LVU95
 338 004e 18A9     		add	r1, sp, #96
 339 0050 2748     		ldr	r0, .L32
 340 0052 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 341              	.LVL14:
  58:Core/Src/tim.c ****   {
 342              		.loc 1 58 6 view .LVU96
 343 0056 0028     		cmp	r0, #0
 344 0058 3BD1     		bne	.L27
 345              	.L20:
  62:Core/Src/tim.c ****   {
 346              		.loc 1 62 3 is_stmt 1 view .LVU97
  62:Core/Src/tim.c ****   {
 347              		.loc 1 62 7 is_stmt 0 view .LVU98
 348 005a 2548     		ldr	r0, .L32
 349 005c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 350              	.LVL15:
  62:Core/Src/tim.c ****   {
 351              		.loc 1 62 6 view .LVU99
 352 0060 0028     		cmp	r0, #0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 11


 353 0062 39D1     		bne	.L28
 354              	.L21:
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 355              		.loc 1 66 3 is_stmt 1 view .LVU100
  66:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 356              		.loc 1 66 37 is_stmt 0 view .LVU101
 357 0064 0023     		movs	r3, #0
 358 0066 1593     		str	r3, [sp, #84]
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 359              		.loc 1 67 3 is_stmt 1 view .LVU102
  67:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 360              		.loc 1 67 38 is_stmt 0 view .LVU103
 361 0068 1693     		str	r3, [sp, #88]
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 362              		.loc 1 68 3 is_stmt 1 view .LVU104
  68:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 363              		.loc 1 68 33 is_stmt 0 view .LVU105
 364 006a 1793     		str	r3, [sp, #92]
  69:Core/Src/tim.c ****   {
 365              		.loc 1 69 3 is_stmt 1 view .LVU106
  69:Core/Src/tim.c ****   {
 366              		.loc 1 69 7 is_stmt 0 view .LVU107
 367 006c 15A9     		add	r1, sp, #84
 368 006e 2048     		ldr	r0, .L32
 369 0070 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 370              	.LVL16:
  69:Core/Src/tim.c ****   {
 371              		.loc 1 69 6 view .LVU108
 372 0074 0028     		cmp	r0, #0
 373 0076 32D1     		bne	.L29
 374              	.L22:
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 375              		.loc 1 73 3 is_stmt 1 view .LVU109
  73:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 376              		.loc 1 73 20 is_stmt 0 view .LVU110
 377 0078 6023     		movs	r3, #96
 378 007a 0E93     		str	r3, [sp, #56]
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 379              		.loc 1 74 3 is_stmt 1 view .LVU111
  74:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 380              		.loc 1 74 19 is_stmt 0 view .LVU112
 381 007c 0022     		movs	r2, #0
 382 007e 0F92     		str	r2, [sp, #60]
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 383              		.loc 1 75 3 is_stmt 1 view .LVU113
  75:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 384              		.loc 1 75 24 is_stmt 0 view .LVU114
 385 0080 1092     		str	r2, [sp, #64]
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 386              		.loc 1 76 3 is_stmt 1 view .LVU115
  76:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 387              		.loc 1 76 25 is_stmt 0 view .LVU116
 388 0082 1192     		str	r2, [sp, #68]
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 389              		.loc 1 77 3 is_stmt 1 view .LVU117
  77:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 390              		.loc 1 77 24 is_stmt 0 view .LVU118
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 12


 391 0084 1292     		str	r2, [sp, #72]
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 392              		.loc 1 78 3 is_stmt 1 view .LVU119
  78:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 393              		.loc 1 78 25 is_stmt 0 view .LVU120
 394 0086 1392     		str	r2, [sp, #76]
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 395              		.loc 1 79 3 is_stmt 1 view .LVU121
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 396              		.loc 1 79 26 is_stmt 0 view .LVU122
 397 0088 1492     		str	r2, [sp, #80]
  80:Core/Src/tim.c ****   {
 398              		.loc 1 80 3 is_stmt 1 view .LVU123
  80:Core/Src/tim.c ****   {
 399              		.loc 1 80 7 is_stmt 0 view .LVU124
 400 008a 0EA9     		add	r1, sp, #56
 401 008c 1848     		ldr	r0, .L32
 402 008e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 403              	.LVL17:
  80:Core/Src/tim.c ****   {
 404              		.loc 1 80 6 view .LVU125
 405 0092 38BB     		cbnz	r0, .L30
 406              	.L23:
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 407              		.loc 1 84 3 is_stmt 1 view .LVU126
  84:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 408              		.loc 1 84 40 is_stmt 0 view .LVU127
 409 0094 0023     		movs	r3, #0
 410 0096 0193     		str	r3, [sp, #4]
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 411              		.loc 1 85 3 is_stmt 1 view .LVU128
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 412              		.loc 1 85 41 is_stmt 0 view .LVU129
 413 0098 0293     		str	r3, [sp, #8]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 414              		.loc 1 86 3 is_stmt 1 view .LVU130
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 415              		.loc 1 86 34 is_stmt 0 view .LVU131
 416 009a 0393     		str	r3, [sp, #12]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 417              		.loc 1 87 3 is_stmt 1 view .LVU132
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 418              		.loc 1 87 33 is_stmt 0 view .LVU133
 419 009c 0493     		str	r3, [sp, #16]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 420              		.loc 1 88 3 is_stmt 1 view .LVU134
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 421              		.loc 1 88 35 is_stmt 0 view .LVU135
 422 009e 0593     		str	r3, [sp, #20]
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 423              		.loc 1 89 3 is_stmt 1 view .LVU136
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 424              		.loc 1 89 38 is_stmt 0 view .LVU137
 425 00a0 4FF40052 		mov	r2, #8192
 426 00a4 0692     		str	r2, [sp, #24]
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 427              		.loc 1 90 3 is_stmt 1 view .LVU138
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 13


  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 428              		.loc 1 90 36 is_stmt 0 view .LVU139
 429 00a6 0793     		str	r3, [sp, #28]
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 430              		.loc 1 91 3 is_stmt 1 view .LVU140
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 431              		.loc 1 91 36 is_stmt 0 view .LVU141
 432 00a8 0893     		str	r3, [sp, #32]
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 433              		.loc 1 92 3 is_stmt 1 view .LVU142
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 434              		.loc 1 92 36 is_stmt 0 view .LVU143
 435 00aa 0993     		str	r3, [sp, #36]
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 436              		.loc 1 93 3 is_stmt 1 view .LVU144
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 437              		.loc 1 93 39 is_stmt 0 view .LVU145
 438 00ac 4FF00072 		mov	r2, #33554432
 439 00b0 0A92     		str	r2, [sp, #40]
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 440              		.loc 1 94 3 is_stmt 1 view .LVU146
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 441              		.loc 1 94 37 is_stmt 0 view .LVU147
 442 00b2 0B93     		str	r3, [sp, #44]
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 443              		.loc 1 95 3 is_stmt 1 view .LVU148
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 444              		.loc 1 95 37 is_stmt 0 view .LVU149
 445 00b4 0C93     		str	r3, [sp, #48]
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 446              		.loc 1 96 3 is_stmt 1 view .LVU150
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 447              		.loc 1 96 40 is_stmt 0 view .LVU151
 448 00b6 0D93     		str	r3, [sp, #52]
  97:Core/Src/tim.c ****   {
 449              		.loc 1 97 3 is_stmt 1 view .LVU152
  97:Core/Src/tim.c ****   {
 450              		.loc 1 97 7 is_stmt 0 view .LVU153
 451 00b8 01A9     		add	r1, sp, #4
 452 00ba 0D48     		ldr	r0, .L32
 453 00bc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 454              	.LVL18:
  97:Core/Src/tim.c ****   {
 455              		.loc 1 97 6 view .LVU154
 456 00c0 98B9     		cbnz	r0, .L31
 457              	.L24:
 104:Core/Src/tim.c **** 
 458              		.loc 1 104 3 is_stmt 1 view .LVU155
 459 00c2 0B48     		ldr	r0, .L32
 460 00c4 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 461              	.LVL19:
 106:Core/Src/tim.c **** 
 462              		.loc 1 106 1 is_stmt 0 view .LVU156
 463 00c8 1CB0     		add	sp, sp, #112
 464              	.LCFI10:
 465              		.cfi_remember_state
 466              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 14


 467              		@ sp needed
 468 00ca 10BD     		pop	{r4, pc}
 469              	.L26:
 470              	.LCFI11:
 471              		.cfi_restore_state
  55:Core/Src/tim.c ****   }
 472              		.loc 1 55 5 is_stmt 1 view .LVU157
 473 00cc FFF7FEFF 		bl	Error_Handler
 474              	.LVL20:
 475 00d0 BAE7     		b	.L19
 476              	.L27:
  60:Core/Src/tim.c ****   }
 477              		.loc 1 60 5 view .LVU158
 478 00d2 FFF7FEFF 		bl	Error_Handler
 479              	.LVL21:
 480 00d6 C0E7     		b	.L20
 481              	.L28:
  64:Core/Src/tim.c ****   }
 482              		.loc 1 64 5 view .LVU159
 483 00d8 FFF7FEFF 		bl	Error_Handler
 484              	.LVL22:
 485 00dc C2E7     		b	.L21
 486              	.L29:
  71:Core/Src/tim.c ****   }
 487              		.loc 1 71 5 view .LVU160
 488 00de FFF7FEFF 		bl	Error_Handler
 489              	.LVL23:
 490 00e2 C9E7     		b	.L22
 491              	.L30:
  82:Core/Src/tim.c ****   }
 492              		.loc 1 82 5 view .LVU161
 493 00e4 FFF7FEFF 		bl	Error_Handler
 494              	.LVL24:
 495 00e8 D4E7     		b	.L23
 496              	.L31:
  99:Core/Src/tim.c ****   }
 497              		.loc 1 99 5 view .LVU162
 498 00ea FFF7FEFF 		bl	Error_Handler
 499              	.LVL25:
 500 00ee E8E7     		b	.L24
 501              	.L33:
 502              		.align	2
 503              	.L32:
 504 00f0 00000000 		.word	htim1
 505 00f4 002C0140 		.word	1073818624
 506              		.cfi_endproc
 507              	.LFE132:
 509              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_TIM_Base_MspDeInit
 512              		.syntax unified
 513              		.thumb
 514              		.thumb_func
 516              	HAL_TIM_Base_MspDeInit:
 517              	.LVL26:
 518              	.LFB135:
 172:Core/Src/tim.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 15


 173:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 174:Core/Src/tim.c **** {
 519              		.loc 1 174 1 view -0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		.loc 1 174 1 is_stmt 0 view .LVU164
 524 0000 08B5     		push	{r3, lr}
 525              	.LCFI12:
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 3, -8
 528              		.cfi_offset 14, -4
 175:Core/Src/tim.c **** 
 176:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 529              		.loc 1 176 3 is_stmt 1 view .LVU165
 530              		.loc 1 176 20 is_stmt 0 view .LVU166
 531 0002 0268     		ldr	r2, [r0]
 532              		.loc 1 176 5 view .LVU167
 533 0004 074B     		ldr	r3, .L38
 534 0006 9A42     		cmp	r2, r3
 535 0008 00D0     		beq	.L37
 536              	.LVL27:
 537              	.L34:
 177:Core/Src/tim.c ****   {
 178:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 179:Core/Src/tim.c **** 
 180:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 181:Core/Src/tim.c ****     /* Peripheral clock disable */
 182:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 183:Core/Src/tim.c **** 
 184:Core/Src/tim.c ****     /* TIM1 DMA DeInit */
 185:Core/Src/tim.c ****     HAL_DMA_DeInit(tim_baseHandle->hdma[TIM_DMA_ID_CC1]);
 186:Core/Src/tim.c **** 
 187:Core/Src/tim.c ****     /* TIM1 interrupt Deinit */
 188:Core/Src/tim.c ****     HAL_NVIC_DisableIRQ(TIM1_TRG_COM_TIM17_IRQn);
 189:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 190:Core/Src/tim.c **** 
 191:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 192:Core/Src/tim.c ****   }
 193:Core/Src/tim.c **** }
 538              		.loc 1 193 1 view .LVU168
 539 000a 08BD     		pop	{r3, pc}
 540              	.LVL28:
 541              	.L37:
 182:Core/Src/tim.c **** 
 542              		.loc 1 182 5 is_stmt 1 view .LVU169
 543 000c 064A     		ldr	r2, .L38+4
 544 000e 136E     		ldr	r3, [r2, #96]
 545 0010 23F40063 		bic	r3, r3, #2048
 546 0014 1366     		str	r3, [r2, #96]
 185:Core/Src/tim.c **** 
 547              		.loc 1 185 5 view .LVU170
 548 0016 406A     		ldr	r0, [r0, #36]
 549              	.LVL29:
 185:Core/Src/tim.c **** 
 550              		.loc 1 185 5 is_stmt 0 view .LVU171
 551 0018 FFF7FEFF 		bl	HAL_DMA_DeInit
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 16


 552              	.LVL30:
 188:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 553              		.loc 1 188 5 is_stmt 1 view .LVU172
 554 001c 1A20     		movs	r0, #26
 555 001e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 556              	.LVL31:
 557              		.loc 1 193 1 is_stmt 0 view .LVU173
 558 0022 F2E7     		b	.L34
 559              	.L39:
 560              		.align	2
 561              	.L38:
 562 0024 002C0140 		.word	1073818624
 563 0028 00100240 		.word	1073876992
 564              		.cfi_endproc
 565              	.LFE135:
 567              		.global	hdma_tim1_ch1
 568              		.section	.bss.hdma_tim1_ch1,"aw",%nobits
 569              		.align	2
 572              	hdma_tim1_ch1:
 573 0000 00000000 		.space	96
 573      00000000 
 573      00000000 
 573      00000000 
 573      00000000 
 574              		.global	htim1
 575              		.section	.bss.htim1,"aw",%nobits
 576              		.align	2
 579              	htim1:
 580 0000 00000000 		.space	76
 580      00000000 
 580      00000000 
 580      00000000 
 580      00000000 
 581              		.text
 582              	.Letext0:
 583              		.file 2 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 584              		.file 3 "/usr/local/include/_types/_uint8_t.h"
 585              		.file 4 "/usr/local/include/_types/_uint16_t.h"
 586              		.file 5 "/usr/local/include/_types/_uint32_t.h"
 587              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 588              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 589              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 590              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 591              		.file 10 "Core/Inc/tim.h"
 592              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 593              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 594              		.file 13 "Core/Inc/main.h"
 595              		.file 14 "<built-in>"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:21     .text.HAL_TIM_Base_MspInit:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:27     .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:149    .text.HAL_TIM_Base_MspInit:00000074 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:572    .bss.hdma_tim1_ch1:00000000 hdma_tim1_ch1
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:156    .text.HAL_TIM_MspPostInit:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:162    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:246    .text.HAL_TIM_MspPostInit:00000048 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:252    .text.MX_TIM1_Init:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:258    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:504    .text.MX_TIM1_Init:000000f0 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:579    .bss.htim1:00000000 htim1
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:510    .text.HAL_TIM_Base_MspDeInit:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:516    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:562    .text.HAL_TIM_Base_MspDeInit:00000024 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:569    .bss.hdma_tim1_ch1:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccOcDtn9.s:576    .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
Error_Handler
HAL_GPIO_Init
memset
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
