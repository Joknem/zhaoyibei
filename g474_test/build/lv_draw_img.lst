ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_draw_img.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/draw/lv_draw_img.c"
  20              		.section	.text.draw_cleanup,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	draw_cleanup:
  27              	.LVL0:
  28              	.LFB170:
   1:lvgl/src/draw/lv_draw_img.c **** /**
   2:lvgl/src/draw/lv_draw_img.c ****  * @file lv_draw_img.c
   3:lvgl/src/draw/lv_draw_img.c ****  *
   4:lvgl/src/draw/lv_draw_img.c ****  */
   5:lvgl/src/draw/lv_draw_img.c **** 
   6:lvgl/src/draw/lv_draw_img.c **** /*********************
   7:lvgl/src/draw/lv_draw_img.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_draw_img.c ****  *********************/
   9:lvgl/src/draw/lv_draw_img.c **** #include "lv_draw_img.h"
  10:lvgl/src/draw/lv_draw_img.c **** #include "lv_img_cache.h"
  11:lvgl/src/draw/lv_draw_img.c **** #include "../hal/lv_hal_disp.h"
  12:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_log.h"
  13:lvgl/src/draw/lv_draw_img.c **** #include "../core/lv_refr.h"
  14:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_mem.h"
  15:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_math.h"
  16:lvgl/src/draw/lv_draw_img.c **** 
  17:lvgl/src/draw/lv_draw_img.c **** /*********************
  18:lvgl/src/draw/lv_draw_img.c ****  *      DEFINES
  19:lvgl/src/draw/lv_draw_img.c ****  *********************/
  20:lvgl/src/draw/lv_draw_img.c **** 
  21:lvgl/src/draw/lv_draw_img.c **** /**********************
  22:lvgl/src/draw/lv_draw_img.c ****  *      TYPEDEFS
  23:lvgl/src/draw/lv_draw_img.c ****  **********************/
  24:lvgl/src/draw/lv_draw_img.c **** 
  25:lvgl/src/draw/lv_draw_img.c **** /**********************
  26:lvgl/src/draw/lv_draw_img.c ****  *  STATIC PROTOTYPES
  27:lvgl/src/draw/lv_draw_img.c ****  **********************/
  28:lvgl/src/draw/lv_draw_img.c **** static lv_res_t /* LV_ATTRIBUTE_FAST_MEM */ decode_and_draw(lv_draw_ctx_t * draw_ctx,
  29:lvgl/src/draw/lv_draw_img.c ****                                                             const lv_draw_img_dsc_t * draw_dsc,
  30:lvgl/src/draw/lv_draw_img.c ****                                                             const lv_area_t * coords, const void * 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 2


  31:lvgl/src/draw/lv_draw_img.c **** 
  32:lvgl/src/draw/lv_draw_img.c **** static void show_error(lv_draw_ctx_t * draw_ctx, const lv_area_t * coords, const char * msg);
  33:lvgl/src/draw/lv_draw_img.c **** static void draw_cleanup(_lv_img_cache_entry_t * cache);
  34:lvgl/src/draw/lv_draw_img.c **** 
  35:lvgl/src/draw/lv_draw_img.c **** /**********************
  36:lvgl/src/draw/lv_draw_img.c ****  *  STATIC VARIABLES
  37:lvgl/src/draw/lv_draw_img.c ****  **********************/
  38:lvgl/src/draw/lv_draw_img.c **** 
  39:lvgl/src/draw/lv_draw_img.c **** /**********************
  40:lvgl/src/draw/lv_draw_img.c ****  *      MACROS
  41:lvgl/src/draw/lv_draw_img.c ****  **********************/
  42:lvgl/src/draw/lv_draw_img.c **** 
  43:lvgl/src/draw/lv_draw_img.c **** /**********************
  44:lvgl/src/draw/lv_draw_img.c ****  *   GLOBAL FUNCTIONS
  45:lvgl/src/draw/lv_draw_img.c ****  **********************/
  46:lvgl/src/draw/lv_draw_img.c **** 
  47:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img_dsc_init(lv_draw_img_dsc_t * dsc)
  48:lvgl/src/draw/lv_draw_img.c **** {
  49:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
  50:lvgl/src/draw/lv_draw_img.c ****     dsc->recolor = lv_color_black();
  51:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
  52:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
  53:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
  54:lvgl/src/draw/lv_draw_img.c **** }
  55:lvgl/src/draw/lv_draw_img.c **** 
  56:lvgl/src/draw/lv_draw_img.c **** /**
  57:lvgl/src/draw/lv_draw_img.c ****  * Draw an image
  58:lvgl/src/draw/lv_draw_img.c ****  * @param coords the coordinates of the image
  59:lvgl/src/draw/lv_draw_img.c ****  * @param mask the image will be drawn only in this area
  60:lvgl/src/draw/lv_draw_img.c ****  * @param src pointer to a lv_color_t array which contains the pixels of the image
  61:lvgl/src/draw/lv_draw_img.c ****  * @param dsc pointer to an initialized `lv_draw_img_dsc_t` variable
  62:lvgl/src/draw/lv_draw_img.c ****  */
  63:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img(lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * dsc, const lv_area_t * coords,
  64:lvgl/src/draw/lv_draw_img.c **** {
  65:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
  66:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
  67:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
  68:lvgl/src/draw/lv_draw_img.c ****         return;
  69:lvgl/src/draw/lv_draw_img.c ****     }
  70:lvgl/src/draw/lv_draw_img.c **** 
  71:lvgl/src/draw/lv_draw_img.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  72:lvgl/src/draw/lv_draw_img.c **** 
  73:lvgl/src/draw/lv_draw_img.c ****     lv_res_t res = LV_RES_INV;
  74:lvgl/src/draw/lv_draw_img.c **** 
  75:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img) {
  76:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
  77:lvgl/src/draw/lv_draw_img.c ****     }
  78:lvgl/src/draw/lv_draw_img.c **** 
  79:lvgl/src/draw/lv_draw_img.c ****     if(res != LV_RES_OK) {
  80:lvgl/src/draw/lv_draw_img.c ****         res = decode_and_draw(draw_ctx, dsc, coords, src);
  81:lvgl/src/draw/lv_draw_img.c ****     }
  82:lvgl/src/draw/lv_draw_img.c **** 
  83:lvgl/src/draw/lv_draw_img.c ****     if(res != LV_RES_OK) {
  84:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
  85:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
  86:lvgl/src/draw/lv_draw_img.c ****     }
  87:lvgl/src/draw/lv_draw_img.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 3


  88:lvgl/src/draw/lv_draw_img.c **** 
  89:lvgl/src/draw/lv_draw_img.c **** /**
  90:lvgl/src/draw/lv_draw_img.c ****  * Get the pixel size of a color format in bits
  91:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
  92:lvgl/src/draw/lv_draw_img.c ****  * @return the pixel size in bits
  93:lvgl/src/draw/lv_draw_img.c ****  */
  94:lvgl/src/draw/lv_draw_img.c **** uint8_t lv_img_cf_get_px_size(lv_img_cf_t cf)
  95:lvgl/src/draw/lv_draw_img.c **** {
  96:lvgl/src/draw/lv_draw_img.c ****     uint8_t px_size = 0;
  97:lvgl/src/draw/lv_draw_img.c **** 
  98:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
  99:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 100:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW:
 101:lvgl/src/draw/lv_draw_img.c ****             px_size = 0;
 102:lvgl/src/draw/lv_draw_img.c ****             break;
 103:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR:
 104:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 105:lvgl/src/draw/lv_draw_img.c ****             px_size = LV_COLOR_SIZE;
 106:lvgl/src/draw/lv_draw_img.c ****             break;
 107:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 108:lvgl/src/draw/lv_draw_img.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE << 3;
 109:lvgl/src/draw/lv_draw_img.c ****             break;
 110:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 111:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_1BIT:
 112:lvgl/src/draw/lv_draw_img.c ****             px_size = 1;
 113:lvgl/src/draw/lv_draw_img.c ****             break;
 114:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 115:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_2BIT:
 116:lvgl/src/draw/lv_draw_img.c ****             px_size = 2;
 117:lvgl/src/draw/lv_draw_img.c ****             break;
 118:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 119:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_4BIT:
 120:lvgl/src/draw/lv_draw_img.c ****             px_size = 4;
 121:lvgl/src/draw/lv_draw_img.c ****             break;
 122:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 123:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_8BIT:
 124:lvgl/src/draw/lv_draw_img.c ****             px_size = 8;
 125:lvgl/src/draw/lv_draw_img.c ****             break;
 126:lvgl/src/draw/lv_draw_img.c ****         default:
 127:lvgl/src/draw/lv_draw_img.c ****             px_size = 0;
 128:lvgl/src/draw/lv_draw_img.c ****             break;
 129:lvgl/src/draw/lv_draw_img.c ****     }
 130:lvgl/src/draw/lv_draw_img.c **** 
 131:lvgl/src/draw/lv_draw_img.c ****     return px_size;
 132:lvgl/src/draw/lv_draw_img.c **** }
 133:lvgl/src/draw/lv_draw_img.c **** 
 134:lvgl/src/draw/lv_draw_img.c **** /**
 135:lvgl/src/draw/lv_draw_img.c ****  * Check if a color format is chroma keyed or not
 136:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 137:lvgl/src/draw/lv_draw_img.c ****  * @return true: chroma keyed; false: not chroma keyed
 138:lvgl/src/draw/lv_draw_img.c ****  */
 139:lvgl/src/draw/lv_draw_img.c **** bool lv_img_cf_is_chroma_keyed(lv_img_cf_t cf)
 140:lvgl/src/draw/lv_draw_img.c **** {
 141:lvgl/src/draw/lv_draw_img.c ****     bool is_chroma_keyed = false;
 142:lvgl/src/draw/lv_draw_img.c **** 
 143:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 144:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 4


 145:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW_CHROMA_KEYED:
 146:lvgl/src/draw/lv_draw_img.c ****             is_chroma_keyed = true;
 147:lvgl/src/draw/lv_draw_img.c ****             break;
 148:lvgl/src/draw/lv_draw_img.c **** 
 149:lvgl/src/draw/lv_draw_img.c ****         default:
 150:lvgl/src/draw/lv_draw_img.c ****             is_chroma_keyed = false;
 151:lvgl/src/draw/lv_draw_img.c ****             break;
 152:lvgl/src/draw/lv_draw_img.c ****     }
 153:lvgl/src/draw/lv_draw_img.c **** 
 154:lvgl/src/draw/lv_draw_img.c ****     return is_chroma_keyed;
 155:lvgl/src/draw/lv_draw_img.c **** }
 156:lvgl/src/draw/lv_draw_img.c **** 
 157:lvgl/src/draw/lv_draw_img.c **** /**
 158:lvgl/src/draw/lv_draw_img.c ****  * Check if a color format has alpha channel or not
 159:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 160:lvgl/src/draw/lv_draw_img.c ****  * @return true: has alpha channel; false: doesn't have alpha channel
 161:lvgl/src/draw/lv_draw_img.c ****  */
 162:lvgl/src/draw/lv_draw_img.c **** bool lv_img_cf_has_alpha(lv_img_cf_t cf)
 163:lvgl/src/draw/lv_draw_img.c **** {
 164:lvgl/src/draw/lv_draw_img.c ****     bool has_alpha = false;
 165:lvgl/src/draw/lv_draw_img.c **** 
 166:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 167:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 168:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW_ALPHA:
 169:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 170:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 171:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 172:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 173:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_1BIT:
 174:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_2BIT:
 175:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_4BIT:
 176:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_8BIT:
 177:lvgl/src/draw/lv_draw_img.c ****             has_alpha = true;
 178:lvgl/src/draw/lv_draw_img.c ****             break;
 179:lvgl/src/draw/lv_draw_img.c ****         default:
 180:lvgl/src/draw/lv_draw_img.c ****             has_alpha = false;
 181:lvgl/src/draw/lv_draw_img.c ****             break;
 182:lvgl/src/draw/lv_draw_img.c ****     }
 183:lvgl/src/draw/lv_draw_img.c **** 
 184:lvgl/src/draw/lv_draw_img.c ****     return has_alpha;
 185:lvgl/src/draw/lv_draw_img.c **** }
 186:lvgl/src/draw/lv_draw_img.c **** 
 187:lvgl/src/draw/lv_draw_img.c **** /**
 188:lvgl/src/draw/lv_draw_img.c ****  * Get the type of an image source
 189:lvgl/src/draw/lv_draw_img.c ****  * @param src pointer to an image source:
 190:lvgl/src/draw/lv_draw_img.c ****  *  - pointer to an 'lv_img_t' variable (image stored internally and compiled into the code)
 191:lvgl/src/draw/lv_draw_img.c ****  *  - a path to a file (e.g. "S:/folder/image.bin")
 192:lvgl/src/draw/lv_draw_img.c ****  *  - or a symbol (e.g. LV_SYMBOL_CLOSE)
 193:lvgl/src/draw/lv_draw_img.c ****  * @return type of the image source LV_IMG_SRC_VARIABLE/FILE/SYMBOL/UNKNOWN
 194:lvgl/src/draw/lv_draw_img.c ****  */
 195:lvgl/src/draw/lv_draw_img.c **** lv_img_src_t lv_img_src_get_type(const void * src)
 196:lvgl/src/draw/lv_draw_img.c **** {
 197:lvgl/src/draw/lv_draw_img.c ****     lv_img_src_t img_src_type = LV_IMG_SRC_UNKNOWN;
 198:lvgl/src/draw/lv_draw_img.c **** 
 199:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) return img_src_type;
 200:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 201:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 5


 202:lvgl/src/draw/lv_draw_img.c ****     /*The first or fourth byte depending on platform endianess shows the type of the image source*/
 203:lvgl/src/draw/lv_draw_img.c **** #if LV_BIG_ENDIAN_SYSTEM
 204:lvgl/src/draw/lv_draw_img.c ****     if(u8_p[3] >= 0x20 && u8_p[3] <= 0x7F) {
 205:lvgl/src/draw/lv_draw_img.c **** #else
 206:lvgl/src/draw/lv_draw_img.c ****     if(u8_p[0] >= 0x20 && u8_p[0] <= 0x7F) {
 207:lvgl/src/draw/lv_draw_img.c **** #endif
 208:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 209:lvgl/src/draw/lv_draw_img.c ****     }
 210:lvgl/src/draw/lv_draw_img.c **** #if LV_BIG_ENDIAN_SYSTEM
 211:lvgl/src/draw/lv_draw_img.c ****     else if(u8_p[3] >= 0x80) {
 212:lvgl/src/draw/lv_draw_img.c **** #else
 213:lvgl/src/draw/lv_draw_img.c ****     else if(u8_p[0] >= 0x80) {
 214:lvgl/src/draw/lv_draw_img.c **** #endif
 215:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_SYMBOL; /*Symbols begins after 0x7F*/
 216:lvgl/src/draw/lv_draw_img.c ****     }
 217:lvgl/src/draw/lv_draw_img.c ****     else {
 218:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_VARIABLE; /*`lv_img_dsc_t` is draw to the first byte < 0x20*/
 219:lvgl/src/draw/lv_draw_img.c ****     }
 220:lvgl/src/draw/lv_draw_img.c **** 
 221:lvgl/src/draw/lv_draw_img.c ****     if(LV_IMG_SRC_UNKNOWN == img_src_type) {
 222:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("lv_img_src_get_type: unknown image type");
 223:lvgl/src/draw/lv_draw_img.c ****     }
 224:lvgl/src/draw/lv_draw_img.c **** 
 225:lvgl/src/draw/lv_draw_img.c ****     return img_src_type;
 226:lvgl/src/draw/lv_draw_img.c **** }
 227:lvgl/src/draw/lv_draw_img.c **** 
 228:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img_decoded(lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * dsc,
 229:lvgl/src/draw/lv_draw_img.c ****                          const lv_area_t * coords, const uint8_t * map_p, lv_img_cf_t color_format)
 230:lvgl/src/draw/lv_draw_img.c **** {
 231:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img_decoded == NULL) return;
 232:lvgl/src/draw/lv_draw_img.c **** 
 233:lvgl/src/draw/lv_draw_img.c ****     draw_ctx->draw_img_decoded(draw_ctx, dsc, coords, map_p, color_format);
 234:lvgl/src/draw/lv_draw_img.c **** }
 235:lvgl/src/draw/lv_draw_img.c **** 
 236:lvgl/src/draw/lv_draw_img.c **** /**********************
 237:lvgl/src/draw/lv_draw_img.c ****  *   STATIC FUNCTIONS
 238:lvgl/src/draw/lv_draw_img.c ****  **********************/
 239:lvgl/src/draw/lv_draw_img.c **** 
 240:lvgl/src/draw/lv_draw_img.c **** static lv_res_t LV_ATTRIBUTE_FAST_MEM decode_and_draw(lv_draw_ctx_t * draw_ctx,
 241:lvgl/src/draw/lv_draw_img.c ****                                                       const lv_draw_img_dsc_t * draw_dsc,
 242:lvgl/src/draw/lv_draw_img.c ****                                                       const lv_area_t * coords, const void * src)
 243:lvgl/src/draw/lv_draw_img.c **** {
 244:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 245:lvgl/src/draw/lv_draw_img.c **** 
 246:lvgl/src/draw/lv_draw_img.c ****     _lv_img_cache_entry_t * cdsc = _lv_img_cache_open(src, draw_dsc->recolor, draw_dsc->frame_id);
 247:lvgl/src/draw/lv_draw_img.c **** 
 248:lvgl/src/draw/lv_draw_img.c ****     if(cdsc == NULL) return LV_RES_INV;
 249:lvgl/src/draw/lv_draw_img.c **** 
 250:lvgl/src/draw/lv_draw_img.c ****     lv_img_cf_t cf;
 251:lvgl/src/draw/lv_draw_img.c ****     if(lv_img_cf_is_chroma_keyed(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 253:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 254:lvgl/src/draw/lv_draw_img.c ****     else if(lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 255:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 256:lvgl/src/draw/lv_draw_img.c **** 
 257:lvgl/src/draw/lv_draw_img.c ****     if(cf == LV_IMG_CF_ALPHA_8BIT) {
 258:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 6


 259:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 260:lvgl/src/draw/lv_draw_img.c ****             cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 261:lvgl/src/draw/lv_draw_img.c ****             cdsc->dec_dsc.img_data = NULL;
 262:lvgl/src/draw/lv_draw_img.c ****         }
 263:lvgl/src/draw/lv_draw_img.c ****     }
 264:lvgl/src/draw/lv_draw_img.c **** 
 265:lvgl/src/draw/lv_draw_img.c ****     if(cdsc->dec_dsc.error_msg != NULL) {
 266:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 267:lvgl/src/draw/lv_draw_img.c **** 
 268:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, cdsc->dec_dsc.error_msg);
 269:lvgl/src/draw/lv_draw_img.c ****     }
 270:lvgl/src/draw/lv_draw_img.c ****     /*The decoder could open the image and gave the entire uncompressed image.
 271:lvgl/src/draw/lv_draw_img.c ****      *Just draw it!*/
 272:lvgl/src/draw/lv_draw_img.c ****     else if(cdsc->dec_dsc.img_data) {
 273:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 274:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&map_area_rot, coords);
 275:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 276:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 277:lvgl/src/draw/lv_draw_img.c ****             int32_t h = lv_area_get_height(coords);
 278:lvgl/src/draw/lv_draw_img.c **** 
 279:lvgl/src/draw/lv_draw_img.c ****             _lv_img_buf_get_transformed_area(&map_area_rot, w, h, draw_dsc->angle, draw_dsc->zoom, 
 280:lvgl/src/draw/lv_draw_img.c **** 
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x1 += coords->x1;
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 284:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 285:lvgl/src/draw/lv_draw_img.c ****         }
 286:lvgl/src/draw/lv_draw_img.c **** 
 287:lvgl/src/draw/lv_draw_img.c ****         lv_area_t clip_com; /*Common area of mask and coords*/
 288:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 289:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&clip_com, draw_ctx->clip_area, &map_area_rot);
 290:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 291:lvgl/src/draw/lv_draw_img.c ****         if(union_ok == false) {
 292:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 293:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 294:lvgl/src/draw/lv_draw_img.c ****         }
 295:lvgl/src/draw/lv_draw_img.c **** 
 296:lvgl/src/draw/lv_draw_img.c ****         const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 297:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = &clip_com;
 298:lvgl/src/draw/lv_draw_img.c ****         lv_draw_img_decoded(draw_ctx, draw_dsc, coords, cdsc->dec_dsc.img_data, cf);
 299:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 300:lvgl/src/draw/lv_draw_img.c ****     }
 301:lvgl/src/draw/lv_draw_img.c ****     /*The whole uncompressed image is not available. Try to read it line-by-line*/
 302:lvgl/src/draw/lv_draw_img.c ****     else {
 303:lvgl/src/draw/lv_draw_img.c ****         lv_area_t mask_com; /*Common area of mask and coords*/
 304:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 305:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, draw_ctx->clip_area, coords);
 306:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 307:lvgl/src/draw/lv_draw_img.c ****         if(union_ok == false) {
 308:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 309:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 310:lvgl/src/draw/lv_draw_img.c ****         }
 311:lvgl/src/draw/lv_draw_img.c **** 
 312:lvgl/src/draw/lv_draw_img.c ****         int32_t width = lv_area_get_width(&mask_com);
 313:lvgl/src/draw/lv_draw_img.c **** 
 314:lvgl/src/draw/lv_draw_img.c ****         uint8_t  * buf = lv_mem_buf_get(lv_area_get_width(&mask_com) *
 315:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 7


 316:lvgl/src/draw/lv_draw_img.c **** 
 317:lvgl/src/draw/lv_draw_img.c ****         const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 318:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 319:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&line, &mask_com);
 320:lvgl/src/draw/lv_draw_img.c ****         lv_area_set_height(&line, 1);
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 323:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 324:lvgl/src/draw/lv_draw_img.c ****         lv_res_t read_res;
 325:lvgl/src/draw/lv_draw_img.c ****         for(row = mask_com.y1; row <= mask_com.y2; row++) {
 326:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 327:lvgl/src/draw/lv_draw_img.c ****             union_ok = _lv_area_intersect(&mask_line, clip_area_ori, &line);
 328:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 329:lvgl/src/draw/lv_draw_img.c **** 
 330:lvgl/src/draw/lv_draw_img.c ****             read_res = lv_img_decoder_read_line(&cdsc->dec_dsc, x, y, width, buf);
 331:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 332:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 333:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 334:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 335:lvgl/src/draw/lv_draw_img.c ****                 draw_cleanup(cdsc);
 336:lvgl/src/draw/lv_draw_img.c ****                 draw_ctx->clip_area = clip_area_ori;
 337:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 338:lvgl/src/draw/lv_draw_img.c ****             }
 339:lvgl/src/draw/lv_draw_img.c **** 
 340:lvgl/src/draw/lv_draw_img.c ****             draw_ctx->clip_area = &mask_line;
 341:lvgl/src/draw/lv_draw_img.c ****             lv_draw_img_decoded(draw_ctx, draw_dsc, &line, buf, cf);
 342:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 343:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 344:lvgl/src/draw/lv_draw_img.c ****             y++;
 345:lvgl/src/draw/lv_draw_img.c ****         }
 346:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 347:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 348:lvgl/src/draw/lv_draw_img.c ****     }
 349:lvgl/src/draw/lv_draw_img.c **** 
 350:lvgl/src/draw/lv_draw_img.c ****     draw_cleanup(cdsc);
 351:lvgl/src/draw/lv_draw_img.c ****     return LV_RES_OK;
 352:lvgl/src/draw/lv_draw_img.c **** }
 353:lvgl/src/draw/lv_draw_img.c **** 
 354:lvgl/src/draw/lv_draw_img.c **** static void show_error(lv_draw_ctx_t * draw_ctx, const lv_area_t * coords, const char * msg)
 355:lvgl/src/draw/lv_draw_img.c **** {
 356:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
 357:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_init(&rect_dsc);
 358:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
 359:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(draw_ctx, &rect_dsc, coords);
 360:lvgl/src/draw/lv_draw_img.c **** 
 361:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_t label_dsc;
 362:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_init(&label_dsc);
 363:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label(draw_ctx, &label_dsc, coords, msg, NULL);
 364:lvgl/src/draw/lv_draw_img.c **** }
 365:lvgl/src/draw/lv_draw_img.c **** 
 366:lvgl/src/draw/lv_draw_img.c **** static void draw_cleanup(_lv_img_cache_entry_t * cache)
 367:lvgl/src/draw/lv_draw_img.c **** {
  29              		.loc 1 367 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 367 1 is_stmt 0 view .LVU1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 8


  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 368:lvgl/src/draw/lv_draw_img.c ****     /*Automatically close images with no caching*/
 369:lvgl/src/draw/lv_draw_img.c **** #if LV_IMG_CACHE_DEF_SIZE == 0
 370:lvgl/src/draw/lv_draw_img.c ****     lv_img_decoder_close(&cache->dec_dsc);
  39              		.loc 1 370 5 is_stmt 1 view .LVU2
  40 0002 FFF7FEFF 		bl	lv_img_decoder_close
  41              	.LVL1:
 371:lvgl/src/draw/lv_draw_img.c **** #else
 372:lvgl/src/draw/lv_draw_img.c ****     LV_UNUSED(cache);
 373:lvgl/src/draw/lv_draw_img.c **** #endif
 374:lvgl/src/draw/lv_draw_img.c **** }
  42              		.loc 1 374 1 is_stmt 0 view .LVU3
  43 0006 08BD     		pop	{r3, pc}
  44              		.cfi_endproc
  45              	.LFE170:
  47              		.section	.text.show_error,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	show_error:
  54              	.LVL2:
  55              	.LFB169:
 355:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
  56              		.loc 1 355 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 88
  59              		@ frame_needed = 0, uses_anonymous_args = 0
 355:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
  60              		.loc 1 355 1 is_stmt 0 view .LVU5
  61 0000 70B5     		push	{r4, r5, r6, lr}
  62              	.LCFI1:
  63              		.cfi_def_cfa_offset 16
  64              		.cfi_offset 4, -16
  65              		.cfi_offset 5, -12
  66              		.cfi_offset 6, -8
  67              		.cfi_offset 14, -4
  68 0002 98B0     		sub	sp, sp, #96
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 112
  71 0004 0446     		mov	r4, r0
  72 0006 0D46     		mov	r5, r1
  73 0008 1646     		mov	r6, r2
 356:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_init(&rect_dsc);
  74              		.loc 1 356 5 is_stmt 1 view .LVU6
 357:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
  75              		.loc 1 357 5 view .LVU7
  76 000a 0AA8     		add	r0, sp, #40
  77              	.LVL3:
 357:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
  78              		.loc 1 357 5 is_stmt 0 view .LVU8
  79 000c FFF7FEFF 		bl	lv_draw_rect_dsc_init
  80              	.LVL4:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 9


 358:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(draw_ctx, &rect_dsc, coords);
  81              		.loc 1 358 5 is_stmt 1 view .LVU9
  82              	.LBB30:
  83              	.LBI30:
  84              		.file 2 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/../misc/lv_color.h **** 
  21:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/../misc/lv_color.h **** #endif
  25:lvgl/src/draw/../misc/lv_color.h **** 
  26:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/../misc/lv_color.h **** #endif
  29:lvgl/src/draw/../misc/lv_color.h **** 
  30:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/../misc/lv_color.h **** 
  32:lvgl/src/draw/../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/../misc/lv_color.h **** 
  38:lvgl/src/draw/../misc/lv_color.h **** /**
  39:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/../misc/lv_color.h ****  */
  41:lvgl/src/draw/../misc/lv_color.h **** enum {
  42:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 10


  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/../misc/lv_color.h **** };
  56:lvgl/src/draw/../misc/lv_color.h **** 
  57:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/../misc/lv_color.h **** 
  60:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/../misc/lv_color.h **** #else
  69:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/../misc/lv_color.h **** #endif
  71:lvgl/src/draw/../misc/lv_color.h **** 
  72:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/../misc/lv_color.h **** */
  78:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/../misc/lv_color.h **** #endif
  82:lvgl/src/draw/../misc/lv_color.h **** #else
  83:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/../misc/lv_color.h **** #endif
  86:lvgl/src/draw/../misc/lv_color.h **** #endif
  87:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/../misc/lv_color.h **** 
  89:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/../misc/lv_color.h **** #endif
  92:lvgl/src/draw/../misc/lv_color.h **** 
  93:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/../misc/lv_color.h **** #else
  97:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/../misc/lv_color.h **** #endif
  99:lvgl/src/draw/../misc/lv_color.h **** 
 100:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/../misc/lv_color.h **** 
 109:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 11


 110:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/../misc/lv_color.h **** 
 114:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/../misc/lv_color.h **** 
 117:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/../misc/lv_color.h **** 
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/../misc/lv_color.h **** 
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/../misc/lv_color.h **** #else
 134:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/../misc/lv_color.h **** #endif
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/../misc/lv_color.h **** 
 139:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** #else
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/draw/../misc/lv_color.h **** #endif
 145:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/../misc/lv_color.h **** #endif
 155:lvgl/src/draw/../misc/lv_color.h **** 
 156:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/../misc/lv_color.h **** 
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 12


 167:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/../misc/lv_color.h **** 
 169:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/../misc/lv_color.h **** 
 178:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/../misc/lv_color.h **** 
 183:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/../misc/lv_color.h **** 
 186:lvgl/src/draw/../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/../misc/lv_color.h **** 
 190:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/../misc/lv_color.h ****     union {
 193:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/../misc/lv_color.h **** 
 199:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/../misc/lv_color.h ****     struct {
 201:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/../misc/lv_color.h **** 
 208:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/../misc/lv_color.h **** #else
 215:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/../misc/lv_color.h **** #endif
 220:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 13


 224:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/../misc/lv_color.h **** 
 234:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/../misc/lv_color.h **** 
 237:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/../misc/lv_color.h **** 
 243:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/../misc/lv_color.h **** 
 248:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/../misc/lv_color.h **** 
 250:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/../misc/lv_color.h **** 
 252:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 258:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 14


 281:lvgl/src/draw/../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/../misc/lv_color.h **** 
 285:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/../misc/lv_color.h ****  *
 292:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/draw/../misc/lv_color.h ****  */
 298:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/../misc/lv_color.h **** {
 300:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/../misc/lv_color.h ****     }
 306:lvgl/src/draw/../misc/lv_color.h ****     else {
 307:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/../misc/lv_color.h ****     }
 309:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/../misc/lv_color.h ****     }
 313:lvgl/src/draw/../misc/lv_color.h ****     else {
 314:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 315:lvgl/src/draw/../misc/lv_color.h ****     }
 316:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/../misc/lv_color.h ****     }
 320:lvgl/src/draw/../misc/lv_color.h ****     else {
 321:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/../misc/lv_color.h ****     }
 323:lvgl/src/draw/../misc/lv_color.h **** #endif
 324:lvgl/src/draw/../misc/lv_color.h **** }
 325:lvgl/src/draw/../misc/lv_color.h **** 
 326:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/../misc/lv_color.h **** {
 328:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/../misc/lv_color.h ****     else
 332:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 15


 338:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/../misc/lv_color.h **** #endif
 348:lvgl/src/draw/../misc/lv_color.h **** }
 349:lvgl/src/draw/../misc/lv_color.h **** 
 350:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/../misc/lv_color.h **** {
 352:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/../misc/lv_color.h ****     else
 356:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/../misc/lv_color.h **** #endif
 372:lvgl/src/draw/../misc/lv_color.h **** }
 373:lvgl/src/draw/../misc/lv_color.h **** 
 374:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/../misc/lv_color.h **** {
 376:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/../misc/lv_color.h ****     else
 380:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/../misc/lv_color.h ****     /**
 390:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 16


 395:lvgl/src/draw/../misc/lv_color.h ****      *
 396:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/../misc/lv_color.h ****      *
 398:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/../misc/lv_color.h ****      *
 407:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/../misc/lv_color.h ****      */
 417:lvgl/src/draw/../misc/lv_color.h **** 
 418:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/../misc/lv_color.h **** #endif
 427:lvgl/src/draw/../misc/lv_color.h **** }
 428:lvgl/src/draw/../misc/lv_color.h **** 
 429:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/../misc/lv_color.h **** 
 431:lvgl/src/draw/../misc/lv_color.h **** /**
 432:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/../misc/lv_color.h ****  */
 438:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/draw/../misc/lv_color.h **** {
 440:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/draw/../misc/lv_color.h **** 
 442:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/../misc/lv_color.h **** #endif
 447:lvgl/src/draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/draw/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 17


 452:lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/draw/../misc/lv_color.h **** #endif
 457:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/draw/../misc/lv_color.h **** #else
 467:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/../misc/lv_color.h **** #endif
 470:lvgl/src/draw/../misc/lv_color.h **** 
 471:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 472:lvgl/src/draw/../misc/lv_color.h **** }
 473:lvgl/src/draw/../misc/lv_color.h **** 
 474:lvgl/src/draw/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/draw/../misc/lv_color.h **** {
 476:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/draw/../misc/lv_color.h **** #else
 481:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/draw/../misc/lv_color.h **** #endif
 487:lvgl/src/draw/../misc/lv_color.h **** 
 488:lvgl/src/draw/../misc/lv_color.h **** }
 489:lvgl/src/draw/../misc/lv_color.h **** 
 490:lvgl/src/draw/../misc/lv_color.h **** /**
 491:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/draw/../misc/lv_color.h ****  */
 499:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/draw/../misc/lv_color.h **** {
 501:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/draw/../misc/lv_color.h **** #else
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 18


 509:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/draw/../misc/lv_color.h **** #endif
 517:lvgl/src/draw/../misc/lv_color.h **** 
 518:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 519:lvgl/src/draw/../misc/lv_color.h **** }
 520:lvgl/src/draw/../misc/lv_color.h **** 
 521:lvgl/src/draw/../misc/lv_color.h **** /**
 522:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/draw/../misc/lv_color.h ****  */
 530:lvgl/src/draw/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/draw/../misc/lv_color.h **** {
 534:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/draw/../misc/lv_color.h ****     }
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else {
 551:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/draw/../misc/lv_color.h **** 
 559:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 19


 566:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/draw/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/draw/../misc/lv_color.h **** 
 572:lvgl/src/draw/../misc/lv_color.h ****         }
 573:lvgl/src/draw/../misc/lv_color.h **** 
 574:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/draw/../misc/lv_color.h ****     }
 577:lvgl/src/draw/../misc/lv_color.h **** }
 578:lvgl/src/draw/../misc/lv_color.h **** 
 579:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 580:lvgl/src/draw/../misc/lv_color.h **** 
 581:lvgl/src/draw/../misc/lv_color.h **** /**
 582:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/draw/../misc/lv_color.h ****  */
 586:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/draw/../misc/lv_color.h **** {
 588:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/draw/../misc/lv_color.h **** }
 593:lvgl/src/draw/../misc/lv_color.h **** 
 594:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/draw/../misc/lv_color.h **** }
 598:lvgl/src/draw/../misc/lv_color.h **** 
 599:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/draw/../misc/lv_color.h **** {
 601:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/draw/../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/draw/../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/draw/../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/draw/../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/draw/../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/draw/../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h ****         A bit better:
 613:lvgl/src/draw/../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/draw/../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/draw/../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/draw/../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/draw/../misc/lv_color.h **** #else
 620:lvgl/src/draw/../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/draw/../misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 20


 623:lvgl/src/draw/../misc/lv_color.h ****     return r;
 624:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/draw/../misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/draw/../misc/lv_color.h ****     return r;
 628:lvgl/src/draw/../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 630:lvgl/src/draw/../misc/lv_color.h **** #endif
 631:lvgl/src/draw/../misc/lv_color.h **** }
 632:lvgl/src/draw/../misc/lv_color.h **** 
 633:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/draw/../misc/lv_color.h **** {
 635:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/draw/../misc/lv_color.h **** }
 638:lvgl/src/draw/../misc/lv_color.h **** 
 639:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/draw/../misc/lv_color.h **** {
 641:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/draw/../misc/lv_color.h **** }
 643:lvgl/src/draw/../misc/lv_color.h **** 
 644:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/draw/../misc/lv_color.h **** //!
 646:lvgl/src/draw/../misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/draw/../misc/lv_color.h **** 
 648:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 649:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/draw/../misc/lv_color.h **** 
 651:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/draw/../misc/lv_color.h **** 
 653:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/draw/../misc/lv_color.h **** 
 655:lvgl/src/draw/../misc/lv_color.h **** /**
 656:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/draw/../misc/lv_color.h ****  */
 662:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/draw/../misc/lv_color.h **** 
 664:lvgl/src/draw/../misc/lv_color.h **** /**
 665:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/draw/../misc/lv_color.h ****  */
 671:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** /**
 674:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 676:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/draw/../misc/lv_color.h ****  */
 678:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 21


 680:lvgl/src/draw/../misc/lv_color.h **** /**
 681:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/draw/../misc/lv_color.h ****  */
 684:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/draw/../misc/lv_color.h **** {
 686:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 687:lvgl/src/draw/../misc/lv_color.h **** }
 688:lvgl/src/draw/../misc/lv_color.h **** 
 689:lvgl/src/draw/../misc/lv_color.h **** /**********************
 690:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 692:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/draw/../misc/lv_color.h **** 
 694:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
  85              		.loc 2 695 26 view .LVU10
 696:lvgl/src/draw/../misc/lv_color.h **** {
 697:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
  86              		.loc 2 697 5 view .LVU11
  87              	.LBB31:
  88              	.LBI31:
 594:lvgl/src/draw/../misc/lv_color.h **** {
  89              		.loc 2 594 26 view .LVU12
  90              	.LBB32:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  91              		.loc 2 596 5 view .LVU13
 596:lvgl/src/draw/../misc/lv_color.h **** }
  92              		.loc 2 596 12 is_stmt 0 view .LVU14
  93 0010 4FF6FF73 		movw	r3, #65535
  94              	.LVL5:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  95              		.loc 2 596 12 view .LVU15
  96              	.LBE32:
  97              	.LBE31:
  98              	.LBE30:
 358:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(draw_ctx, &rect_dsc, coords);
  99              		.loc 1 358 25 view .LVU16
 100 0014 ADF82C30 		strh	r3, [sp, #44]	@ movhi
 359:lvgl/src/draw/lv_draw_img.c **** 
 101              		.loc 1 359 5 is_stmt 1 view .LVU17
 102 0018 2A46     		mov	r2, r5
 103 001a 0AA9     		add	r1, sp, #40
 104 001c 2046     		mov	r0, r4
 105 001e FFF7FEFF 		bl	lv_draw_rect
 106              	.LVL6:
 361:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_init(&label_dsc);
 107              		.loc 1 361 5 view .LVU18
 362:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label(draw_ctx, &label_dsc, coords, msg, NULL);
 108              		.loc 1 362 5 view .LVU19
 109 0022 02A8     		add	r0, sp, #8
 110 0024 FFF7FEFF 		bl	lv_draw_label_dsc_init
 111              	.LVL7:
 363:lvgl/src/draw/lv_draw_img.c **** }
 112              		.loc 1 363 5 view .LVU20
 113 0028 0023     		movs	r3, #0
 114 002a 0093     		str	r3, [sp]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 22


 115 002c 3346     		mov	r3, r6
 116 002e 2A46     		mov	r2, r5
 117 0030 02A9     		add	r1, sp, #8
 118 0032 2046     		mov	r0, r4
 119 0034 FFF7FEFF 		bl	lv_draw_label
 120              	.LVL8:
 364:lvgl/src/draw/lv_draw_img.c **** 
 121              		.loc 1 364 1 is_stmt 0 view .LVU21
 122 0038 18B0     		add	sp, sp, #96
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 16
 125              		@ sp needed
 126 003a 70BD     		pop	{r4, r5, r6, pc}
 364:lvgl/src/draw/lv_draw_img.c **** 
 127              		.loc 1 364 1 view .LVU22
 128              		.cfi_endproc
 129              	.LFE169:
 131              		.section	.text.lv_draw_img_dsc_init,"ax",%progbits
 132              		.align	1
 133              		.global	lv_draw_img_dsc_init
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	lv_draw_img_dsc_init:
 139              	.LVL9:
 140              	.LFB161:
  48:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
 141              		.loc 1 48 1 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
  48:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
 145              		.loc 1 48 1 is_stmt 0 view .LVU24
 146 0000 10B5     		push	{r4, lr}
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 151 0002 0446     		mov	r4, r0
  49:lvgl/src/draw/lv_draw_img.c ****     dsc->recolor = lv_color_black();
 152              		.loc 1 49 5 is_stmt 1 view .LVU25
 153 0004 1821     		movs	r1, #24
 154 0006 FFF7FEFF 		bl	lv_memset_00
 155              	.LVL10:
  50:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
 156              		.loc 1 50 5 view .LVU26
 157              	.LBB33:
 158              	.LBI33:
 698:lvgl/src/draw/../misc/lv_color.h **** }
 699:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 159              		.loc 2 699 26 view .LVU27
 700:lvgl/src/draw/../misc/lv_color.h **** {
 701:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 160              		.loc 2 701 5 view .LVU28
 161              	.LBB34:
 162              	.LBI34:
 594:lvgl/src/draw/../misc/lv_color.h **** {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 23


 163              		.loc 2 594 26 view .LVU29
 164              	.LBB35:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 165              		.loc 2 596 5 view .LVU30
 596:lvgl/src/draw/../misc/lv_color.h **** }
 166              		.loc 2 596 12 is_stmt 0 view .LVU31
 167 000a 4FF00003 		mov	r3, #0	@ movhi
 168 000e 6FF30403 		bfc	r3, #0, #5
 169 0012 6FF34A13 		bfc	r3, #5, #6
 170 0016 6FF3CF23 		bfc	r3, #11, #5
 171              	.LVL11:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 172              		.loc 2 596 12 view .LVU32
 173              	.LBE35:
 174              	.LBE34:
 175              	.LBE33:
  50:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
 176              		.loc 1 50 20 view .LVU33
 177 001a 2381     		strh	r3, [r4, #8]	@ movhi
  51:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
 178              		.loc 1 51 5 is_stmt 1 view .LVU34
  51:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
 179              		.loc 1 51 14 is_stmt 0 view .LVU35
 180 001c FF23     		movs	r3, #255
 181 001e E372     		strb	r3, [r4, #11]
  52:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
 182              		.loc 1 52 5 is_stmt 1 view .LVU36
  52:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
 183              		.loc 1 52 15 is_stmt 0 view .LVU37
 184 0020 4FF48073 		mov	r3, #256
 185 0024 6380     		strh	r3, [r4, #2]	@ movhi
  53:lvgl/src/draw/lv_draw_img.c **** }
 186              		.loc 1 53 5 is_stmt 1 view .LVU38
  53:lvgl/src/draw/lv_draw_img.c **** }
 187              		.loc 1 53 20 is_stmt 0 view .LVU39
 188 0026 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 189 0028 43F00103 		orr	r3, r3, #1
 190 002c 2375     		strb	r3, [r4, #20]
  54:lvgl/src/draw/lv_draw_img.c **** 
 191              		.loc 1 54 1 view .LVU40
 192 002e 10BD     		pop	{r4, pc}
  54:lvgl/src/draw/lv_draw_img.c **** 
 193              		.loc 1 54 1 view .LVU41
 194              		.cfi_endproc
 195              	.LFE161:
 197              		.section	.text.lv_img_cf_get_px_size,"ax",%progbits
 198              		.align	1
 199              		.global	lv_img_cf_get_px_size
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	lv_img_cf_get_px_size:
 205              	.LVL12:
 206              	.LFB163:
  95:lvgl/src/draw/lv_draw_img.c ****     uint8_t px_size = 0;
 207              		.loc 1 95 1 is_stmt 1 view -0
 208              		.cfi_startproc
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 24


 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
  96:lvgl/src/draw/lv_draw_img.c **** 
 212              		.loc 1 96 5 view .LVU43
  98:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 213              		.loc 1 98 5 view .LVU44
 214 0000 0438     		subs	r0, r0, #4
 215              	.LVL13:
  98:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 216              		.loc 1 98 5 is_stmt 0 view .LVU45
 217 0002 0A28     		cmp	r0, #10
 218 0004 07D8     		bhi	.L8
 219 0006 DFE800F0 		tbb	[pc, r0]
 220              	.L10:
 221 000a 12       		.byte	(.L16-.L10)/2
 222 000b 08       		.byte	(.L15-.L10)/2
 223 000c 12       		.byte	(.L16-.L10)/2
 224 000d 0A       		.byte	(.L13-.L10)/2
 225 000e 0C       		.byte	(.L12-.L10)/2
 226 000f 0E       		.byte	(.L11-.L10)/2
 227 0010 10       		.byte	(.L9-.L10)/2
 228 0011 0A       		.byte	(.L13-.L10)/2
 229 0012 0C       		.byte	(.L12-.L10)/2
 230 0013 0E       		.byte	(.L11-.L10)/2
 231 0014 10       		.byte	(.L9-.L10)/2
 232 0015 00       		.p2align 1
 233              	.L8:
 234 0016 0020     		movs	r0, #0
 235 0018 7047     		bx	lr
 236              	.L15:
 108:lvgl/src/draw/lv_draw_img.c ****             break;
 237              		.loc 1 108 13 is_stmt 1 view .LVU46
 238              	.LVL14:
 109:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 239              		.loc 1 109 13 view .LVU47
 108:lvgl/src/draw/lv_draw_img.c ****             break;
 240              		.loc 1 108 21 is_stmt 0 view .LVU48
 241 001a 1820     		movs	r0, #24
 109:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 242              		.loc 1 109 13 view .LVU49
 243 001c 7047     		bx	lr
 244              	.LVL15:
 245              	.L13:
 112:lvgl/src/draw/lv_draw_img.c ****             break;
 246              		.loc 1 112 13 is_stmt 1 view .LVU50
 113:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 247              		.loc 1 113 13 view .LVU51
 112:lvgl/src/draw/lv_draw_img.c ****             break;
 248              		.loc 1 112 21 is_stmt 0 view .LVU52
 249 001e 0120     		movs	r0, #1
 113:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 250              		.loc 1 113 13 view .LVU53
 251 0020 7047     		bx	lr
 252              	.LVL16:
 253              	.L12:
 116:lvgl/src/draw/lv_draw_img.c ****             break;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 25


 254              		.loc 1 116 13 is_stmt 1 view .LVU54
 117:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 255              		.loc 1 117 13 view .LVU55
 116:lvgl/src/draw/lv_draw_img.c ****             break;
 256              		.loc 1 116 21 is_stmt 0 view .LVU56
 257 0022 0220     		movs	r0, #2
 117:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 258              		.loc 1 117 13 view .LVU57
 259 0024 7047     		bx	lr
 260              	.LVL17:
 261              	.L11:
 120:lvgl/src/draw/lv_draw_img.c ****             break;
 262              		.loc 1 120 13 is_stmt 1 view .LVU58
 121:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 263              		.loc 1 121 13 view .LVU59
 120:lvgl/src/draw/lv_draw_img.c ****             break;
 264              		.loc 1 120 21 is_stmt 0 view .LVU60
 265 0026 0420     		movs	r0, #4
 121:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 266              		.loc 1 121 13 view .LVU61
 267 0028 7047     		bx	lr
 268              	.LVL18:
 269              	.L9:
 124:lvgl/src/draw/lv_draw_img.c ****             break;
 270              		.loc 1 124 13 is_stmt 1 view .LVU62
 125:lvgl/src/draw/lv_draw_img.c ****         default:
 271              		.loc 1 125 13 view .LVU63
 124:lvgl/src/draw/lv_draw_img.c ****             break;
 272              		.loc 1 124 21 is_stmt 0 view .LVU64
 273 002a 0820     		movs	r0, #8
 125:lvgl/src/draw/lv_draw_img.c ****         default:
 274              		.loc 1 125 13 view .LVU65
 275 002c 7047     		bx	lr
 276              	.LVL19:
 277              	.L16:
 105:lvgl/src/draw/lv_draw_img.c ****             break;
 278              		.loc 1 105 21 view .LVU66
 279 002e 1020     		movs	r0, #16
 280              	.LVL20:
 131:lvgl/src/draw/lv_draw_img.c **** }
 281              		.loc 1 131 5 is_stmt 1 view .LVU67
 132:lvgl/src/draw/lv_draw_img.c **** 
 282              		.loc 1 132 1 is_stmt 0 view .LVU68
 283 0030 7047     		bx	lr
 284              		.cfi_endproc
 285              	.LFE163:
 287              		.section	.text.lv_img_cf_is_chroma_keyed,"ax",%progbits
 288              		.align	1
 289              		.global	lv_img_cf_is_chroma_keyed
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	lv_img_cf_is_chroma_keyed:
 295              	.LVL21:
 296              	.LFB164:
 140:lvgl/src/draw/lv_draw_img.c ****     bool is_chroma_keyed = false;
 297              		.loc 1 140 1 is_stmt 1 view -0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 26


 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 0, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 141:lvgl/src/draw/lv_draw_img.c **** 
 302              		.loc 1 141 5 view .LVU70
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 303              		.loc 1 143 5 view .LVU71
 304 0000 0328     		cmp	r0, #3
 305 0002 05D0     		beq	.L19
 306 0004 0628     		cmp	r0, #6
 307 0006 01D0     		beq	.L21
 150:lvgl/src/draw/lv_draw_img.c ****             break;
 308              		.loc 1 150 29 is_stmt 0 view .LVU72
 309 0008 0020     		movs	r0, #0
 310              	.LVL22:
 154:lvgl/src/draw/lv_draw_img.c **** }
 311              		.loc 1 154 5 is_stmt 1 view .LVU73
 155:lvgl/src/draw/lv_draw_img.c **** 
 312              		.loc 1 155 1 is_stmt 0 view .LVU74
 313 000a 7047     		bx	lr
 314              	.LVL23:
 315              	.L21:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 316              		.loc 1 143 5 view .LVU75
 317 000c 0120     		movs	r0, #1
 318              	.LVL24:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 319              		.loc 1 143 5 view .LVU76
 320 000e 7047     		bx	lr
 321              	.LVL25:
 322              	.L19:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 323              		.loc 1 143 5 view .LVU77
 324 0010 0120     		movs	r0, #1
 325              	.LVL26:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 326              		.loc 1 143 5 view .LVU78
 327 0012 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE164:
 331              		.section	.text.lv_img_cf_has_alpha,"ax",%progbits
 332              		.align	1
 333              		.global	lv_img_cf_has_alpha
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 338              	lv_img_cf_has_alpha:
 339              	.LVL27:
 340              	.LFB165:
 163:lvgl/src/draw/lv_draw_img.c ****     bool has_alpha = false;
 341              		.loc 1 163 1 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		@ link register save eliminated.
 164:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 27


 346              		.loc 1 164 5 view .LVU80
 166:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 347              		.loc 1 166 5 view .LVU81
 348 0000 0E28     		cmp	r0, #14
 349 0002 06D8     		bhi	.L24
 350 0004 47F6A473 		movw	r3, #32676
 351 0008 23FA00F0 		lsr	r0, r3, r0
 352              	.LVL28:
 166:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 353              		.loc 1 166 5 is_stmt 0 view .LVU82
 354 000c 00F00100 		and	r0, r0, #1
 355 0010 7047     		bx	lr
 356              	.LVL29:
 357              	.L24:
 180:lvgl/src/draw/lv_draw_img.c ****             break;
 358              		.loc 1 180 23 view .LVU83
 359 0012 0020     		movs	r0, #0
 360              	.LVL30:
 184:lvgl/src/draw/lv_draw_img.c **** }
 361              		.loc 1 184 5 is_stmt 1 view .LVU84
 185:lvgl/src/draw/lv_draw_img.c **** 
 362              		.loc 1 185 1 is_stmt 0 view .LVU85
 363 0014 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE165:
 367              		.section	.text.lv_img_src_get_type,"ax",%progbits
 368              		.align	1
 369              		.global	lv_img_src_get_type
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	lv_img_src_get_type:
 375              	.LVL31:
 376              	.LFB166:
 196:lvgl/src/draw/lv_draw_img.c ****     lv_img_src_t img_src_type = LV_IMG_SRC_UNKNOWN;
 377              		.loc 1 196 1 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 197:lvgl/src/draw/lv_draw_img.c **** 
 382              		.loc 1 197 5 view .LVU87
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 383              		.loc 1 199 5 view .LVU88
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 384              		.loc 1 199 7 is_stmt 0 view .LVU89
 385 0000 60B1     		cbz	r0, .L27
 200:lvgl/src/draw/lv_draw_img.c **** 
 386              		.loc 1 200 5 is_stmt 1 view .LVU90
 387              	.LVL32:
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 388              		.loc 1 206 5 view .LVU91
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 389              		.loc 1 206 12 is_stmt 0 view .LVU92
 390 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 391              		.loc 1 206 24 view .LVU93
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 28


 392 0004 A2F12003 		sub	r3, r2, #32
 393 0008 DBB2     		uxtb	r3, r3
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 394              		.loc 1 206 7 view .LVU94
 395 000a 5F2B     		cmp	r3, #95
 396 000c 08D9     		bls	.L28
 213:lvgl/src/draw/lv_draw_img.c **** #endif
 397              		.loc 1 213 10 is_stmt 1 view .LVU95
 213:lvgl/src/draw/lv_draw_img.c **** #endif
 398              		.loc 1 213 12 is_stmt 0 view .LVU96
 399 000e 12F0800F 		tst	r2, #128
 400 0012 01D1     		bne	.L30
 218:lvgl/src/draw/lv_draw_img.c ****     }
 401              		.loc 1 218 22 view .LVU97
 402 0014 0020     		movs	r0, #0
 403              	.LVL33:
 226:lvgl/src/draw/lv_draw_img.c **** 
 404              		.loc 1 226 1 view .LVU98
 405 0016 7047     		bx	lr
 406              	.LVL34:
 407              	.L30:
 215:lvgl/src/draw/lv_draw_img.c ****     }
 408              		.loc 1 215 22 view .LVU99
 409 0018 0220     		movs	r0, #2
 410              	.LVL35:
 215:lvgl/src/draw/lv_draw_img.c ****     }
 411              		.loc 1 215 22 view .LVU100
 412 001a 7047     		bx	lr
 413              	.LVL36:
 414              	.L27:
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 415              		.loc 1 199 28 view .LVU101
 416 001c 0320     		movs	r0, #3
 417              	.LVL37:
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 418              		.loc 1 199 28 view .LVU102
 419 001e 7047     		bx	lr
 420              	.LVL38:
 421              	.L28:
 208:lvgl/src/draw/lv_draw_img.c ****     }
 422              		.loc 1 208 22 view .LVU103
 423 0020 0120     		movs	r0, #1
 424              	.LVL39:
 208:lvgl/src/draw/lv_draw_img.c ****     }
 425              		.loc 1 208 22 view .LVU104
 426 0022 7047     		bx	lr
 427              		.cfi_endproc
 428              	.LFE166:
 430              		.section	.text.lv_draw_img_decoded,"ax",%progbits
 431              		.align	1
 432              		.global	lv_draw_img_decoded
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 437              	lv_draw_img_decoded:
 438              	.LVL40:
 439              	.LFB167:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 29


 230:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img_decoded == NULL) return;
 440              		.loc 1 230 1 is_stmt 1 view -0
 441              		.cfi_startproc
 442              		@ args = 4, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 230:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img_decoded == NULL) return;
 444              		.loc 1 230 1 is_stmt 0 view .LVU106
 445 0000 30B5     		push	{r4, r5, lr}
 446              	.LCFI5:
 447              		.cfi_def_cfa_offset 12
 448              		.cfi_offset 4, -12
 449              		.cfi_offset 5, -8
 450              		.cfi_offset 14, -4
 451 0002 83B0     		sub	sp, sp, #12
 452              	.LCFI6:
 453              		.cfi_def_cfa_offset 24
 231:lvgl/src/draw/lv_draw_img.c **** 
 454              		.loc 1 231 5 is_stmt 1 view .LVU107
 231:lvgl/src/draw/lv_draw_img.c **** 
 455              		.loc 1 231 16 is_stmt 0 view .LVU108
 456 0004 8469     		ldr	r4, [r0, #24]
 231:lvgl/src/draw/lv_draw_img.c **** 
 457              		.loc 1 231 7 view .LVU109
 458 0006 1CB1     		cbz	r4, .L31
 233:lvgl/src/draw/lv_draw_img.c **** }
 459              		.loc 1 233 5 is_stmt 1 view .LVU110
 460 0008 9DF81850 		ldrb	r5, [sp, #24]	@ zero_extendqisi2
 461 000c 0095     		str	r5, [sp]
 462 000e A047     		blx	r4
 463              	.LVL41:
 464              	.L31:
 234:lvgl/src/draw/lv_draw_img.c **** 
 465              		.loc 1 234 1 is_stmt 0 view .LVU111
 466 0010 03B0     		add	sp, sp, #12
 467              	.LCFI7:
 468              		.cfi_def_cfa_offset 12
 469              		@ sp needed
 470 0012 30BD     		pop	{r4, r5, pc}
 234:lvgl/src/draw/lv_draw_img.c **** 
 471              		.loc 1 234 1 view .LVU112
 472              		.cfi_endproc
 473              	.LFE167:
 475              		.section	.text.decode_and_draw,"ax",%progbits
 476              		.align	1
 477              		.syntax unified
 478              		.thumb
 479              		.thumb_func
 481              	decode_and_draw:
 482              	.LVL42:
 483              	.LFB168:
 243:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 484              		.loc 1 243 1 is_stmt 1 view -0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 40
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 243:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 488              		.loc 1 243 1 is_stmt 0 view .LVU114
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 30


 489 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 490              	.LCFI8:
 491              		.cfi_def_cfa_offset 36
 492              		.cfi_offset 4, -36
 493              		.cfi_offset 5, -32
 494              		.cfi_offset 6, -28
 495              		.cfi_offset 7, -24
 496              		.cfi_offset 8, -20
 497              		.cfi_offset 9, -16
 498              		.cfi_offset 10, -12
 499              		.cfi_offset 11, -8
 500              		.cfi_offset 14, -4
 501 0004 8DB0     		sub	sp, sp, #52
 502              	.LCFI9:
 503              		.cfi_def_cfa_offset 88
 504 0006 1546     		mov	r5, r2
 244:lvgl/src/draw/lv_draw_img.c **** 
 505              		.loc 1 244 5 is_stmt 1 view .LVU115
 244:lvgl/src/draw/lv_draw_img.c **** 
 506              		.loc 1 244 16 is_stmt 0 view .LVU116
 507 0008 CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 508              	.LVL43:
 244:lvgl/src/draw/lv_draw_img.c **** 
 509              		.loc 1 244 7 view .LVU117
 510 000a 022A     		cmp	r2, #2
 511 000c 03D8     		bhi	.L55
 244:lvgl/src/draw/lv_draw_img.c **** 
 512              		.loc 1 244 44 view .LVU118
 513 000e 0120     		movs	r0, #1
 514              	.LVL44:
 515              	.L35:
 352:lvgl/src/draw/lv_draw_img.c **** 
 516              		.loc 1 352 1 view .LVU119
 517 0010 0DB0     		add	sp, sp, #52
 518              	.LCFI10:
 519              		.cfi_remember_state
 520              		.cfi_def_cfa_offset 36
 521              		@ sp needed
 522 0012 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 523              	.LVL45:
 524              	.L55:
 525              	.LCFI11:
 526              		.cfi_restore_state
 352:lvgl/src/draw/lv_draw_img.c **** 
 527              		.loc 1 352 1 view .LVU120
 528 0016 0646     		mov	r6, r0
 529 0018 0C46     		mov	r4, r1
 246:lvgl/src/draw/lv_draw_img.c **** 
 530              		.loc 1 246 5 is_stmt 1 view .LVU121
 246:lvgl/src/draw/lv_draw_img.c **** 
 531              		.loc 1 246 36 is_stmt 0 view .LVU122
 532 001a 0A69     		ldr	r2, [r1, #16]
 533 001c 0989     		ldrh	r1, [r1, #8]
 534              	.LVL46:
 246:lvgl/src/draw/lv_draw_img.c **** 
 535              		.loc 1 246 36 view .LVU123
 536 001e 1846     		mov	r0, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 31


 537              	.LVL47:
 246:lvgl/src/draw/lv_draw_img.c **** 
 538              		.loc 1 246 36 view .LVU124
 539 0020 FFF7FEFF 		bl	_lv_img_cache_open
 540              	.LVL48:
 248:lvgl/src/draw/lv_draw_img.c **** 
 541              		.loc 1 248 5 is_stmt 1 view .LVU125
 248:lvgl/src/draw/lv_draw_img.c **** 
 542              		.loc 1 248 7 is_stmt 0 view .LVU126
 543 0024 0746     		mov	r7, r0
 544 0026 0028     		cmp	r0, #0
 545 0028 00F01281 		beq	.L51
 250:lvgl/src/draw/lv_draw_img.c ****     if(lv_img_cf_is_chroma_keyed(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 546              		.loc 1 250 5 is_stmt 1 view .LVU127
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 547              		.loc 1 251 5 view .LVU128
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 548              		.loc 1 251 54 is_stmt 0 view .LVU129
 549 002c 90F81490 		ldrb	r9, [r0, #20]	@ zero_extendqisi2
 550 0030 09F01F09 		and	r9, r9, #31
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 551              		.loc 1 251 8 view .LVU130
 552 0034 4846     		mov	r0, r9
 553              	.LVL49:
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 554              		.loc 1 251 8 view .LVU131
 555 0036 FFF7FEFF 		bl	lv_img_cf_is_chroma_keyed
 556              	.LVL50:
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 557              		.loc 1 251 7 view .LVU132
 558 003a B0B9     		cbnz	r0, .L52
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 559              		.loc 1 252 10 is_stmt 1 view .LVU133
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 560              		.loc 1 252 34 is_stmt 0 view .LVU134
 561 003c C846     		mov	r8, r9
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 562              		.loc 1 252 12 view .LVU135
 563 003e B9F10E0F 		cmp	r9, #14
 564 0042 09D0     		beq	.L37
 253:lvgl/src/draw/lv_draw_img.c ****     else if(lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 565              		.loc 1 253 10 is_stmt 1 view .LVU136
 253:lvgl/src/draw/lv_draw_img.c ****     else if(lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 566              		.loc 1 253 12 is_stmt 0 view .LVU137
 567 0044 B9F1140F 		cmp	r9, #20
 568 0048 11D0     		beq	.L36
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 569              		.loc 1 254 10 is_stmt 1 view .LVU138
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 570              		.loc 1 254 13 is_stmt 0 view .LVU139
 571 004a 4846     		mov	r0, r9
 572 004c FFF7FEFF 		bl	lv_img_cf_has_alpha
 573              	.LVL51:
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 574              		.loc 1 254 12 view .LVU140
 575 0050 C0B1     		cbz	r0, .L53
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 32


 576              		.loc 1 254 62 view .LVU141
 577 0052 4FF00508 		mov	r8, #5
 578 0056 0AE0     		b	.L36
 579              	.L37:
 580              	.LVL52:
 257:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 581              		.loc 1 257 5 is_stmt 1 view .LVU142
 258:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 582              		.loc 1 258 9 view .LVU143
 258:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 583              		.loc 1 258 28 is_stmt 0 view .LVU144
 584 0058 2368     		ldr	r3, [r4]
 258:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 585              		.loc 1 258 11 view .LVU145
 586 005a B3F1807F 		cmp	r3, #16777216
 587 005e 06D0     		beq	.L36
 260:lvgl/src/draw/lv_draw_img.c ****             cdsc->dec_dsc.img_data = NULL;
 588              		.loc 1 260 13 is_stmt 1 view .LVU146
 589              	.LVL53:
 261:lvgl/src/draw/lv_draw_img.c ****         }
 590              		.loc 1 261 13 view .LVU147
 261:lvgl/src/draw/lv_draw_img.c ****         }
 591              		.loc 1 261 36 is_stmt 0 view .LVU148
 592 0060 0023     		movs	r3, #0
 593 0062 BB61     		str	r3, [r7, #24]
 260:lvgl/src/draw/lv_draw_img.c ****             cdsc->dec_dsc.img_data = NULL;
 594              		.loc 1 260 16 view .LVU149
 595 0064 4FF00508 		mov	r8, #5
 596 0068 01E0     		b	.L36
 597              	.LVL54:
 598              	.L52:
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 599              		.loc 1 251 63 view .LVU150
 600 006a 4FF00608 		mov	r8, #6
 601              	.L36:
 602              	.LVL55:
 265:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 603              		.loc 1 265 5 is_stmt 1 view .LVU151
 265:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 604              		.loc 1 265 21 is_stmt 0 view .LVU152
 605 006e 3A6A     		ldr	r2, [r7, #32]
 265:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 606              		.loc 1 265 7 view .LVU153
 607 0070 5AB1     		cbz	r2, .L38
 266:lvgl/src/draw/lv_draw_img.c **** 
 608              		.loc 1 266 9 is_stmt 1 view .LVU154
 266:lvgl/src/draw/lv_draw_img.c **** 
 609              		.loc 1 266 9 view .LVU155
 266:lvgl/src/draw/lv_draw_img.c **** 
 610              		.loc 1 266 9 view .LVU156
 268:lvgl/src/draw/lv_draw_img.c ****     }
 611              		.loc 1 268 9 view .LVU157
 612 0072 2946     		mov	r1, r5
 613 0074 3046     		mov	r0, r6
 614 0076 FFF7FEFF 		bl	show_error
 615              	.LVL56:
 616              	.L39:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 33


 350:lvgl/src/draw/lv_draw_img.c ****     return LV_RES_OK;
 617              		.loc 1 350 5 view .LVU158
 618 007a 3846     		mov	r0, r7
 619 007c FFF7FEFF 		bl	draw_cleanup
 620              	.LVL57:
 351:lvgl/src/draw/lv_draw_img.c **** }
 621              		.loc 1 351 5 view .LVU159
 351:lvgl/src/draw/lv_draw_img.c **** }
 622              		.loc 1 351 12 is_stmt 0 view .LVU160
 623 0080 0120     		movs	r0, #1
 624 0082 C5E7     		b	.L35
 625              	.LVL58:
 626              	.L53:
 255:lvgl/src/draw/lv_draw_img.c **** 
 627              		.loc 1 255 13 view .LVU161
 628 0084 4FF00408 		mov	r8, #4
 629 0088 F1E7     		b	.L36
 630              	.LVL59:
 631              	.L38:
 272:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 632              		.loc 1 272 10 is_stmt 1 view .LVU162
 272:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 633              		.loc 1 272 26 is_stmt 0 view .LVU163
 634 008a BB69     		ldr	r3, [r7, #24]
 272:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 635              		.loc 1 272 12 view .LVU164
 636 008c 002B     		cmp	r3, #0
 637 008e 5AD0     		beq	.L40
 638              	.LBB36:
 273:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&map_area_rot, coords);
 639              		.loc 1 273 9 is_stmt 1 view .LVU165
 274:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 640              		.loc 1 274 9 view .LVU166
 641              	.LVL60:
 642              	.LBB37:
 643              	.LBI37:
 644              		.file 3 "lvgl/src/draw/../misc/lv_area.h"
   1:lvgl/src/draw/../misc/lv_area.h **** /**
   2:lvgl/src/draw/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/../misc/lv_area.h ****  *
   4:lvgl/src/draw/../misc/lv_area.h ****  */
   5:lvgl/src/draw/../misc/lv_area.h **** 
   6:lvgl/src/draw/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/../misc/lv_area.h **** 
   9:lvgl/src/draw/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_area.h **** #endif
  12:lvgl/src/draw/../misc/lv_area.h **** 
  13:lvgl/src/draw/../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/../misc/lv_area.h **** 
  20:lvgl/src/draw/../misc/lv_area.h **** /*********************
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 34


  21:lvgl/src/draw/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/../misc/lv_area.h **** 
  24:lvgl/src/draw/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/../misc/lv_area.h **** #else
  27:lvgl/src/draw/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/../misc/lv_area.h **** #endif
  29:lvgl/src/draw/../misc/lv_area.h **** 
  30:lvgl/src/draw/../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/../misc/lv_area.h **** 
  34:lvgl/src/draw/../misc/lv_area.h **** /**
  35:lvgl/src/draw/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/../misc/lv_area.h ****  */
  37:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/../misc/lv_area.h **** 
  42:lvgl/src/draw/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/../misc/lv_area.h **** 
  50:lvgl/src/draw/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/../misc/lv_area.h **** enum {
  52:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/../misc/lv_area.h **** 
  63:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/../misc/lv_area.h **** };
  76:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/../misc/lv_area.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 35


  78:lvgl/src/draw/../misc/lv_area.h **** enum {
  79:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/../misc/lv_area.h **** };
  88:lvgl/src/draw/../misc/lv_area.h **** 
  89:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/../misc/lv_area.h **** 
  91:lvgl/src/draw/../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/../misc/lv_area.h **** 
  95:lvgl/src/draw/../misc/lv_area.h **** /**
  96:lvgl/src/draw/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/../misc/lv_area.h ****  */
 103:lvgl/src/draw/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/../misc/lv_area.h **** 
 105:lvgl/src/draw/../misc/lv_area.h **** /**
 106:lvgl/src/draw/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/../misc/lv_area.h ****  */
 110:lvgl/src/draw/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 645              		.loc 3 110 20 view .LVU167
 646              	.LBB38:
 111:lvgl/src/draw/../misc/lv_area.h **** {
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->x1 = src->x1;
 647              		.loc 3 112 5 view .LVU168
 648              		.loc 3 112 19 is_stmt 0 view .LVU169
 649 0090 B5F90030 		ldrsh	r3, [r5]
 650              		.loc 3 112 14 view .LVU170
 651 0094 ADF82030 		strh	r3, [sp, #32]	@ movhi
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 652              		.loc 3 113 5 is_stmt 1 view .LVU171
 653              		.loc 3 113 19 is_stmt 0 view .LVU172
 654 0098 B5F90230 		ldrsh	r3, [r5, #2]
 655              		.loc 3 113 14 view .LVU173
 656 009c ADF82230 		strh	r3, [sp, #34]	@ movhi
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 657              		.loc 3 114 5 is_stmt 1 view .LVU174
 658              		.loc 3 114 19 is_stmt 0 view .LVU175
 659 00a0 B5F90430 		ldrsh	r3, [r5, #4]
 660              		.loc 3 114 14 view .LVU176
 661 00a4 ADF82430 		strh	r3, [sp, #36]	@ movhi
 115:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 662              		.loc 3 115 5 is_stmt 1 view .LVU177
 663              		.loc 3 115 19 is_stmt 0 view .LVU178
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 36


 664 00a8 B5F90630 		ldrsh	r3, [r5, #6]
 665              		.loc 3 115 14 view .LVU179
 666 00ac ADF82630 		strh	r3, [sp, #38]	@ movhi
 667              	.LVL61:
 668              		.loc 3 115 14 view .LVU180
 669              	.LBE38:
 670              	.LBE37:
 275:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 671              		.loc 1 275 9 is_stmt 1 view .LVU181
 275:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 672              		.loc 1 275 28 is_stmt 0 view .LVU182
 673 00b0 2268     		ldr	r2, [r4]
 275:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 674              		.loc 1 275 11 view .LVU183
 675 00b2 B2F1807F 		cmp	r2, #16777216
 676 00b6 15D1     		bne	.L56
 677              	.L41:
 287:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 678              		.loc 1 287 9 is_stmt 1 view .LVU184
 288:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&clip_com, draw_ctx->clip_area, &map_area_rot);
 679              		.loc 1 288 9 view .LVU185
 289:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 680              		.loc 1 289 9 view .LVU186
 289:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 681              		.loc 1 289 20 is_stmt 0 view .LVU187
 682 00b8 08AA     		add	r2, sp, #32
 683 00ba B168     		ldr	r1, [r6, #8]
 684 00bc 0AA8     		add	r0, sp, #40
 685 00be FFF7FEFF 		bl	_lv_area_intersect
 686              	.LVL62:
 291:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 687              		.loc 1 291 9 is_stmt 1 view .LVU188
 291:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 688              		.loc 1 291 11 is_stmt 0 view .LVU189
 689 00c2 0028     		cmp	r0, #0
 690 00c4 3AD0     		beq	.L57
 296:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = &clip_com;
 691              		.loc 1 296 9 is_stmt 1 view .LVU190
 296:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = &clip_com;
 692              		.loc 1 296 27 is_stmt 0 view .LVU191
 693 00c6 D6F80890 		ldr	r9, [r6, #8]
 694              	.LVL63:
 297:lvgl/src/draw/lv_draw_img.c ****         lv_draw_img_decoded(draw_ctx, draw_dsc, coords, cdsc->dec_dsc.img_data, cf);
 695              		.loc 1 297 9 is_stmt 1 view .LVU192
 297:lvgl/src/draw/lv_draw_img.c ****         lv_draw_img_decoded(draw_ctx, draw_dsc, coords, cdsc->dec_dsc.img_data, cf);
 696              		.loc 1 297 29 is_stmt 0 view .LVU193
 697 00ca 0AAB     		add	r3, sp, #40
 698 00cc B360     		str	r3, [r6, #8]
 298:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 699              		.loc 1 298 9 is_stmt 1 view .LVU194
 700 00ce BB69     		ldr	r3, [r7, #24]
 701 00d0 CDF80080 		str	r8, [sp]
 702 00d4 2A46     		mov	r2, r5
 703 00d6 2146     		mov	r1, r4
 704 00d8 3046     		mov	r0, r6
 705              	.LVL64:
 298:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 37


 706              		.loc 1 298 9 is_stmt 0 view .LVU195
 707 00da FFF7FEFF 		bl	lv_draw_img_decoded
 708              	.LVL65:
 299:lvgl/src/draw/lv_draw_img.c ****     }
 709              		.loc 1 299 9 is_stmt 1 view .LVU196
 299:lvgl/src/draw/lv_draw_img.c ****     }
 710              		.loc 1 299 29 is_stmt 0 view .LVU197
 711 00de C6F80890 		str	r9, [r6, #8]
 712              	.LBE36:
 713 00e2 CAE7     		b	.L39
 714              	.LVL66:
 715              	.L56:
 716              	.LBB44:
 717              	.LBB39:
 276:lvgl/src/draw/lv_draw_img.c ****             int32_t h = lv_area_get_height(coords);
 718              		.loc 1 276 13 is_stmt 1 view .LVU198
 719              	.LBB40:
 720              	.LBI40:
 116:lvgl/src/draw/../misc/lv_area.h **** }
 117:lvgl/src/draw/../misc/lv_area.h **** 
 118:lvgl/src/draw/../misc/lv_area.h **** /**
 119:lvgl/src/draw/../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/../misc/lv_area.h ****  */
 123:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 721              		.loc 3 123 26 view .LVU199
 722              	.LBB41:
 124:lvgl/src/draw/../misc/lv_area.h **** {
 125:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 723              		.loc 3 125 5 view .LVU200
 724              		.loc 3 125 31 is_stmt 0 view .LVU201
 725 00e4 A988     		ldrh	r1, [r5, #4]
 726              		.loc 3 125 44 view .LVU202
 727 00e6 2A88     		ldrh	r2, [r5]
 728              		.loc 3 125 36 view .LVU203
 729 00e8 891A     		subs	r1, r1, r2
 730 00ea 89B2     		uxth	r1, r1
 731              		.loc 3 125 49 view .LVU204
 732 00ec 0131     		adds	r1, r1, #1
 733              	.LVL67:
 734              		.loc 3 125 49 view .LVU205
 735              	.LBE41:
 736              	.LBE40:
 277:lvgl/src/draw/lv_draw_img.c **** 
 737              		.loc 1 277 13 is_stmt 1 view .LVU206
 738              	.LBB42:
 739              	.LBI42:
 126:lvgl/src/draw/../misc/lv_area.h **** }
 127:lvgl/src/draw/../misc/lv_area.h **** 
 128:lvgl/src/draw/../misc/lv_area.h **** /**
 129:lvgl/src/draw/../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/../misc/lv_area.h ****  */
 133:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 740              		.loc 3 133 26 view .LVU207
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 38


 741              	.LBB43:
 134:lvgl/src/draw/../misc/lv_area.h **** {
 135:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 742              		.loc 3 135 5 view .LVU208
 743              		.loc 3 135 31 is_stmt 0 view .LVU209
 744 00ee 9AB2     		uxth	r2, r3
 745              		.loc 3 135 44 view .LVU210
 746 00f0 6B88     		ldrh	r3, [r5, #2]
 747              		.loc 3 135 36 view .LVU211
 748 00f2 D21A     		subs	r2, r2, r3
 749 00f4 92B2     		uxth	r2, r2
 750              		.loc 3 135 49 view .LVU212
 751 00f6 0132     		adds	r2, r2, #1
 752              	.LVL68:
 753              		.loc 3 135 49 view .LVU213
 754              	.LBE43:
 755              	.LBE42:
 279:lvgl/src/draw/lv_draw_img.c **** 
 756              		.loc 1 279 13 is_stmt 1 view .LVU214
 279:lvgl/src/draw/lv_draw_img.c **** 
 757              		.loc 1 279 92 is_stmt 0 view .LVU215
 758 00f8 6388     		ldrh	r3, [r4, #2]
 279:lvgl/src/draw/lv_draw_img.c **** 
 759              		.loc 1 279 13 view .LVU216
 760 00fa 201D     		adds	r0, r4, #4
 761 00fc 0190     		str	r0, [sp, #4]
 762 00fe 0093     		str	r3, [sp]
 763 0100 B4F90030 		ldrsh	r3, [r4]
 764 0104 12B2     		sxth	r2, r2
 765              	.LVL69:
 279:lvgl/src/draw/lv_draw_img.c **** 
 766              		.loc 1 279 13 view .LVU217
 767 0106 09B2     		sxth	r1, r1
 768              	.LVL70:
 279:lvgl/src/draw/lv_draw_img.c **** 
 769              		.loc 1 279 13 view .LVU218
 770 0108 08A8     		add	r0, sp, #32
 771 010a FFF7FEFF 		bl	_lv_img_buf_get_transformed_area
 772              	.LVL71:
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 773              		.loc 1 281 13 is_stmt 1 view .LVU219
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 774              		.loc 1 281 25 is_stmt 0 view .LVU220
 775 010e BDF82030 		ldrh	r3, [sp, #32]
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 776              		.loc 1 281 38 view .LVU221
 777 0112 2988     		ldrh	r1, [r5]
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 778              		.loc 1 281 29 view .LVU222
 779 0114 0B44     		add	r3, r3, r1
 780 0116 ADF82030 		strh	r3, [sp, #32]	@ movhi
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 781              		.loc 1 282 13 is_stmt 1 view .LVU223
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 782              		.loc 1 282 25 is_stmt 0 view .LVU224
 783 011a BDF82230 		ldrh	r3, [sp, #34]
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 39


 784              		.loc 1 282 38 view .LVU225
 785 011e 6A88     		ldrh	r2, [r5, #2]
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 786              		.loc 1 282 29 view .LVU226
 787 0120 1344     		add	r3, r3, r2
 788 0122 ADF82230 		strh	r3, [sp, #34]	@ movhi
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 789              		.loc 1 283 13 is_stmt 1 view .LVU227
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 790              		.loc 1 283 25 is_stmt 0 view .LVU228
 791 0126 BDF82430 		ldrh	r3, [sp, #36]
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 792              		.loc 1 283 29 view .LVU229
 793 012a 0B44     		add	r3, r3, r1
 794 012c ADF82430 		strh	r3, [sp, #36]	@ movhi
 284:lvgl/src/draw/lv_draw_img.c ****         }
 795              		.loc 1 284 13 is_stmt 1 view .LVU230
 284:lvgl/src/draw/lv_draw_img.c ****         }
 796              		.loc 1 284 25 is_stmt 0 view .LVU231
 797 0130 BDF82630 		ldrh	r3, [sp, #38]
 284:lvgl/src/draw/lv_draw_img.c ****         }
 798              		.loc 1 284 29 view .LVU232
 799 0134 1344     		add	r3, r3, r2
 800 0136 ADF82630 		strh	r3, [sp, #38]	@ movhi
 801 013a BDE7     		b	.L41
 802              	.LVL72:
 803              	.L57:
 284:lvgl/src/draw/lv_draw_img.c ****         }
 804              		.loc 1 284 29 view .LVU233
 805              	.LBE39:
 292:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 806              		.loc 1 292 13 is_stmt 1 view .LVU234
 807 013c 3846     		mov	r0, r7
 808              	.LVL73:
 292:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 809              		.loc 1 292 13 is_stmt 0 view .LVU235
 810 013e FFF7FEFF 		bl	draw_cleanup
 811              	.LVL74:
 293:lvgl/src/draw/lv_draw_img.c ****         }
 812              		.loc 1 293 13 is_stmt 1 view .LVU236
 293:lvgl/src/draw/lv_draw_img.c ****         }
 813              		.loc 1 293 20 is_stmt 0 view .LVU237
 814 0142 0120     		movs	r0, #1
 815 0144 64E7     		b	.L35
 816              	.LVL75:
 817              	.L40:
 293:lvgl/src/draw/lv_draw_img.c ****         }
 818              		.loc 1 293 20 view .LVU238
 819              	.LBE44:
 820              	.LBB45:
 303:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 821              		.loc 1 303 9 is_stmt 1 view .LVU239
 304:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, draw_ctx->clip_area, coords);
 822              		.loc 1 304 9 view .LVU240
 305:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 823              		.loc 1 305 9 view .LVU241
 305:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 40


 824              		.loc 1 305 20 is_stmt 0 view .LVU242
 825 0146 2A46     		mov	r2, r5
 826 0148 B168     		ldr	r1, [r6, #8]
 827 014a 06A8     		add	r0, sp, #24
 828 014c FFF7FEFF 		bl	_lv_area_intersect
 829              	.LVL76:
 307:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 830              		.loc 1 307 9 is_stmt 1 view .LVU243
 307:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 831              		.loc 1 307 11 is_stmt 0 view .LVU244
 832 0150 B8B3     		cbz	r0, .L58
 312:lvgl/src/draw/lv_draw_img.c **** 
 833              		.loc 1 312 9 is_stmt 1 view .LVU245
 834              	.LVL77:
 835              	.LBB46:
 836              	.LBI46:
 123:lvgl/src/draw/../misc/lv_area.h **** {
 837              		.loc 3 123 26 view .LVU246
 838              	.LBB47:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 839              		.loc 3 125 5 view .LVU247
 125:lvgl/src/draw/../misc/lv_area.h **** }
 840              		.loc 3 125 31 is_stmt 0 view .LVU248
 841 0152 BDF81C90 		ldrh	r9, [sp, #28]
 125:lvgl/src/draw/../misc/lv_area.h **** }
 842              		.loc 3 125 44 view .LVU249
 843 0156 BDF81830 		ldrh	r3, [sp, #24]
 125:lvgl/src/draw/../misc/lv_area.h **** }
 844              		.loc 3 125 36 view .LVU250
 845 015a A9EB0309 		sub	r9, r9, r3
 846 015e 1FFA89F9 		uxth	r9, r9
 125:lvgl/src/draw/../misc/lv_area.h **** }
 847              		.loc 3 125 49 view .LVU251
 848 0162 09F10109 		add	r9, r9, #1
 125:lvgl/src/draw/../misc/lv_area.h **** }
 849              		.loc 3 125 12 view .LVU252
 850 0166 0FFA89F3 		sxth	r3, r9
 851 016a 0593     		str	r3, [sp, #20]
 852              	.LVL78:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 853              		.loc 3 125 12 view .LVU253
 854              	.LBE47:
 855              	.LBE46:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 856              		.loc 1 314 9 is_stmt 1 view .LVU254
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 857              		.loc 1 314 26 is_stmt 0 view .LVU255
 858 016c 03EB4300 		add	r0, r3, r3, lsl #1
 859              	.LVL79:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 860              		.loc 1 314 26 view .LVU256
 861 0170 FFF7FEFF 		bl	lv_mem_buf_get
 862              	.LVL80:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 863              		.loc 1 314 26 view .LVU257
 864 0174 8246     		mov	r10, r0
 865              	.LVL81:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 41


 317:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 866              		.loc 1 317 9 is_stmt 1 view .LVU258
 317:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 867              		.loc 1 317 27 is_stmt 0 view .LVU259
 868 0176 D6F808B0 		ldr	fp, [r6, #8]
 869              	.LVL82:
 318:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&line, &mask_com);
 870              		.loc 1 318 9 is_stmt 1 view .LVU260
 319:lvgl/src/draw/lv_draw_img.c ****         lv_area_set_height(&line, 1);
 871              		.loc 1 319 9 view .LVU261
 872              	.LBB48:
 873              	.LBI48:
 110:lvgl/src/draw/../misc/lv_area.h **** {
 874              		.loc 3 110 20 view .LVU262
 875              	.LBB49:
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 876              		.loc 3 112 5 view .LVU263
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 877              		.loc 3 112 19 is_stmt 0 view .LVU264
 878 017a BDF91830 		ldrsh	r3, [sp, #24]
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 879              		.loc 3 112 14 view .LVU265
 880 017e ADF82030 		strh	r3, [sp, #32]	@ movhi
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 881              		.loc 3 113 5 is_stmt 1 view .LVU266
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 882              		.loc 3 113 19 is_stmt 0 view .LVU267
 883 0182 BDF91A30 		ldrsh	r3, [sp, #26]
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 884              		.loc 3 113 14 view .LVU268
 885 0186 ADF82230 		strh	r3, [sp, #34]	@ movhi
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 886              		.loc 3 114 5 is_stmt 1 view .LVU269
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 887              		.loc 3 114 19 is_stmt 0 view .LVU270
 888 018a BDF91C30 		ldrsh	r3, [sp, #28]
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 889              		.loc 3 114 14 view .LVU271
 890 018e ADF82430 		strh	r3, [sp, #36]	@ movhi
 115:lvgl/src/draw/../misc/lv_area.h **** }
 891              		.loc 3 115 5 is_stmt 1 view .LVU272
 115:lvgl/src/draw/../misc/lv_area.h **** }
 892              		.loc 3 115 19 is_stmt 0 view .LVU273
 893 0192 BDF91E30 		ldrsh	r3, [sp, #30]
 115:lvgl/src/draw/../misc/lv_area.h **** }
 894              		.loc 3 115 14 view .LVU274
 895 0196 ADF82630 		strh	r3, [sp, #38]	@ movhi
 896              	.LVL83:
 115:lvgl/src/draw/../misc/lv_area.h **** }
 897              		.loc 3 115 14 view .LVU275
 898              	.LBE49:
 899              	.LBE48:
 320:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 900              		.loc 1 320 9 is_stmt 1 view .LVU276
 901 019a 0121     		movs	r1, #1
 902 019c 08A8     		add	r0, sp, #32
 903              	.LVL84:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 42


 320:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 904              		.loc 1 320 9 is_stmt 0 view .LVU277
 905 019e FFF7FEFF 		bl	lv_area_set_height
 906              	.LVL85:
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 907              		.loc 1 321 9 is_stmt 1 view .LVU278
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 908              		.loc 1 321 29 is_stmt 0 view .LVU279
 909 01a2 BDF91830 		ldrsh	r3, [sp, #24]
 910 01a6 0393     		str	r3, [sp, #12]
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 911              		.loc 1 321 41 view .LVU280
 912 01a8 B5F90030 		ldrsh	r3, [r5]
 913 01ac 0493     		str	r3, [sp, #16]
 914              	.LVL86:
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 915              		.loc 1 322 9 is_stmt 1 view .LVU281
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 916              		.loc 1 322 29 is_stmt 0 view .LVU282
 917 01ae BDF91A90 		ldrsh	r9, [sp, #26]
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 918              		.loc 1 322 41 view .LVU283
 919 01b2 B5F90250 		ldrsh	r5, [r5, #2]
 920              	.LVL87:
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 921              		.loc 1 322 17 view .LVU284
 922 01b6 A9EB0505 		sub	r5, r9, r5
 923              	.LVL88:
 323:lvgl/src/draw/lv_draw_img.c ****         lv_res_t read_res;
 924              		.loc 1 323 9 is_stmt 1 view .LVU285
 324:lvgl/src/draw/lv_draw_img.c ****         for(row = mask_com.y1; row <= mask_com.y2; row++) {
 925              		.loc 1 324 9 view .LVU286
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 926              		.loc 1 325 9 view .LVU287
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 927              		.loc 1 325 9 is_stmt 0 view .LVU288
 928 01ba 2346     		mov	r3, r4
 929 01bc 5446     		mov	r4, r10
 930              	.LVL89:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 931              		.loc 1 325 9 view .LVU289
 932 01be 9A46     		mov	r10, r3
 933              	.LVL90:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 934              		.loc 1 325 9 view .LVU290
 935 01c0 13E0     		b	.L45
 936              	.LVL91:
 937              	.L58:
 308:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 938              		.loc 1 308 13 is_stmt 1 view .LVU291
 939 01c2 3846     		mov	r0, r7
 940              	.LVL92:
 308:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 941              		.loc 1 308 13 is_stmt 0 view .LVU292
 942 01c4 FFF7FEFF 		bl	draw_cleanup
 943              	.LVL93:
 309:lvgl/src/draw/lv_draw_img.c ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 43


 944              		.loc 1 309 13 is_stmt 1 view .LVU293
 309:lvgl/src/draw/lv_draw_img.c ****         }
 945              		.loc 1 309 20 is_stmt 0 view .LVU294
 946 01c8 0120     		movs	r0, #1
 947 01ca 21E7     		b	.L35
 948              	.LVL94:
 949              	.L60:
 950              	.LBB50:
 332:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 951              		.loc 1 332 17 is_stmt 1 view .LVU295
 952 01cc 3846     		mov	r0, r7
 953              	.LVL95:
 332:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 954              		.loc 1 332 17 is_stmt 0 view .LVU296
 955 01ce FFF7FEFF 		bl	lv_img_decoder_close
 956              	.LVL96:
 333:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 957              		.loc 1 333 17 is_stmt 1 view .LVU297
 333:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 958              		.loc 1 333 17 view .LVU298
 333:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 959              		.loc 1 333 17 view .LVU299
 334:lvgl/src/draw/lv_draw_img.c ****                 draw_cleanup(cdsc);
 960              		.loc 1 334 17 view .LVU300
 961 01d2 2046     		mov	r0, r4
 962 01d4 FFF7FEFF 		bl	lv_mem_buf_release
 963              	.LVL97:
 335:lvgl/src/draw/lv_draw_img.c ****                 draw_ctx->clip_area = clip_area_ori;
 964              		.loc 1 335 17 view .LVU301
 965 01d8 3846     		mov	r0, r7
 966 01da FFF7FEFF 		bl	draw_cleanup
 967              	.LVL98:
 336:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 968              		.loc 1 336 17 view .LVU302
 336:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 969              		.loc 1 336 37 is_stmt 0 view .LVU303
 970 01de C6F808B0 		str	fp, [r6, #8]
 337:lvgl/src/draw/lv_draw_img.c ****             }
 971              		.loc 1 337 17 is_stmt 1 view .LVU304
 337:lvgl/src/draw/lv_draw_img.c ****             }
 972              		.loc 1 337 24 is_stmt 0 view .LVU305
 973 01e2 0020     		movs	r0, #0
 974 01e4 14E7     		b	.L35
 975              	.LVL99:
 976              	.L47:
 337:lvgl/src/draw/lv_draw_img.c ****             }
 977              		.loc 1 337 24 view .LVU306
 978              	.LBE50:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 979              		.loc 1 325 55 is_stmt 1 discriminator 2 view .LVU307
 980 01e6 09F10109 		add	r9, r9, #1
 981              	.LVL100:
 982              	.L45:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 983              		.loc 1 325 36 discriminator 1 view .LVU308
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 984              		.loc 1 325 47 is_stmt 0 discriminator 1 view .LVU309
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 44


 985 01ea BDF91E30 		ldrsh	r3, [sp, #30]
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 986              		.loc 1 325 36 discriminator 1 view .LVU310
 987 01ee 4B45     		cmp	r3, r9
 988 01f0 28DB     		blt	.L59
 989              	.LBB51:
 326:lvgl/src/draw/lv_draw_img.c ****             union_ok = _lv_area_intersect(&mask_line, clip_area_ori, &line);
 990              		.loc 1 326 13 is_stmt 1 view .LVU311
 327:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 991              		.loc 1 327 13 view .LVU312
 327:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 992              		.loc 1 327 24 is_stmt 0 view .LVU313
 993 01f2 08AA     		add	r2, sp, #32
 994 01f4 5946     		mov	r1, fp
 995 01f6 0AA8     		add	r0, sp, #40
 996 01f8 FFF7FEFF 		bl	_lv_area_intersect
 997              	.LVL101:
 328:lvgl/src/draw/lv_draw_img.c **** 
 998              		.loc 1 328 13 is_stmt 1 view .LVU314
 328:lvgl/src/draw/lv_draw_img.c **** 
 999              		.loc 1 328 15 is_stmt 0 view .LVU315
 1000 01fc 0028     		cmp	r0, #0
 1001 01fe F2D0     		beq	.L47
 330:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 1002              		.loc 1 330 13 is_stmt 1 view .LVU316
 330:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 1003              		.loc 1 330 24 is_stmt 0 view .LVU317
 1004 0200 039B     		ldr	r3, [sp, #12]
 1005 0202 049A     		ldr	r2, [sp, #16]
 1006 0204 991A     		subs	r1, r3, r2
 1007 0206 0094     		str	r4, [sp]
 1008 0208 059B     		ldr	r3, [sp, #20]
 1009 020a 2AB2     		sxth	r2, r5
 1010 020c 09B2     		sxth	r1, r1
 1011 020e 3846     		mov	r0, r7
 1012              	.LVL102:
 330:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 1013              		.loc 1 330 24 view .LVU318
 1014 0210 FFF7FEFF 		bl	lv_img_decoder_read_line
 1015              	.LVL103:
 331:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 1016              		.loc 1 331 13 is_stmt 1 view .LVU319
 331:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 1017              		.loc 1 331 15 is_stmt 0 view .LVU320
 1018 0214 0128     		cmp	r0, #1
 1019 0216 D9D1     		bne	.L60
 340:lvgl/src/draw/lv_draw_img.c ****             lv_draw_img_decoded(draw_ctx, draw_dsc, &line, buf, cf);
 1020              		.loc 1 340 13 is_stmt 1 view .LVU321
 340:lvgl/src/draw/lv_draw_img.c ****             lv_draw_img_decoded(draw_ctx, draw_dsc, &line, buf, cf);
 1021              		.loc 1 340 33 is_stmt 0 view .LVU322
 1022 0218 0AAB     		add	r3, sp, #40
 1023 021a B360     		str	r3, [r6, #8]
 341:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 1024              		.loc 1 341 13 is_stmt 1 view .LVU323
 1025 021c CDF80080 		str	r8, [sp]
 1026 0220 2346     		mov	r3, r4
 1027 0222 08AA     		add	r2, sp, #32
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 45


 1028 0224 5146     		mov	r1, r10
 1029 0226 3046     		mov	r0, r6
 1030              	.LVL104:
 341:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 1031              		.loc 1 341 13 is_stmt 0 view .LVU324
 1032 0228 FFF7FEFF 		bl	lv_draw_img_decoded
 1033              	.LVL105:
 342:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 1034              		.loc 1 342 13 is_stmt 1 view .LVU325
 342:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 1035              		.loc 1 342 17 is_stmt 0 view .LVU326
 1036 022c BDF92230 		ldrsh	r3, [sp, #34]
 342:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 1037              		.loc 1 342 20 view .LVU327
 1038 0230 0133     		adds	r3, r3, #1
 1039 0232 ADF82230 		strh	r3, [sp, #34]	@ movhi
 343:lvgl/src/draw/lv_draw_img.c ****             y++;
 1040              		.loc 1 343 13 is_stmt 1 view .LVU328
 343:lvgl/src/draw/lv_draw_img.c ****             y++;
 1041              		.loc 1 343 17 is_stmt 0 view .LVU329
 1042 0236 BDF92630 		ldrsh	r3, [sp, #38]
 343:lvgl/src/draw/lv_draw_img.c ****             y++;
 1043              		.loc 1 343 20 view .LVU330
 1044 023a 0133     		adds	r3, r3, #1
 1045 023c ADF82630 		strh	r3, [sp, #38]	@ movhi
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1046              		.loc 1 344 13 is_stmt 1 view .LVU331
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1047              		.loc 1 344 14 is_stmt 0 view .LVU332
 1048 0240 0135     		adds	r5, r5, #1
 1049              	.LVL106:
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1050              		.loc 1 344 14 view .LVU333
 1051 0242 D0E7     		b	.L47
 1052              	.LVL107:
 1053              	.L59:
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1054              		.loc 1 344 14 view .LVU334
 1055              	.LBE51:
 346:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 1056              		.loc 1 346 9 is_stmt 1 view .LVU335
 346:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 1057              		.loc 1 346 29 is_stmt 0 view .LVU336
 1058 0244 C6F808B0 		str	fp, [r6, #8]
 347:lvgl/src/draw/lv_draw_img.c ****     }
 1059              		.loc 1 347 9 is_stmt 1 view .LVU337
 1060 0248 2046     		mov	r0, r4
 1061 024a FFF7FEFF 		bl	lv_mem_buf_release
 1062              	.LVL108:
 1063 024e 14E7     		b	.L39
 1064              	.LVL109:
 1065              	.L51:
 347:lvgl/src/draw/lv_draw_img.c ****     }
 1066              		.loc 1 347 9 is_stmt 0 view .LVU338
 1067              	.LBE45:
 248:lvgl/src/draw/lv_draw_img.c **** 
 1068              		.loc 1 248 29 view .LVU339
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 46


 1069 0250 0020     		movs	r0, #0
 1070              	.LVL110:
 248:lvgl/src/draw/lv_draw_img.c **** 
 1071              		.loc 1 248 29 view .LVU340
 1072 0252 DDE6     		b	.L35
 1073              		.cfi_endproc
 1074              	.LFE168:
 1076              		.section	.rodata.lv_draw_img.str1.4,"aMS",%progbits,1
 1077              		.align	2
 1078              	.LC0:
 1079 0000 4E6F0A64 		.ascii	"No\012data\000"
 1079      61746100 
 1080              		.section	.text.lv_draw_img,"ax",%progbits
 1081              		.align	1
 1082              		.global	lv_draw_img
 1083              		.syntax unified
 1084              		.thumb
 1085              		.thumb_func
 1087              	lv_draw_img:
 1088              	.LVL111:
 1089              	.LFB162:
  64:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
 1090              		.loc 1 64 1 is_stmt 1 view -0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
  64:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
 1094              		.loc 1 64 1 is_stmt 0 view .LVU342
 1095 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1096              	.LCFI12:
 1097              		.cfi_def_cfa_offset 24
 1098              		.cfi_offset 4, -24
 1099              		.cfi_offset 5, -20
 1100              		.cfi_offset 6, -16
 1101              		.cfi_offset 7, -12
 1102              		.cfi_offset 8, -8
 1103              		.cfi_offset 14, -4
 1104 0004 0446     		mov	r4, r0
 1105 0006 1646     		mov	r6, r2
  65:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
 1106              		.loc 1 65 5 is_stmt 1 view .LVU343
  65:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
 1107              		.loc 1 65 7 is_stmt 0 view .LVU344
 1108 0008 BBB1     		cbz	r3, .L66
 1109 000a 0D46     		mov	r5, r1
 1110 000c 1F46     		mov	r7, r3
  71:lvgl/src/draw/lv_draw_img.c **** 
 1111              		.loc 1 71 5 is_stmt 1 view .LVU345
  71:lvgl/src/draw/lv_draw_img.c **** 
 1112              		.loc 1 71 11 is_stmt 0 view .LVU346
 1113 000e CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 1114              	.LVL112:
  71:lvgl/src/draw/lv_draw_img.c **** 
 1115              		.loc 1 71 7 view .LVU347
 1116 0010 022B     		cmp	r3, #2
 1117 0012 10D9     		bls	.L61
  73:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 47


 1118              		.loc 1 73 5 is_stmt 1 view .LVU348
 1119              	.LVL113:
  75:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
 1120              		.loc 1 75 5 view .LVU349
  75:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
 1121              		.loc 1 75 16 is_stmt 0 view .LVU350
 1122 0014 D0F81C80 		ldr	r8, [r0, #28]
  75:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
 1123              		.loc 1 75 7 view .LVU351
 1124 0018 B8F1000F 		cmp	r8, #0
 1125 001c 03D0     		beq	.L64
  76:lvgl/src/draw/lv_draw_img.c ****     }
 1126              		.loc 1 76 9 is_stmt 1 view .LVU352
  76:lvgl/src/draw/lv_draw_img.c ****     }
 1127              		.loc 1 76 15 is_stmt 0 view .LVU353
 1128 001e 3B46     		mov	r3, r7
 1129 0020 C047     		blx	r8
 1130              	.LVL114:
  79:lvgl/src/draw/lv_draw_img.c ****         res = decode_and_draw(draw_ctx, dsc, coords, src);
 1131              		.loc 1 79 5 is_stmt 1 view .LVU354
  79:lvgl/src/draw/lv_draw_img.c ****         res = decode_and_draw(draw_ctx, dsc, coords, src);
 1132              		.loc 1 79 7 is_stmt 0 view .LVU355
 1133 0022 0128     		cmp	r0, #1
 1134 0024 07D0     		beq	.L61
 1135              	.LVL115:
 1136              	.L64:
  80:lvgl/src/draw/lv_draw_img.c ****     }
 1137              		.loc 1 80 9 is_stmt 1 view .LVU356
  80:lvgl/src/draw/lv_draw_img.c ****     }
 1138              		.loc 1 80 15 is_stmt 0 view .LVU357
 1139 0026 3B46     		mov	r3, r7
 1140 0028 3246     		mov	r2, r6
 1141 002a 2946     		mov	r1, r5
 1142 002c 2046     		mov	r0, r4
 1143 002e FFF7FEFF 		bl	decode_and_draw
 1144              	.LVL116:
  83:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1145              		.loc 1 83 5 is_stmt 1 view .LVU358
  83:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1146              		.loc 1 83 7 is_stmt 0 view .LVU359
 1147 0032 0128     		cmp	r0, #1
 1148 0034 06D1     		bne	.L67
 1149              	.LVL117:
 1150              	.L61:
  87:lvgl/src/draw/lv_draw_img.c **** 
 1151              		.loc 1 87 1 view .LVU360
 1152 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1153              	.LVL118:
 1154              	.L66:
  66:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1155              		.loc 1 66 9 is_stmt 1 view .LVU361
  66:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1156              		.loc 1 66 9 view .LVU362
  66:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1157              		.loc 1 66 9 view .LVU363
  67:lvgl/src/draw/lv_draw_img.c ****         return;
 1158              		.loc 1 67 9 view .LVU364
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 48


 1159 003a 054A     		ldr	r2, .L68
 1160              	.LVL119:
  67:lvgl/src/draw/lv_draw_img.c ****         return;
 1161              		.loc 1 67 9 is_stmt 0 view .LVU365
 1162 003c 3146     		mov	r1, r6
 1163              	.LVL120:
  67:lvgl/src/draw/lv_draw_img.c ****         return;
 1164              		.loc 1 67 9 view .LVU366
 1165 003e FFF7FEFF 		bl	show_error
 1166              	.LVL121:
  68:lvgl/src/draw/lv_draw_img.c ****     }
 1167              		.loc 1 68 9 is_stmt 1 view .LVU367
 1168 0042 F8E7     		b	.L61
 1169              	.LVL122:
 1170              	.L67:
  84:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1171              		.loc 1 84 9 view .LVU368
  84:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1172              		.loc 1 84 9 view .LVU369
  84:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1173              		.loc 1 84 9 view .LVU370
  85:lvgl/src/draw/lv_draw_img.c ****     }
 1174              		.loc 1 85 9 view .LVU371
 1175 0044 024A     		ldr	r2, .L68
 1176 0046 3146     		mov	r1, r6
 1177 0048 2046     		mov	r0, r4
 1178              	.LVL123:
  85:lvgl/src/draw/lv_draw_img.c ****     }
 1179              		.loc 1 85 9 is_stmt 0 view .LVU372
 1180 004a FFF7FEFF 		bl	show_error
 1181              	.LVL124:
  85:lvgl/src/draw/lv_draw_img.c ****     }
 1182              		.loc 1 85 9 view .LVU373
 1183 004e F2E7     		b	.L61
 1184              	.L69:
 1185              		.align	2
 1186              	.L68:
 1187 0050 00000000 		.word	.LC0
 1188              		.cfi_endproc
 1189              	.LFE162:
 1191              		.text
 1192              	.Letext0:
 1193              		.file 4 "/usr/local/include/sys/_types/_int8_t.h"
 1194              		.file 5 "/usr/local/include/sys/_types/_int16_t.h"
 1195              		.file 6 "/usr/local/include/sys/_types/_int32_t.h"
 1196              		.file 7 "/usr/local/include/_types/_uint8_t.h"
 1197              		.file 8 "/usr/local/include/_types/_uint16_t.h"
 1198              		.file 9 "/usr/local/include/_types/_uint32_t.h"
 1199              		.file 10 "/usr/local/include/arm/_types.h"
 1200              		.file 11 "lvgl/src/draw/../misc/lv_types.h"
 1201              		.file 12 "/usr/local/include/sys/_types/_size_t.h"
 1202              		.file 13 "lvgl/src/draw/lv_img_buf.h"
 1203              		.file 14 "lvgl/src/draw/lv_img_decoder.h"
 1204              		.file 15 "lvgl/src/draw/../misc/../font/lv_font.h"
 1205              		.file 16 "lvgl/src/draw/../misc/lv_txt.h"
 1206              		.file 17 "lvgl/src/draw/../misc/lv_bidi.h"
 1207              		.file 18 "lvgl/src/draw/../misc/lv_style.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 49


 1208              		.file 19 "lvgl/src/draw/lv_draw_img.h"
 1209              		.file 20 "lvgl/src/draw/lv_img_cache.h"
 1210              		.file 21 "lvgl/src/draw/../hal/../draw/lv_draw_rect.h"
 1211              		.file 22 "lvgl/src/draw/../hal/../draw/lv_draw_label.h"
 1212              		.file 23 "lvgl/src/draw/../hal/../draw/lv_draw_line.h"
 1213              		.file 24 "lvgl/src/draw/../hal/../draw/lv_draw_arc.h"
 1214              		.file 25 "lvgl/src/draw/../hal/../draw/lv_draw_layer.h"
 1215              		.file 26 "lvgl/src/draw/../hal/../draw/lv_draw.h"
 1216              		.file 27 "lvgl/src/draw/../misc/lv_mem.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s 			page 50


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_img.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:21     .text.draw_cleanup:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:26     .text.draw_cleanup:00000000 draw_cleanup
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:48     .text.show_error:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:53     .text.show_error:00000000 show_error
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:132    .text.lv_draw_img_dsc_init:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:138    .text.lv_draw_img_dsc_init:00000000 lv_draw_img_dsc_init
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:198    .text.lv_img_cf_get_px_size:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:204    .text.lv_img_cf_get_px_size:00000000 lv_img_cf_get_px_size
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:221    .text.lv_img_cf_get_px_size:0000000a $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:288    .text.lv_img_cf_is_chroma_keyed:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:294    .text.lv_img_cf_is_chroma_keyed:00000000 lv_img_cf_is_chroma_keyed
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:332    .text.lv_img_cf_has_alpha:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:338    .text.lv_img_cf_has_alpha:00000000 lv_img_cf_has_alpha
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:368    .text.lv_img_src_get_type:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:374    .text.lv_img_src_get_type:00000000 lv_img_src_get_type
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:431    .text.lv_draw_img_decoded:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:437    .text.lv_draw_img_decoded:00000000 lv_draw_img_decoded
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:476    .text.decode_and_draw:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:481    .text.decode_and_draw:00000000 decode_and_draw
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:1077   .rodata.lv_draw_img.str1.4:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:1081   .text.lv_draw_img:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:1087   .text.lv_draw_img:00000000 lv_draw_img
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:1187   .text.lv_draw_img:00000050 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:232    .text.lv_img_cf_get_px_size:00000015 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc8XMKDb.s:232    .text.lv_img_cf_get_px_size:00000016 $t

UNDEFINED SYMBOLS
lv_img_decoder_close
lv_draw_rect_dsc_init
lv_draw_rect
lv_draw_label_dsc_init
lv_draw_label
lv_memset_00
_lv_img_cache_open
_lv_area_intersect
_lv_img_buf_get_transformed_area
lv_mem_buf_get
lv_area_set_height
lv_mem_buf_release
lv_img_decoder_read_line
