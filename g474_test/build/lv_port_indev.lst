ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_port_indev.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/lv_port_indev.c"
  20              		.section	.text.touchpad_is_pressed,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	touchpad_is_pressed:
  27              	.LFB207:
   1:lvgl/src/lv_port_indev.c **** /**
   2:lvgl/src/lv_port_indev.c ****  * @file lv_port_indev_templ.c
   3:lvgl/src/lv_port_indev.c ****  *
   4:lvgl/src/lv_port_indev.c ****  */
   5:lvgl/src/lv_port_indev.c **** 
   6:lvgl/src/lv_port_indev.c **** /*Copy this file as "lv_port_indev.c" and set this value to "1" to enable content*/
   7:lvgl/src/lv_port_indev.c **** #if 1
   8:lvgl/src/lv_port_indev.c **** 
   9:lvgl/src/lv_port_indev.c **** /*********************
  10:lvgl/src/lv_port_indev.c ****  *      INCLUDES
  11:lvgl/src/lv_port_indev.c ****  *********************/
  12:lvgl/src/lv_port_indev.c **** #include "lv_port_indev.h"
  13:lvgl/src/lv_port_indev.c **** #include "lvgl.h"
  14:lvgl/src/lv_port_indev.c **** 
  15:lvgl/src/lv_port_indev.c **** /*********************
  16:lvgl/src/lv_port_indev.c ****  *      DEFINES
  17:lvgl/src/lv_port_indev.c ****  *********************/
  18:lvgl/src/lv_port_indev.c **** 
  19:lvgl/src/lv_port_indev.c **** /**********************
  20:lvgl/src/lv_port_indev.c ****  *      TYPEDEFS
  21:lvgl/src/lv_port_indev.c ****  **********************/
  22:lvgl/src/lv_port_indev.c **** 
  23:lvgl/src/lv_port_indev.c **** /**********************
  24:lvgl/src/lv_port_indev.c ****  *  STATIC PROTOTYPES
  25:lvgl/src/lv_port_indev.c ****  **********************/
  26:lvgl/src/lv_port_indev.c **** 
  27:lvgl/src/lv_port_indev.c **** static void touchpad_init(void);
  28:lvgl/src/lv_port_indev.c **** static void touchpad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
  29:lvgl/src/lv_port_indev.c **** static bool touchpad_is_pressed(void);
  30:lvgl/src/lv_port_indev.c **** static void touchpad_get_xy(lv_coord_t * x, lv_coord_t * y);
  31:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 2


  32:lvgl/src/lv_port_indev.c **** static void mouse_init(void);
  33:lvgl/src/lv_port_indev.c **** static void mouse_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
  34:lvgl/src/lv_port_indev.c **** static bool mouse_is_pressed(void);
  35:lvgl/src/lv_port_indev.c **** static void mouse_get_xy(lv_coord_t * x, lv_coord_t * y);
  36:lvgl/src/lv_port_indev.c **** 
  37:lvgl/src/lv_port_indev.c **** static void keypad_init(void);
  38:lvgl/src/lv_port_indev.c **** static void keypad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
  39:lvgl/src/lv_port_indev.c **** static uint32_t keypad_get_key(void);
  40:lvgl/src/lv_port_indev.c **** 
  41:lvgl/src/lv_port_indev.c **** static void encoder_init(void);
  42:lvgl/src/lv_port_indev.c **** static void encoder_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
  43:lvgl/src/lv_port_indev.c **** static void encoder_handler(void);
  44:lvgl/src/lv_port_indev.c **** 
  45:lvgl/src/lv_port_indev.c **** static void button_init(void);
  46:lvgl/src/lv_port_indev.c **** static void button_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data);
  47:lvgl/src/lv_port_indev.c **** static int8_t button_get_pressed_id(void);
  48:lvgl/src/lv_port_indev.c **** static bool button_is_pressed(uint8_t id);
  49:lvgl/src/lv_port_indev.c **** 
  50:lvgl/src/lv_port_indev.c **** /**********************
  51:lvgl/src/lv_port_indev.c ****  *  STATIC VARIABLES
  52:lvgl/src/lv_port_indev.c ****  **********************/
  53:lvgl/src/lv_port_indev.c **** lv_indev_t * indev_touchpad;
  54:lvgl/src/lv_port_indev.c **** lv_indev_t * indev_mouse;
  55:lvgl/src/lv_port_indev.c **** lv_indev_t * indev_keypad;
  56:lvgl/src/lv_port_indev.c **** lv_indev_t * indev_encoder;
  57:lvgl/src/lv_port_indev.c **** lv_indev_t * indev_button;
  58:lvgl/src/lv_port_indev.c **** 
  59:lvgl/src/lv_port_indev.c **** static int32_t encoder_diff;
  60:lvgl/src/lv_port_indev.c **** static lv_indev_state_t encoder_state;
  61:lvgl/src/lv_port_indev.c **** 
  62:lvgl/src/lv_port_indev.c **** /**********************
  63:lvgl/src/lv_port_indev.c ****  *      MACROS
  64:lvgl/src/lv_port_indev.c ****  **********************/
  65:lvgl/src/lv_port_indev.c **** 
  66:lvgl/src/lv_port_indev.c **** /**********************
  67:lvgl/src/lv_port_indev.c ****  *   GLOBAL FUNCTIONS
  68:lvgl/src/lv_port_indev.c ****  **********************/
  69:lvgl/src/lv_port_indev.c **** 
  70:lvgl/src/lv_port_indev.c **** void lv_port_indev_init(void)
  71:lvgl/src/lv_port_indev.c **** {
  72:lvgl/src/lv_port_indev.c ****     /**
  73:lvgl/src/lv_port_indev.c ****      * Here you will find example implementation of input devices supported by LittelvGL:
  74:lvgl/src/lv_port_indev.c ****      *  - Touchpad
  75:lvgl/src/lv_port_indev.c ****      *  - Mouse (with cursor support)
  76:lvgl/src/lv_port_indev.c ****      *  - Keypad (supports GUI usage only with key)
  77:lvgl/src/lv_port_indev.c ****      *  - Encoder (supports GUI usage only with: left, right, push)
  78:lvgl/src/lv_port_indev.c ****      *  - Button (external buttons to press points on the screen)
  79:lvgl/src/lv_port_indev.c ****      *
  80:lvgl/src/lv_port_indev.c ****      *  The `..._read()` function are only examples.
  81:lvgl/src/lv_port_indev.c ****      *  You should shape them according to your hardware
  82:lvgl/src/lv_port_indev.c ****      */
  83:lvgl/src/lv_port_indev.c **** 
  84:lvgl/src/lv_port_indev.c ****     static lv_indev_drv_t indev_drv;
  85:lvgl/src/lv_port_indev.c **** 
  86:lvgl/src/lv_port_indev.c ****     /*------------------
  87:lvgl/src/lv_port_indev.c ****      * Touchpad
  88:lvgl/src/lv_port_indev.c ****      * -----------------*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 3


  89:lvgl/src/lv_port_indev.c **** 
  90:lvgl/src/lv_port_indev.c ****     /*Initialize your touchpad if you have*/
  91:lvgl/src/lv_port_indev.c ****     touchpad_init();
  92:lvgl/src/lv_port_indev.c **** 
  93:lvgl/src/lv_port_indev.c ****     /*Register a touchpad input device*/
  94:lvgl/src/lv_port_indev.c ****     lv_indev_drv_init(&indev_drv);
  95:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_POINTER;
  96:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = touchpad_read;
  97:lvgl/src/lv_port_indev.c ****     indev_touchpad = lv_indev_drv_register(&indev_drv);
  98:lvgl/src/lv_port_indev.c **** 
  99:lvgl/src/lv_port_indev.c ****     /*------------------
 100:lvgl/src/lv_port_indev.c ****      * Mouse
 101:lvgl/src/lv_port_indev.c ****      * -----------------*/
 102:lvgl/src/lv_port_indev.c **** 
 103:lvgl/src/lv_port_indev.c ****     /*Initialize your mouse if you have*/
 104:lvgl/src/lv_port_indev.c ****     mouse_init();
 105:lvgl/src/lv_port_indev.c **** 
 106:lvgl/src/lv_port_indev.c ****     /*Register a mouse input device*/
 107:lvgl/src/lv_port_indev.c ****     lv_indev_drv_init(&indev_drv);
 108:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_POINTER;
 109:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = mouse_read;
 110:lvgl/src/lv_port_indev.c ****     indev_mouse = lv_indev_drv_register(&indev_drv);
 111:lvgl/src/lv_port_indev.c **** 
 112:lvgl/src/lv_port_indev.c ****     /*Set cursor. For simplicity set a HOME symbol now.*/
 113:lvgl/src/lv_port_indev.c ****     lv_obj_t * mouse_cursor = lv_img_create(lv_scr_act());
 114:lvgl/src/lv_port_indev.c ****     lv_img_set_src(mouse_cursor, LV_SYMBOL_HOME);
 115:lvgl/src/lv_port_indev.c ****     lv_indev_set_cursor(indev_mouse, mouse_cursor);
 116:lvgl/src/lv_port_indev.c **** 
 117:lvgl/src/lv_port_indev.c ****     /*------------------
 118:lvgl/src/lv_port_indev.c ****      * Keypad
 119:lvgl/src/lv_port_indev.c ****      * -----------------*/
 120:lvgl/src/lv_port_indev.c **** 
 121:lvgl/src/lv_port_indev.c ****     /*Initialize your keypad or keyboard if you have*/
 122:lvgl/src/lv_port_indev.c ****     keypad_init();
 123:lvgl/src/lv_port_indev.c **** 
 124:lvgl/src/lv_port_indev.c ****     /*Register a keypad input device*/
 125:lvgl/src/lv_port_indev.c ****     lv_indev_drv_init(&indev_drv);
 126:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_KEYPAD;
 127:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = keypad_read;
 128:lvgl/src/lv_port_indev.c ****     indev_keypad = lv_indev_drv_register(&indev_drv);
 129:lvgl/src/lv_port_indev.c **** 
 130:lvgl/src/lv_port_indev.c ****     /*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,
 131:lvgl/src/lv_port_indev.c ****      *add objects to the group with `lv_group_add_obj(group, obj)`
 132:lvgl/src/lv_port_indev.c ****      *and assign this input device to group to navigate in it:
 133:lvgl/src/lv_port_indev.c ****      *`lv_indev_set_group(indev_keypad, group);`*/
 134:lvgl/src/lv_port_indev.c **** 
 135:lvgl/src/lv_port_indev.c ****     /*------------------
 136:lvgl/src/lv_port_indev.c ****      * Encoder
 137:lvgl/src/lv_port_indev.c ****      * -----------------*/
 138:lvgl/src/lv_port_indev.c **** 
 139:lvgl/src/lv_port_indev.c ****     /*Initialize your encoder if you have*/
 140:lvgl/src/lv_port_indev.c ****     encoder_init();
 141:lvgl/src/lv_port_indev.c **** 
 142:lvgl/src/lv_port_indev.c ****     /*Register a encoder input device*/
 143:lvgl/src/lv_port_indev.c ****     lv_indev_drv_init(&indev_drv);
 144:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_ENCODER;
 145:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = encoder_read;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 4


 146:lvgl/src/lv_port_indev.c ****     indev_encoder = lv_indev_drv_register(&indev_drv);
 147:lvgl/src/lv_port_indev.c **** 
 148:lvgl/src/lv_port_indev.c ****     /*Later you should create group(s) with `lv_group_t * group = lv_group_create()`,
 149:lvgl/src/lv_port_indev.c ****      *add objects to the group with `lv_group_add_obj(group, obj)`
 150:lvgl/src/lv_port_indev.c ****      *and assign this input device to group to navigate in it:
 151:lvgl/src/lv_port_indev.c ****      *`lv_indev_set_group(indev_encoder, group);`*/
 152:lvgl/src/lv_port_indev.c **** 
 153:lvgl/src/lv_port_indev.c ****     /*------------------
 154:lvgl/src/lv_port_indev.c ****      * Button
 155:lvgl/src/lv_port_indev.c ****      * -----------------*/
 156:lvgl/src/lv_port_indev.c **** 
 157:lvgl/src/lv_port_indev.c ****     /*Initialize your button if you have*/
 158:lvgl/src/lv_port_indev.c ****     button_init();
 159:lvgl/src/lv_port_indev.c **** 
 160:lvgl/src/lv_port_indev.c ****     /*Register a button input device*/
 161:lvgl/src/lv_port_indev.c ****     lv_indev_drv_init(&indev_drv);
 162:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_BUTTON;
 163:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = button_read;
 164:lvgl/src/lv_port_indev.c ****     indev_button = lv_indev_drv_register(&indev_drv);
 165:lvgl/src/lv_port_indev.c **** 
 166:lvgl/src/lv_port_indev.c ****     /*Assign buttons to points on the screen*/
 167:lvgl/src/lv_port_indev.c ****     static const lv_point_t btn_points[2] = {
 168:lvgl/src/lv_port_indev.c ****         {10, 10},   /*Button 0 -> x:10; y:10*/
 169:lvgl/src/lv_port_indev.c ****         {40, 100},  /*Button 1 -> x:40; y:100*/
 170:lvgl/src/lv_port_indev.c ****     };
 171:lvgl/src/lv_port_indev.c ****     lv_indev_set_button_points(indev_button, btn_points);
 172:lvgl/src/lv_port_indev.c **** }
 173:lvgl/src/lv_port_indev.c **** 
 174:lvgl/src/lv_port_indev.c **** /**********************
 175:lvgl/src/lv_port_indev.c ****  *   STATIC FUNCTIONS
 176:lvgl/src/lv_port_indev.c ****  **********************/
 177:lvgl/src/lv_port_indev.c **** 
 178:lvgl/src/lv_port_indev.c **** /*------------------
 179:lvgl/src/lv_port_indev.c ****  * Touchpad
 180:lvgl/src/lv_port_indev.c ****  * -----------------*/
 181:lvgl/src/lv_port_indev.c **** 
 182:lvgl/src/lv_port_indev.c **** /*Initialize your touchpad*/
 183:lvgl/src/lv_port_indev.c **** static void touchpad_init(void)
 184:lvgl/src/lv_port_indev.c **** {
 185:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 186:lvgl/src/lv_port_indev.c **** }
 187:lvgl/src/lv_port_indev.c **** 
 188:lvgl/src/lv_port_indev.c **** /*Will be called by the library to read the touchpad*/
 189:lvgl/src/lv_port_indev.c **** static void touchpad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)
 190:lvgl/src/lv_port_indev.c **** {
 191:lvgl/src/lv_port_indev.c ****     static lv_coord_t last_x = 0;
 192:lvgl/src/lv_port_indev.c ****     static lv_coord_t last_y = 0;
 193:lvgl/src/lv_port_indev.c **** 
 194:lvgl/src/lv_port_indev.c ****     /*Save the pressed coordinates and the state*/
 195:lvgl/src/lv_port_indev.c ****     if(touchpad_is_pressed()) {
 196:lvgl/src/lv_port_indev.c ****         touchpad_get_xy(&last_x, &last_y);
 197:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 198:lvgl/src/lv_port_indev.c ****     }
 199:lvgl/src/lv_port_indev.c ****     else {
 200:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_REL;
 201:lvgl/src/lv_port_indev.c ****     }
 202:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 5


 203:lvgl/src/lv_port_indev.c ****     /*Set the last pressed coordinates*/
 204:lvgl/src/lv_port_indev.c ****     data->point.x = last_x;
 205:lvgl/src/lv_port_indev.c ****     data->point.y = last_y;
 206:lvgl/src/lv_port_indev.c **** }
 207:lvgl/src/lv_port_indev.c **** 
 208:lvgl/src/lv_port_indev.c **** /*Return true is the touchpad is pressed*/
 209:lvgl/src/lv_port_indev.c **** static bool touchpad_is_pressed(void)
 210:lvgl/src/lv_port_indev.c **** {
  28              		.loc 1 210 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 211:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 212:lvgl/src/lv_port_indev.c **** 
 213:lvgl/src/lv_port_indev.c ****     return false;
  33              		.loc 1 213 5 view .LVU1
 214:lvgl/src/lv_port_indev.c **** }
  34              		.loc 1 214 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
  37              		.cfi_endproc
  38              	.LFE207:
  40              		.section	.text.touchpad_get_xy,"ax",%progbits
  41              		.align	1
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	touchpad_get_xy:
  47              	.LVL0:
  48              	.LFB208:
 215:lvgl/src/lv_port_indev.c **** 
 216:lvgl/src/lv_port_indev.c **** /*Get the x and y coordinates if the touchpad is pressed*/
 217:lvgl/src/lv_port_indev.c **** static void touchpad_get_xy(lv_coord_t * x, lv_coord_t * y)
 218:lvgl/src/lv_port_indev.c **** {
  49              		.loc 1 218 1 is_stmt 1 view -0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
 219:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 220:lvgl/src/lv_port_indev.c **** 
 221:lvgl/src/lv_port_indev.c ****     (*x) = 0;
  54              		.loc 1 221 5 view .LVU4
  55              		.loc 1 221 10 is_stmt 0 view .LVU5
  56 0000 0023     		movs	r3, #0
  57 0002 0380     		strh	r3, [r0]	@ movhi
 222:lvgl/src/lv_port_indev.c ****     (*y) = 0;
  58              		.loc 1 222 5 is_stmt 1 view .LVU6
  59              		.loc 1 222 10 is_stmt 0 view .LVU7
  60 0004 0B80     		strh	r3, [r1]	@ movhi
 223:lvgl/src/lv_port_indev.c **** }
  61              		.loc 1 223 1 view .LVU8
  62 0006 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE208:
  66              		.section	.text.touchpad_read,"ax",%progbits
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 6


  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	touchpad_read:
  73              	.LVL1:
  74              	.LFB206:
 190:lvgl/src/lv_port_indev.c ****     static lv_coord_t last_x = 0;
  75              		.loc 1 190 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
 190:lvgl/src/lv_port_indev.c ****     static lv_coord_t last_x = 0;
  79              		.loc 1 190 1 is_stmt 0 view .LVU10
  80 0000 10B5     		push	{r4, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 4, -8
  84              		.cfi_offset 14, -4
  85 0002 0C46     		mov	r4, r1
 191:lvgl/src/lv_port_indev.c ****     static lv_coord_t last_y = 0;
  86              		.loc 1 191 5 is_stmt 1 view .LVU11
 192:lvgl/src/lv_port_indev.c **** 
  87              		.loc 1 192 5 view .LVU12
 195:lvgl/src/lv_port_indev.c ****         touchpad_get_xy(&last_x, &last_y);
  88              		.loc 1 195 5 view .LVU13
 195:lvgl/src/lv_port_indev.c ****         touchpad_get_xy(&last_x, &last_y);
  89              		.loc 1 195 8 is_stmt 0 view .LVU14
  90 0004 FFF7FEFF 		bl	touchpad_is_pressed
  91              	.LVL2:
 195:lvgl/src/lv_port_indev.c ****         touchpad_get_xy(&last_x, &last_y);
  92              		.loc 1 195 7 view .LVU15
  93 0008 48B9     		cbnz	r0, .L7
 200:lvgl/src/lv_port_indev.c ****     }
  94              		.loc 1 200 9 is_stmt 1 view .LVU16
 200:lvgl/src/lv_port_indev.c ****     }
  95              		.loc 1 200 21 is_stmt 0 view .LVU17
  96 000a 0023     		movs	r3, #0
  97 000c A373     		strb	r3, [r4, #14]
  98              	.L5:
 204:lvgl/src/lv_port_indev.c ****     data->point.y = last_y;
  99              		.loc 1 204 5 is_stmt 1 view .LVU18
 204:lvgl/src/lv_port_indev.c ****     data->point.y = last_y;
 100              		.loc 1 204 19 is_stmt 0 view .LVU19
 101 000e 074B     		ldr	r3, .L8
 102 0010 B3F90030 		ldrsh	r3, [r3]
 103 0014 2380     		strh	r3, [r4]	@ movhi
 205:lvgl/src/lv_port_indev.c **** }
 104              		.loc 1 205 5 is_stmt 1 view .LVU20
 205:lvgl/src/lv_port_indev.c **** }
 105              		.loc 1 205 19 is_stmt 0 view .LVU21
 106 0016 064B     		ldr	r3, .L8+4
 107 0018 1B88     		ldrh	r3, [r3]
 108 001a 6380     		strh	r3, [r4, #2]	@ movhi
 206:lvgl/src/lv_port_indev.c **** 
 109              		.loc 1 206 1 view .LVU22
 110 001c 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 7


 111              	.LVL3:
 112              	.L7:
 196:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 113              		.loc 1 196 9 is_stmt 1 view .LVU23
 114 001e 0449     		ldr	r1, .L8+4
 115 0020 0248     		ldr	r0, .L8
 116 0022 FFF7FEFF 		bl	touchpad_get_xy
 117              	.LVL4:
 197:lvgl/src/lv_port_indev.c ****     }
 118              		.loc 1 197 9 view .LVU24
 197:lvgl/src/lv_port_indev.c ****     }
 119              		.loc 1 197 21 is_stmt 0 view .LVU25
 120 0026 0123     		movs	r3, #1
 121 0028 A373     		strb	r3, [r4, #14]
 122 002a F0E7     		b	.L5
 123              	.L9:
 124              		.align	2
 125              	.L8:
 126 002c 00000000 		.word	last_x.1
 127 0030 00000000 		.word	last_y.0
 128              		.cfi_endproc
 129              	.LFE206:
 131              		.section	.text.mouse_is_pressed,"ax",%progbits
 132              		.align	1
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	mouse_is_pressed:
 138              	.LFB211:
 224:lvgl/src/lv_port_indev.c **** 
 225:lvgl/src/lv_port_indev.c **** /*------------------
 226:lvgl/src/lv_port_indev.c ****  * Mouse
 227:lvgl/src/lv_port_indev.c ****  * -----------------*/
 228:lvgl/src/lv_port_indev.c **** 
 229:lvgl/src/lv_port_indev.c **** /*Initialize your mouse*/
 230:lvgl/src/lv_port_indev.c **** static void mouse_init(void)
 231:lvgl/src/lv_port_indev.c **** {
 232:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 233:lvgl/src/lv_port_indev.c **** }
 234:lvgl/src/lv_port_indev.c **** 
 235:lvgl/src/lv_port_indev.c **** /*Will be called by the library to read the mouse*/
 236:lvgl/src/lv_port_indev.c **** static void mouse_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)
 237:lvgl/src/lv_port_indev.c **** {
 238:lvgl/src/lv_port_indev.c ****     /*Get the current x and y coordinates*/
 239:lvgl/src/lv_port_indev.c ****     mouse_get_xy(&data->point.x, &data->point.y);
 240:lvgl/src/lv_port_indev.c **** 
 241:lvgl/src/lv_port_indev.c ****     /*Get whether the mouse button is pressed or released*/
 242:lvgl/src/lv_port_indev.c ****     if(mouse_is_pressed()) {
 243:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 244:lvgl/src/lv_port_indev.c ****     }
 245:lvgl/src/lv_port_indev.c ****     else {
 246:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_REL;
 247:lvgl/src/lv_port_indev.c ****     }
 248:lvgl/src/lv_port_indev.c **** }
 249:lvgl/src/lv_port_indev.c **** 
 250:lvgl/src/lv_port_indev.c **** /*Return true is the mouse button is pressed*/
 251:lvgl/src/lv_port_indev.c **** static bool mouse_is_pressed(void)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 8


 252:lvgl/src/lv_port_indev.c **** {
 139              		.loc 1 252 1 is_stmt 1 view -0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 0, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 253:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 254:lvgl/src/lv_port_indev.c **** 
 255:lvgl/src/lv_port_indev.c ****     return false;
 144              		.loc 1 255 5 view .LVU27
 256:lvgl/src/lv_port_indev.c **** }
 145              		.loc 1 256 1 is_stmt 0 view .LVU28
 146 0000 0020     		movs	r0, #0
 147 0002 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE211:
 151              		.section	.text.mouse_get_xy,"ax",%progbits
 152              		.align	1
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	mouse_get_xy:
 158              	.LVL5:
 159              	.LFB212:
 257:lvgl/src/lv_port_indev.c **** 
 258:lvgl/src/lv_port_indev.c **** /*Get the x and y coordinates if the mouse is pressed*/
 259:lvgl/src/lv_port_indev.c **** static void mouse_get_xy(lv_coord_t * x, lv_coord_t * y)
 260:lvgl/src/lv_port_indev.c **** {
 160              		.loc 1 260 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 261:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 262:lvgl/src/lv_port_indev.c **** 
 263:lvgl/src/lv_port_indev.c ****     (*x) = 0;
 165              		.loc 1 263 5 view .LVU30
 166              		.loc 1 263 10 is_stmt 0 view .LVU31
 167 0000 0023     		movs	r3, #0
 168 0002 0380     		strh	r3, [r0]	@ movhi
 264:lvgl/src/lv_port_indev.c ****     (*y) = 0;
 169              		.loc 1 264 5 is_stmt 1 view .LVU32
 170              		.loc 1 264 10 is_stmt 0 view .LVU33
 171 0004 0B80     		strh	r3, [r1]	@ movhi
 265:lvgl/src/lv_port_indev.c **** }
 172              		.loc 1 265 1 view .LVU34
 173 0006 7047     		bx	lr
 174              		.cfi_endproc
 175              	.LFE212:
 177              		.section	.text.mouse_read,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 183              	mouse_read:
 184              	.LVL6:
 185              	.LFB210:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 9


 237:lvgl/src/lv_port_indev.c ****     /*Get the current x and y coordinates*/
 186              		.loc 1 237 1 is_stmt 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 237:lvgl/src/lv_port_indev.c ****     /*Get the current x and y coordinates*/
 190              		.loc 1 237 1 is_stmt 0 view .LVU36
 191 0000 10B5     		push	{r4, lr}
 192              	.LCFI1:
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 4, -8
 195              		.cfi_offset 14, -4
 196 0002 0C46     		mov	r4, r1
 239:lvgl/src/lv_port_indev.c **** 
 197              		.loc 1 239 5 is_stmt 1 view .LVU37
 198 0004 0231     		adds	r1, r1, #2
 199              	.LVL7:
 239:lvgl/src/lv_port_indev.c **** 
 200              		.loc 1 239 5 is_stmt 0 view .LVU38
 201 0006 2046     		mov	r0, r4
 202              	.LVL8:
 239:lvgl/src/lv_port_indev.c **** 
 203              		.loc 1 239 5 view .LVU39
 204 0008 FFF7FEFF 		bl	mouse_get_xy
 205              	.LVL9:
 242:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 206              		.loc 1 242 5 is_stmt 1 view .LVU40
 242:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 207              		.loc 1 242 8 is_stmt 0 view .LVU41
 208 000c FFF7FEFF 		bl	mouse_is_pressed
 209              	.LVL10:
 242:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 210              		.loc 1 242 7 view .LVU42
 211 0010 10B1     		cbz	r0, .L13
 243:lvgl/src/lv_port_indev.c ****     }
 212              		.loc 1 243 9 is_stmt 1 view .LVU43
 243:lvgl/src/lv_port_indev.c ****     }
 213              		.loc 1 243 21 is_stmt 0 view .LVU44
 214 0012 0123     		movs	r3, #1
 215 0014 A373     		strb	r3, [r4, #14]
 216              	.L12:
 248:lvgl/src/lv_port_indev.c **** 
 217              		.loc 1 248 1 view .LVU45
 218 0016 10BD     		pop	{r4, pc}
 219              	.LVL11:
 220              	.L13:
 246:lvgl/src/lv_port_indev.c ****     }
 221              		.loc 1 246 9 is_stmt 1 view .LVU46
 246:lvgl/src/lv_port_indev.c ****     }
 222              		.loc 1 246 21 is_stmt 0 view .LVU47
 223 0018 0023     		movs	r3, #0
 224 001a A373     		strb	r3, [r4, #14]
 248:lvgl/src/lv_port_indev.c **** 
 225              		.loc 1 248 1 view .LVU48
 226 001c FBE7     		b	.L12
 227              		.cfi_endproc
 228              	.LFE210:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 10


 230              		.section	.text.keypad_get_key,"ax",%progbits
 231              		.align	1
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	keypad_get_key:
 237              	.LFB215:
 266:lvgl/src/lv_port_indev.c **** 
 267:lvgl/src/lv_port_indev.c **** /*------------------
 268:lvgl/src/lv_port_indev.c ****  * Keypad
 269:lvgl/src/lv_port_indev.c ****  * -----------------*/
 270:lvgl/src/lv_port_indev.c **** 
 271:lvgl/src/lv_port_indev.c **** /*Initialize your keypad*/
 272:lvgl/src/lv_port_indev.c **** static void keypad_init(void)
 273:lvgl/src/lv_port_indev.c **** {
 274:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 275:lvgl/src/lv_port_indev.c **** }
 276:lvgl/src/lv_port_indev.c **** 
 277:lvgl/src/lv_port_indev.c **** /*Will be called by the library to read the mouse*/
 278:lvgl/src/lv_port_indev.c **** static void keypad_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)
 279:lvgl/src/lv_port_indev.c **** {
 280:lvgl/src/lv_port_indev.c ****     static uint32_t last_key = 0;
 281:lvgl/src/lv_port_indev.c **** 
 282:lvgl/src/lv_port_indev.c ****     /*Get the current x and y coordinates*/
 283:lvgl/src/lv_port_indev.c ****     mouse_get_xy(&data->point.x, &data->point.y);
 284:lvgl/src/lv_port_indev.c **** 
 285:lvgl/src/lv_port_indev.c ****     /*Get whether the a key is pressed and save the pressed key*/
 286:lvgl/src/lv_port_indev.c ****     uint32_t act_key = keypad_get_key();
 287:lvgl/src/lv_port_indev.c ****     if(act_key != 0) {
 288:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 289:lvgl/src/lv_port_indev.c **** 
 290:lvgl/src/lv_port_indev.c ****         /*Translate the keys to LVGL control characters according to your key definitions*/
 291:lvgl/src/lv_port_indev.c ****         switch(act_key) {
 292:lvgl/src/lv_port_indev.c ****             case 1:
 293:lvgl/src/lv_port_indev.c ****                 act_key = LV_KEY_NEXT;
 294:lvgl/src/lv_port_indev.c ****                 break;
 295:lvgl/src/lv_port_indev.c ****             case 2:
 296:lvgl/src/lv_port_indev.c ****                 act_key = LV_KEY_PREV;
 297:lvgl/src/lv_port_indev.c ****                 break;
 298:lvgl/src/lv_port_indev.c ****             case 3:
 299:lvgl/src/lv_port_indev.c ****                 act_key = LV_KEY_LEFT;
 300:lvgl/src/lv_port_indev.c ****                 break;
 301:lvgl/src/lv_port_indev.c ****             case 4:
 302:lvgl/src/lv_port_indev.c ****                 act_key = LV_KEY_RIGHT;
 303:lvgl/src/lv_port_indev.c ****                 break;
 304:lvgl/src/lv_port_indev.c ****             case 5:
 305:lvgl/src/lv_port_indev.c ****                 act_key = LV_KEY_ENTER;
 306:lvgl/src/lv_port_indev.c ****                 break;
 307:lvgl/src/lv_port_indev.c ****         }
 308:lvgl/src/lv_port_indev.c **** 
 309:lvgl/src/lv_port_indev.c ****         last_key = act_key;
 310:lvgl/src/lv_port_indev.c ****     }
 311:lvgl/src/lv_port_indev.c ****     else {
 312:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_REL;
 313:lvgl/src/lv_port_indev.c ****     }
 314:lvgl/src/lv_port_indev.c **** 
 315:lvgl/src/lv_port_indev.c ****     data->key = last_key;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 11


 316:lvgl/src/lv_port_indev.c **** }
 317:lvgl/src/lv_port_indev.c **** 
 318:lvgl/src/lv_port_indev.c **** /*Get the currently being pressed key.  0 if no key is pressed*/
 319:lvgl/src/lv_port_indev.c **** static uint32_t keypad_get_key(void)
 320:lvgl/src/lv_port_indev.c **** {
 238              		.loc 1 320 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 321:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 322:lvgl/src/lv_port_indev.c **** 
 323:lvgl/src/lv_port_indev.c ****     return 0;
 243              		.loc 1 323 5 view .LVU50
 324:lvgl/src/lv_port_indev.c **** }
 244              		.loc 1 324 1 is_stmt 0 view .LVU51
 245 0000 0020     		movs	r0, #0
 246 0002 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE215:
 250              		.section	.text.keypad_read,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	keypad_read:
 257              	.LVL12:
 258              	.LFB214:
 279:lvgl/src/lv_port_indev.c ****     static uint32_t last_key = 0;
 259              		.loc 1 279 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 279:lvgl/src/lv_port_indev.c ****     static uint32_t last_key = 0;
 263              		.loc 1 279 1 is_stmt 0 view .LVU53
 264 0000 10B5     		push	{r4, lr}
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 4, -8
 268              		.cfi_offset 14, -4
 269 0002 0C46     		mov	r4, r1
 280:lvgl/src/lv_port_indev.c **** 
 270              		.loc 1 280 5 is_stmt 1 view .LVU54
 283:lvgl/src/lv_port_indev.c **** 
 271              		.loc 1 283 5 view .LVU55
 272 0004 0231     		adds	r1, r1, #2
 273              	.LVL13:
 283:lvgl/src/lv_port_indev.c **** 
 274              		.loc 1 283 5 is_stmt 0 view .LVU56
 275 0006 2046     		mov	r0, r4
 276              	.LVL14:
 283:lvgl/src/lv_port_indev.c **** 
 277              		.loc 1 283 5 view .LVU57
 278 0008 FFF7FEFF 		bl	mouse_get_xy
 279              	.LVL15:
 286:lvgl/src/lv_port_indev.c ****     if(act_key != 0) {
 280              		.loc 1 286 5 is_stmt 1 view .LVU58
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 12


 286:lvgl/src/lv_port_indev.c ****     if(act_key != 0) {
 281              		.loc 1 286 24 is_stmt 0 view .LVU59
 282 000c FFF7FEFF 		bl	keypad_get_key
 283              	.LVL16:
 287:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 284              		.loc 1 287 5 is_stmt 1 view .LVU60
 287:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 285              		.loc 1 287 7 is_stmt 0 view .LVU61
 286 0010 B0B1     		cbz	r0, .L18
 287 0012 0346     		mov	r3, r0
 288:lvgl/src/lv_port_indev.c **** 
 288              		.loc 1 288 9 is_stmt 1 view .LVU62
 288:lvgl/src/lv_port_indev.c **** 
 289              		.loc 1 288 21 is_stmt 0 view .LVU63
 290 0014 0122     		movs	r2, #1
 291 0016 A273     		strb	r2, [r4, #14]
 291:lvgl/src/lv_port_indev.c ****             case 1:
 292              		.loc 1 291 9 is_stmt 1 view .LVU64
 293 0018 421E     		subs	r2, r0, #1
 294 001a 042A     		cmp	r2, #4
 295 001c 0DD8     		bhi	.L25
 296 001e DFE802F0 		tbb	[pc, r2]
 297              	.L21:
 298 0022 0B       		.byte	(.L27-.L21)/2
 299 0023 03       		.byte	(.L24-.L21)/2
 300 0024 05       		.byte	(.L23-.L21)/2
 301 0025 07       		.byte	(.L22-.L21)/2
 302 0026 09       		.byte	(.L20-.L21)/2
 303 0027 00       		.p2align 1
 304              	.L24:
 296:lvgl/src/lv_port_indev.c ****                 break;
 305              		.loc 1 296 17 view .LVU65
 306              	.LVL17:
 297:lvgl/src/lv_port_indev.c ****             case 3:
 307              		.loc 1 297 17 view .LVU66
 296:lvgl/src/lv_port_indev.c ****                 break;
 308              		.loc 1 296 25 is_stmt 0 view .LVU67
 309 0028 0B23     		movs	r3, #11
 297:lvgl/src/lv_port_indev.c ****             case 3:
 310              		.loc 1 297 17 view .LVU68
 311 002a 06E0     		b	.L25
 312              	.LVL18:
 313              	.L23:
 299:lvgl/src/lv_port_indev.c ****                 break;
 314              		.loc 1 299 17 is_stmt 1 view .LVU69
 300:lvgl/src/lv_port_indev.c ****             case 4:
 315              		.loc 1 300 17 view .LVU70
 299:lvgl/src/lv_port_indev.c ****                 break;
 316              		.loc 1 299 25 is_stmt 0 view .LVU71
 317 002c 1423     		movs	r3, #20
 300:lvgl/src/lv_port_indev.c ****             case 4:
 318              		.loc 1 300 17 view .LVU72
 319 002e 04E0     		b	.L25
 320              	.LVL19:
 321              	.L22:
 302:lvgl/src/lv_port_indev.c ****                 break;
 322              		.loc 1 302 17 is_stmt 1 view .LVU73
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 13


 303:lvgl/src/lv_port_indev.c ****             case 5:
 323              		.loc 1 303 17 view .LVU74
 302:lvgl/src/lv_port_indev.c ****                 break;
 324              		.loc 1 302 25 is_stmt 0 view .LVU75
 325 0030 1323     		movs	r3, #19
 303:lvgl/src/lv_port_indev.c ****             case 5:
 326              		.loc 1 303 17 view .LVU76
 327 0032 02E0     		b	.L25
 328              	.LVL20:
 329              	.L20:
 305:lvgl/src/lv_port_indev.c ****                 break;
 330              		.loc 1 305 17 is_stmt 1 view .LVU77
 306:lvgl/src/lv_port_indev.c ****         }
 331              		.loc 1 306 17 view .LVU78
 305:lvgl/src/lv_port_indev.c ****                 break;
 332              		.loc 1 305 25 is_stmt 0 view .LVU79
 333 0034 0A23     		movs	r3, #10
 306:lvgl/src/lv_port_indev.c ****         }
 334              		.loc 1 306 17 view .LVU80
 335 0036 00E0     		b	.L25
 336              	.LVL21:
 337              	.L27:
 293:lvgl/src/lv_port_indev.c ****                 break;
 338              		.loc 1 293 25 view .LVU81
 339 0038 0923     		movs	r3, #9
 340              	.LVL22:
 341              	.L25:
 309:lvgl/src/lv_port_indev.c ****     }
 342              		.loc 1 309 9 is_stmt 1 view .LVU82
 309:lvgl/src/lv_port_indev.c ****     }
 343              		.loc 1 309 18 is_stmt 0 view .LVU83
 344 003a 044A     		ldr	r2, .L30
 345 003c 1360     		str	r3, [r2]
 346 003e 01E0     		b	.L26
 347              	.LVL23:
 348              	.L18:
 312:lvgl/src/lv_port_indev.c ****     }
 349              		.loc 1 312 9 is_stmt 1 view .LVU84
 312:lvgl/src/lv_port_indev.c ****     }
 350              		.loc 1 312 21 is_stmt 0 view .LVU85
 351 0040 0023     		movs	r3, #0
 352 0042 A373     		strb	r3, [r4, #14]
 353              	.LVL24:
 354              	.L26:
 315:lvgl/src/lv_port_indev.c **** }
 355              		.loc 1 315 5 is_stmt 1 view .LVU86
 315:lvgl/src/lv_port_indev.c **** }
 356              		.loc 1 315 15 is_stmt 0 view .LVU87
 357 0044 014B     		ldr	r3, .L30
 358 0046 1B68     		ldr	r3, [r3]
 359 0048 6360     		str	r3, [r4, #4]
 316:lvgl/src/lv_port_indev.c **** 
 360              		.loc 1 316 1 view .LVU88
 361 004a 10BD     		pop	{r4, pc}
 362              	.LVL25:
 363              	.L31:
 316:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 14


 364              		.loc 1 316 1 view .LVU89
 365              		.align	2
 366              	.L30:
 367 004c 00000000 		.word	last_key.2
 368              		.cfi_endproc
 369              	.LFE214:
 371              		.section	.text.encoder_read,"ax",%progbits
 372              		.align	1
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 377              	encoder_read:
 378              	.LVL26:
 379              	.LFB217:
 325:lvgl/src/lv_port_indev.c **** 
 326:lvgl/src/lv_port_indev.c **** /*------------------
 327:lvgl/src/lv_port_indev.c ****  * Encoder
 328:lvgl/src/lv_port_indev.c ****  * -----------------*/
 329:lvgl/src/lv_port_indev.c **** 
 330:lvgl/src/lv_port_indev.c **** /*Initialize your keypad*/
 331:lvgl/src/lv_port_indev.c **** static void encoder_init(void)
 332:lvgl/src/lv_port_indev.c **** {
 333:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 334:lvgl/src/lv_port_indev.c **** }
 335:lvgl/src/lv_port_indev.c **** 
 336:lvgl/src/lv_port_indev.c **** /*Will be called by the library to read the encoder*/
 337:lvgl/src/lv_port_indev.c **** static void encoder_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)
 338:lvgl/src/lv_port_indev.c **** {
 380              		.loc 1 338 1 is_stmt 1 view -0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              		@ link register save eliminated.
 339:lvgl/src/lv_port_indev.c **** 
 340:lvgl/src/lv_port_indev.c ****     data->enc_diff = encoder_diff;
 385              		.loc 1 340 5 view .LVU91
 386              		.loc 1 340 20 is_stmt 0 view .LVU92
 387 0000 0023     		movs	r3, #0
 388 0002 8B81     		strh	r3, [r1, #12]	@ movhi
 341:lvgl/src/lv_port_indev.c ****     data->state = encoder_state;
 389              		.loc 1 341 5 is_stmt 1 view .LVU93
 390              		.loc 1 341 17 is_stmt 0 view .LVU94
 391 0004 8B73     		strb	r3, [r1, #14]
 342:lvgl/src/lv_port_indev.c **** }
 392              		.loc 1 342 1 view .LVU95
 393 0006 7047     		bx	lr
 394              		.cfi_endproc
 395              	.LFE217:
 397              		.section	.text.button_is_pressed,"ax",%progbits
 398              		.align	1
 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 403              	button_is_pressed:
 404              	.LVL27:
 405              	.LFB222:
 343:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 15


 344:lvgl/src/lv_port_indev.c **** /*Call this function in an interrupt to process encoder events (turn, press)*/
 345:lvgl/src/lv_port_indev.c **** static void encoder_handler(void)
 346:lvgl/src/lv_port_indev.c **** {
 347:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 348:lvgl/src/lv_port_indev.c **** 
 349:lvgl/src/lv_port_indev.c ****     encoder_diff += 0;
 350:lvgl/src/lv_port_indev.c ****     encoder_state = LV_INDEV_STATE_REL;
 351:lvgl/src/lv_port_indev.c **** }
 352:lvgl/src/lv_port_indev.c **** 
 353:lvgl/src/lv_port_indev.c **** /*------------------
 354:lvgl/src/lv_port_indev.c ****  * Button
 355:lvgl/src/lv_port_indev.c ****  * -----------------*/
 356:lvgl/src/lv_port_indev.c **** 
 357:lvgl/src/lv_port_indev.c **** /*Initialize your buttons*/
 358:lvgl/src/lv_port_indev.c **** static void button_init(void)
 359:lvgl/src/lv_port_indev.c **** {
 360:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 361:lvgl/src/lv_port_indev.c **** }
 362:lvgl/src/lv_port_indev.c **** 
 363:lvgl/src/lv_port_indev.c **** /*Will be called by the library to read the button*/
 364:lvgl/src/lv_port_indev.c **** static void button_read(lv_indev_drv_t * indev_drv, lv_indev_data_t * data)
 365:lvgl/src/lv_port_indev.c **** {
 366:lvgl/src/lv_port_indev.c **** 
 367:lvgl/src/lv_port_indev.c ****     static uint8_t last_btn = 0;
 368:lvgl/src/lv_port_indev.c **** 
 369:lvgl/src/lv_port_indev.c ****     /*Get the pressed button's ID*/
 370:lvgl/src/lv_port_indev.c ****     int8_t btn_act = button_get_pressed_id();
 371:lvgl/src/lv_port_indev.c **** 
 372:lvgl/src/lv_port_indev.c ****     if(btn_act >= 0) {
 373:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 374:lvgl/src/lv_port_indev.c ****         last_btn = btn_act;
 375:lvgl/src/lv_port_indev.c ****     }
 376:lvgl/src/lv_port_indev.c ****     else {
 377:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_REL;
 378:lvgl/src/lv_port_indev.c ****     }
 379:lvgl/src/lv_port_indev.c **** 
 380:lvgl/src/lv_port_indev.c ****     /*Save the last pressed button's ID*/
 381:lvgl/src/lv_port_indev.c ****     data->btn_id = last_btn;
 382:lvgl/src/lv_port_indev.c **** }
 383:lvgl/src/lv_port_indev.c **** 
 384:lvgl/src/lv_port_indev.c **** /*Get ID  (0, 1, 2 ..) of the pressed button*/
 385:lvgl/src/lv_port_indev.c **** static int8_t button_get_pressed_id(void)
 386:lvgl/src/lv_port_indev.c **** {
 387:lvgl/src/lv_port_indev.c ****     uint8_t i;
 388:lvgl/src/lv_port_indev.c **** 
 389:lvgl/src/lv_port_indev.c ****     /*Check to buttons see which is being pressed (assume there are 2 buttons)*/
 390:lvgl/src/lv_port_indev.c ****     for(i = 0; i < 2; i++) {
 391:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 392:lvgl/src/lv_port_indev.c ****         if(button_is_pressed(i)) {
 393:lvgl/src/lv_port_indev.c ****             return i;
 394:lvgl/src/lv_port_indev.c ****         }
 395:lvgl/src/lv_port_indev.c ****     }
 396:lvgl/src/lv_port_indev.c **** 
 397:lvgl/src/lv_port_indev.c ****     /*No button pressed*/
 398:lvgl/src/lv_port_indev.c ****     return -1;
 399:lvgl/src/lv_port_indev.c **** }
 400:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 16


 401:lvgl/src/lv_port_indev.c **** /*Test if `id` button is pressed or not*/
 402:lvgl/src/lv_port_indev.c **** static bool button_is_pressed(uint8_t id)
 403:lvgl/src/lv_port_indev.c **** {
 406              		.loc 1 403 1 is_stmt 1 view -0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 404:lvgl/src/lv_port_indev.c **** 
 405:lvgl/src/lv_port_indev.c ****     /*Your code comes here*/
 406:lvgl/src/lv_port_indev.c **** 
 407:lvgl/src/lv_port_indev.c ****     return false;
 411              		.loc 1 407 5 view .LVU97
 408:lvgl/src/lv_port_indev.c **** }
 412              		.loc 1 408 1 is_stmt 0 view .LVU98
 413 0000 0020     		movs	r0, #0
 414              	.LVL28:
 415              		.loc 1 408 1 view .LVU99
 416 0002 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE222:
 420              		.section	.text.button_get_pressed_id,"ax",%progbits
 421              		.align	1
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 426              	button_get_pressed_id:
 427              	.LFB221:
 386:lvgl/src/lv_port_indev.c ****     uint8_t i;
 428              		.loc 1 386 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 10B5     		push	{r4, lr}
 433              	.LCFI3:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 4, -8
 436              		.cfi_offset 14, -4
 387:lvgl/src/lv_port_indev.c **** 
 437              		.loc 1 387 5 view .LVU101
 390:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 438              		.loc 1 390 5 view .LVU102
 439              	.LVL29:
 390:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 440              		.loc 1 390 11 is_stmt 0 view .LVU103
 441 0002 0024     		movs	r4, #0
 442              	.LVL30:
 443              	.L35:
 390:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 444              		.loc 1 390 18 is_stmt 1 discriminator 1 view .LVU104
 445 0004 012C     		cmp	r4, #1
 446 0006 08D8     		bhi	.L40
 392:lvgl/src/lv_port_indev.c ****             return i;
 447              		.loc 1 392 9 view .LVU105
 392:lvgl/src/lv_port_indev.c ****             return i;
 448              		.loc 1 392 12 is_stmt 0 view .LVU106
 449 0008 2046     		mov	r0, r4
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 17


 450 000a FFF7FEFF 		bl	button_is_pressed
 451              	.LVL31:
 392:lvgl/src/lv_port_indev.c ****             return i;
 452              		.loc 1 392 11 view .LVU107
 453 000e 10B9     		cbnz	r0, .L41
 390:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 454              		.loc 1 390 24 is_stmt 1 discriminator 2 view .LVU108
 455 0010 0134     		adds	r4, r4, #1
 456              	.LVL32:
 390:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 457              		.loc 1 390 24 is_stmt 0 discriminator 2 view .LVU109
 458 0012 E4B2     		uxtb	r4, r4
 459              	.LVL33:
 390:lvgl/src/lv_port_indev.c ****         /*Return the pressed button's ID*/
 460              		.loc 1 390 24 discriminator 2 view .LVU110
 461 0014 F6E7     		b	.L35
 462              	.L41:
 393:lvgl/src/lv_port_indev.c ****         }
 463              		.loc 1 393 13 is_stmt 1 view .LVU111
 393:lvgl/src/lv_port_indev.c ****         }
 464              		.loc 1 393 20 is_stmt 0 view .LVU112
 465 0016 60B2     		sxtb	r0, r4
 466 0018 01E0     		b	.L37
 467              	.L40:
 398:lvgl/src/lv_port_indev.c **** }
 468              		.loc 1 398 12 view .LVU113
 469 001a 4FF0FF30 		mov	r0, #-1
 470              	.L37:
 399:lvgl/src/lv_port_indev.c **** 
 471              		.loc 1 399 1 view .LVU114
 472 001e 10BD     		pop	{r4, pc}
 399:lvgl/src/lv_port_indev.c **** 
 473              		.loc 1 399 1 view .LVU115
 474              		.cfi_endproc
 475              	.LFE221:
 477              		.section	.text.button_read,"ax",%progbits
 478              		.align	1
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 483              	button_read:
 484              	.LVL34:
 485              	.LFB220:
 365:lvgl/src/lv_port_indev.c **** 
 486              		.loc 1 365 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 365:lvgl/src/lv_port_indev.c **** 
 490              		.loc 1 365 1 is_stmt 0 view .LVU117
 491 0000 10B5     		push	{r4, lr}
 492              	.LCFI4:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 4, -8
 495              		.cfi_offset 14, -4
 496 0002 0C46     		mov	r4, r1
 367:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 18


 497              		.loc 1 367 5 is_stmt 1 view .LVU118
 370:lvgl/src/lv_port_indev.c **** 
 498              		.loc 1 370 5 view .LVU119
 370:lvgl/src/lv_port_indev.c **** 
 499              		.loc 1 370 22 is_stmt 0 view .LVU120
 500 0004 FFF7FEFF 		bl	button_get_pressed_id
 501              	.LVL35:
 372:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 502              		.loc 1 372 5 is_stmt 1 view .LVU121
 372:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 503              		.loc 1 372 7 is_stmt 0 view .LVU122
 504 0008 0028     		cmp	r0, #0
 505              	.LVL36:
 372:lvgl/src/lv_port_indev.c ****         data->state = LV_INDEV_STATE_PR;
 506              		.loc 1 372 7 view .LVU123
 507 000a 07DB     		blt	.L43
 373:lvgl/src/lv_port_indev.c ****         last_btn = btn_act;
 508              		.loc 1 373 9 is_stmt 1 view .LVU124
 373:lvgl/src/lv_port_indev.c ****         last_btn = btn_act;
 509              		.loc 1 373 21 is_stmt 0 view .LVU125
 510 000c 0123     		movs	r3, #1
 511 000e A373     		strb	r3, [r4, #14]
 374:lvgl/src/lv_port_indev.c ****     }
 512              		.loc 1 374 9 is_stmt 1 view .LVU126
 374:lvgl/src/lv_port_indev.c ****     }
 513              		.loc 1 374 18 is_stmt 0 view .LVU127
 514 0010 044B     		ldr	r3, .L46
 515 0012 1870     		strb	r0, [r3]
 516              	.L44:
 381:lvgl/src/lv_port_indev.c **** }
 517              		.loc 1 381 5 is_stmt 1 view .LVU128
 381:lvgl/src/lv_port_indev.c **** }
 518              		.loc 1 381 18 is_stmt 0 view .LVU129
 519 0014 034B     		ldr	r3, .L46
 520 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 521 0018 A360     		str	r3, [r4, #8]
 382:lvgl/src/lv_port_indev.c **** 
 522              		.loc 1 382 1 view .LVU130
 523 001a 10BD     		pop	{r4, pc}
 524              	.LVL37:
 525              	.L43:
 377:lvgl/src/lv_port_indev.c ****     }
 526              		.loc 1 377 9 is_stmt 1 view .LVU131
 377:lvgl/src/lv_port_indev.c ****     }
 527              		.loc 1 377 21 is_stmt 0 view .LVU132
 528 001c 0023     		movs	r3, #0
 529 001e A373     		strb	r3, [r4, #14]
 530 0020 F8E7     		b	.L44
 531              	.L47:
 532 0022 00BF     		.align	2
 533              	.L46:
 534 0024 00000000 		.word	last_btn.3
 535              		.cfi_endproc
 536              	.LFE220:
 538              		.section	.text.lv_scr_act,"ax",%progbits
 539              		.align	1
 540              		.syntax unified
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 19


 541              		.thumb
 542              		.thumb_func
 544              	lv_scr_act:
 545              	.LFB161:
 546              		.file 2 "lvgl/src/../src/core/lv_disp.h"
   1:lvgl/src/../src/core/lv_disp.h **** /**
   2:lvgl/src/../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/src/../src/core/lv_disp.h ****  *
   4:lvgl/src/../src/core/lv_disp.h ****  */
   5:lvgl/src/../src/core/lv_disp.h **** 
   6:lvgl/src/../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/src/../src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/src/../src/core/lv_disp.h **** 
   9:lvgl/src/../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/src/../src/core/lv_disp.h **** extern "C" {
  11:lvgl/src/../src/core/lv_disp.h **** #endif
  12:lvgl/src/../src/core/lv_disp.h **** 
  13:lvgl/src/../src/core/lv_disp.h **** /*********************
  14:lvgl/src/../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/src/../src/core/lv_disp.h ****  *********************/
  16:lvgl/src/../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/src/../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/src/../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/src/../src/core/lv_disp.h **** 
  20:lvgl/src/../src/core/lv_disp.h **** /*********************
  21:lvgl/src/../src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/src/../src/core/lv_disp.h ****  *********************/
  23:lvgl/src/../src/core/lv_disp.h **** 
  24:lvgl/src/../src/core/lv_disp.h **** /**********************
  25:lvgl/src/../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/src/../src/core/lv_disp.h ****  **********************/
  27:lvgl/src/../src/core/lv_disp.h **** 
  28:lvgl/src/../src/core/lv_disp.h **** typedef enum {
  29:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:lvgl/src/../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:lvgl/src/../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  46:lvgl/src/../src/core/lv_disp.h **** 
  47:lvgl/src/../src/core/lv_disp.h **** /**********************
  48:lvgl/src/../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  49:lvgl/src/../src/core/lv_disp.h ****  **********************/
  50:lvgl/src/../src/core/lv_disp.h **** 
  51:lvgl/src/../src/core/lv_disp.h **** /**
  52:lvgl/src/../src/core/lv_disp.h ****  * Return with a pointer to the active screen
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 20


  53:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:lvgl/src/../src/core/lv_disp.h ****  * screen)
  55:lvgl/src/../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:lvgl/src/../src/core/lv_disp.h ****  */
  57:lvgl/src/../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:lvgl/src/../src/core/lv_disp.h **** 
  59:lvgl/src/../src/core/lv_disp.h **** /**
  60:lvgl/src/../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:lvgl/src/../src/core/lv_disp.h ****  * screen)
  63:lvgl/src/../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:lvgl/src/../src/core/lv_disp.h ****  */
  65:lvgl/src/../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:lvgl/src/../src/core/lv_disp.h **** 
  67:lvgl/src/../src/core/lv_disp.h **** /**
  68:lvgl/src/../src/core/lv_disp.h ****  * Make a screen active
  69:lvgl/src/../src/core/lv_disp.h ****  * @param scr pointer to a screen
  70:lvgl/src/../src/core/lv_disp.h ****  */
  71:lvgl/src/../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:lvgl/src/../src/core/lv_disp.h **** 
  73:lvgl/src/../src/core/lv_disp.h **** /**
  74:lvgl/src/../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:lvgl/src/../src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:lvgl/src/../src/core/lv_disp.h ****  */
  78:lvgl/src/../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:lvgl/src/../src/core/lv_disp.h **** 
  80:lvgl/src/../src/core/lv_disp.h **** /**
  81:lvgl/src/../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:lvgl/src/../src/core/lv_disp.h ****  * layer)
  83:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:lvgl/src/../src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:lvgl/src/../src/core/lv_disp.h ****  */
  86:lvgl/src/../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:lvgl/src/../src/core/lv_disp.h **** 
  88:lvgl/src/../src/core/lv_disp.h **** /**
  89:lvgl/src/../src/core/lv_disp.h ****  * Set the theme of a display
  90:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/src/../src/core/lv_disp.h ****  */
  92:lvgl/src/../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:lvgl/src/../src/core/lv_disp.h **** 
  94:lvgl/src/../src/core/lv_disp.h **** /**
  95:lvgl/src/../src/core/lv_disp.h ****  * Get the theme of a display
  96:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display
  97:lvgl/src/../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  98:lvgl/src/../src/core/lv_disp.h ****  */
  99:lvgl/src/../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:lvgl/src/../src/core/lv_disp.h **** 
 101:lvgl/src/../src/core/lv_disp.h **** /**
 102:lvgl/src/../src/core/lv_disp.h ****  * Set the background color of a display
 103:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display
 104:lvgl/src/../src/core/lv_disp.h ****  * @param color color of the background
 105:lvgl/src/../src/core/lv_disp.h ****  */
 106:lvgl/src/../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:lvgl/src/../src/core/lv_disp.h **** 
 108:lvgl/src/../src/core/lv_disp.h **** /**
 109:lvgl/src/../src/core/lv_disp.h ****  * Set the background image of a display
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 21


 110:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display
 111:lvgl/src/../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:lvgl/src/../src/core/lv_disp.h ****  */
 113:lvgl/src/../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:lvgl/src/../src/core/lv_disp.h **** 
 115:lvgl/src/../src/core/lv_disp.h **** /**
 116:lvgl/src/../src/core/lv_disp.h ****  * Set opacity of the background
 117:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display
 118:lvgl/src/../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 119:lvgl/src/../src/core/lv_disp.h ****  */
 120:lvgl/src/../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:lvgl/src/../src/core/lv_disp.h **** 
 122:lvgl/src/../src/core/lv_disp.h **** /**
 123:lvgl/src/../src/core/lv_disp.h ****  * Switch screen with animation
 124:lvgl/src/../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 125:lvgl/src/../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:lvgl/src/../src/core/lv_disp.h ****  * @param time time of the animation
 127:lvgl/src/../src/core/lv_disp.h ****  * @param delay delay before the transition
 128:lvgl/src/../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:lvgl/src/../src/core/lv_disp.h ****  */
 130:lvgl/src/../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:lvgl/src/../src/core/lv_disp.h **** 
 132:lvgl/src/../src/core/lv_disp.h **** /**
 133:lvgl/src/../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:lvgl/src/../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:lvgl/src/../src/core/lv_disp.h ****  */
 137:lvgl/src/../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:lvgl/src/../src/core/lv_disp.h **** 
 139:lvgl/src/../src/core/lv_disp.h **** /**
 140:lvgl/src/../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 141:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:lvgl/src/../src/core/lv_disp.h ****  */
 143:lvgl/src/../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:lvgl/src/../src/core/lv_disp.h **** 
 145:lvgl/src/../src/core/lv_disp.h **** /**
 146:lvgl/src/../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:lvgl/src/../src/core/lv_disp.h ****  */
 149:lvgl/src/../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:lvgl/src/../src/core/lv_disp.h **** 
 151:lvgl/src/../src/core/lv_disp.h **** /**
 152:lvgl/src/../src/core/lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:lvgl/src/../src/core/lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:lvgl/src/../src/core/lv_disp.h ****  */
 156:lvgl/src/../src/core/lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:lvgl/src/../src/core/lv_disp.h **** 
 158:lvgl/src/../src/core/lv_disp.h **** /**
 159:lvgl/src/../src/core/lv_disp.h ****  * Get display invalidation is enabled.
 160:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:lvgl/src/../src/core/lv_disp.h ****  * @return return true if invalidation is enabled
 162:lvgl/src/../src/core/lv_disp.h ****  */
 163:lvgl/src/../src/core/lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:lvgl/src/../src/core/lv_disp.h **** 
 165:lvgl/src/../src/core/lv_disp.h **** /**
 166:lvgl/src/../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 22


 167:lvgl/src/../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:lvgl/src/../src/core/lv_disp.h ****  * @param disp pointer to a display
 169:lvgl/src/../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:lvgl/src/../src/core/lv_disp.h ****  */
 171:lvgl/src/../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:lvgl/src/../src/core/lv_disp.h **** 
 173:lvgl/src/../src/core/lv_disp.h **** /*------------------------------------------------
 174:lvgl/src/../src/core/lv_disp.h ****  * To improve backward compatibility
 175:lvgl/src/../src/core/lv_disp.h ****  * Recommended only if you have one display
 176:lvgl/src/../src/core/lv_disp.h ****  *------------------------------------------------*/
 177:lvgl/src/../src/core/lv_disp.h **** 
 178:lvgl/src/../src/core/lv_disp.h **** /**
 179:lvgl/src/../src/core/lv_disp.h ****  * Get the active screen of the default display
 180:lvgl/src/../src/core/lv_disp.h ****  * @return pointer to the active screen
 181:lvgl/src/../src/core/lv_disp.h ****  */
 182:lvgl/src/../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 183:lvgl/src/../src/core/lv_disp.h **** {
 547              		.loc 2 183 1 is_stmt 1 view -0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551 0000 08B5     		push	{r3, lr}
 552              	.LCFI5:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 3, -8
 555              		.cfi_offset 14, -4
 184:lvgl/src/../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 556              		.loc 2 184 5 view .LVU134
 557              		.loc 2 184 12 is_stmt 0 view .LVU135
 558 0002 FFF7FEFF 		bl	lv_disp_get_default
 559              	.LVL38:
 560 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 561              	.LVL39:
 185:lvgl/src/../src/core/lv_disp.h **** }
 562              		.loc 2 185 1 view .LVU136
 563 000a 08BD     		pop	{r3, pc}
 564              		.cfi_endproc
 565              	.LFE161:
 567              		.section	.rodata.lv_port_indev_init.str1.4,"aMS",%progbits,1
 568              		.align	2
 569              	.LC0:
 570 0000 EF809500 		.ascii	"\357\200\225\000"
 571              		.section	.text.lv_port_indev_init,"ax",%progbits
 572              		.align	1
 573              		.global	lv_port_indev_init
 574              		.syntax unified
 575              		.thumb
 576              		.thumb_func
 578              	lv_port_indev_init:
 579              	.LFB204:
  71:lvgl/src/lv_port_indev.c ****     /**
 580              		.loc 1 71 1 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584 0000 70B5     		push	{r4, r5, r6, lr}
 585              	.LCFI6:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 23


 586              		.cfi_def_cfa_offset 16
 587              		.cfi_offset 4, -16
 588              		.cfi_offset 5, -12
 589              		.cfi_offset 6, -8
 590              		.cfi_offset 14, -4
  84:lvgl/src/lv_port_indev.c **** 
 591              		.loc 1 84 5 view .LVU138
  91:lvgl/src/lv_port_indev.c **** 
 592              		.loc 1 91 5 view .LVU139
  94:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_POINTER;
 593              		.loc 1 94 5 view .LVU140
 594 0002 264C     		ldr	r4, .L52
 595 0004 2046     		mov	r0, r4
 596 0006 FFF7FEFF 		bl	lv_indev_drv_init
 597              	.LVL40:
  95:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = touchpad_read;
 598              		.loc 1 95 5 view .LVU141
  95:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = touchpad_read;
 599              		.loc 1 95 20 is_stmt 0 view .LVU142
 600 000a 0125     		movs	r5, #1
 601 000c 2570     		strb	r5, [r4]
  96:lvgl/src/lv_port_indev.c ****     indev_touchpad = lv_indev_drv_register(&indev_drv);
 602              		.loc 1 96 5 is_stmt 1 view .LVU143
  96:lvgl/src/lv_port_indev.c ****     indev_touchpad = lv_indev_drv_register(&indev_drv);
 603              		.loc 1 96 23 is_stmt 0 view .LVU144
 604 000e 244B     		ldr	r3, .L52+4
 605 0010 6360     		str	r3, [r4, #4]
  97:lvgl/src/lv_port_indev.c **** 
 606              		.loc 1 97 5 is_stmt 1 view .LVU145
  97:lvgl/src/lv_port_indev.c **** 
 607              		.loc 1 97 22 is_stmt 0 view .LVU146
 608 0012 2046     		mov	r0, r4
 609 0014 FFF7FEFF 		bl	lv_indev_drv_register
 610              	.LVL41:
  97:lvgl/src/lv_port_indev.c **** 
 611              		.loc 1 97 20 view .LVU147
 612 0018 224B     		ldr	r3, .L52+8
 613 001a 1860     		str	r0, [r3]
 104:lvgl/src/lv_port_indev.c **** 
 614              		.loc 1 104 5 is_stmt 1 view .LVU148
 107:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_POINTER;
 615              		.loc 1 107 5 view .LVU149
 616 001c 2046     		mov	r0, r4
 617 001e FFF7FEFF 		bl	lv_indev_drv_init
 618              	.LVL42:
 108:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = mouse_read;
 619              		.loc 1 108 5 view .LVU150
 108:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = mouse_read;
 620              		.loc 1 108 20 is_stmt 0 view .LVU151
 621 0022 2570     		strb	r5, [r4]
 109:lvgl/src/lv_port_indev.c ****     indev_mouse = lv_indev_drv_register(&indev_drv);
 622              		.loc 1 109 5 is_stmt 1 view .LVU152
 109:lvgl/src/lv_port_indev.c ****     indev_mouse = lv_indev_drv_register(&indev_drv);
 623              		.loc 1 109 23 is_stmt 0 view .LVU153
 624 0024 204B     		ldr	r3, .L52+12
 625 0026 6360     		str	r3, [r4, #4]
 110:lvgl/src/lv_port_indev.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 24


 626              		.loc 1 110 5 is_stmt 1 view .LVU154
 110:lvgl/src/lv_port_indev.c **** 
 627              		.loc 1 110 19 is_stmt 0 view .LVU155
 628 0028 2046     		mov	r0, r4
 629 002a FFF7FEFF 		bl	lv_indev_drv_register
 630              	.LVL43:
 110:lvgl/src/lv_port_indev.c **** 
 631              		.loc 1 110 17 view .LVU156
 632 002e 1F4E     		ldr	r6, .L52+16
 633 0030 3060     		str	r0, [r6]
 113:lvgl/src/lv_port_indev.c ****     lv_img_set_src(mouse_cursor, LV_SYMBOL_HOME);
 634              		.loc 1 113 5 is_stmt 1 view .LVU157
 113:lvgl/src/lv_port_indev.c ****     lv_img_set_src(mouse_cursor, LV_SYMBOL_HOME);
 635              		.loc 1 113 31 is_stmt 0 view .LVU158
 636 0032 FFF7FEFF 		bl	lv_scr_act
 637              	.LVL44:
 638 0036 FFF7FEFF 		bl	lv_img_create
 639              	.LVL45:
 640 003a 0546     		mov	r5, r0
 641              	.LVL46:
 114:lvgl/src/lv_port_indev.c ****     lv_indev_set_cursor(indev_mouse, mouse_cursor);
 642              		.loc 1 114 5 is_stmt 1 view .LVU159
 643 003c 1C49     		ldr	r1, .L52+20
 644 003e FFF7FEFF 		bl	lv_img_set_src
 645              	.LVL47:
 115:lvgl/src/lv_port_indev.c **** 
 646              		.loc 1 115 5 view .LVU160
 647 0042 2946     		mov	r1, r5
 648 0044 3068     		ldr	r0, [r6]
 649 0046 FFF7FEFF 		bl	lv_indev_set_cursor
 650              	.LVL48:
 122:lvgl/src/lv_port_indev.c **** 
 651              		.loc 1 122 5 view .LVU161
 125:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_KEYPAD;
 652              		.loc 1 125 5 view .LVU162
 653 004a 2046     		mov	r0, r4
 654 004c FFF7FEFF 		bl	lv_indev_drv_init
 655              	.LVL49:
 126:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = keypad_read;
 656              		.loc 1 126 5 view .LVU163
 126:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = keypad_read;
 657              		.loc 1 126 20 is_stmt 0 view .LVU164
 658 0050 0223     		movs	r3, #2
 659 0052 2370     		strb	r3, [r4]
 127:lvgl/src/lv_port_indev.c ****     indev_keypad = lv_indev_drv_register(&indev_drv);
 660              		.loc 1 127 5 is_stmt 1 view .LVU165
 127:lvgl/src/lv_port_indev.c ****     indev_keypad = lv_indev_drv_register(&indev_drv);
 661              		.loc 1 127 23 is_stmt 0 view .LVU166
 662 0054 174B     		ldr	r3, .L52+24
 663 0056 6360     		str	r3, [r4, #4]
 128:lvgl/src/lv_port_indev.c **** 
 664              		.loc 1 128 5 is_stmt 1 view .LVU167
 128:lvgl/src/lv_port_indev.c **** 
 665              		.loc 1 128 20 is_stmt 0 view .LVU168
 666 0058 2046     		mov	r0, r4
 667 005a FFF7FEFF 		bl	lv_indev_drv_register
 668              	.LVL50:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 25


 128:lvgl/src/lv_port_indev.c **** 
 669              		.loc 1 128 18 view .LVU169
 670 005e 164B     		ldr	r3, .L52+28
 671 0060 1860     		str	r0, [r3]
 140:lvgl/src/lv_port_indev.c **** 
 672              		.loc 1 140 5 is_stmt 1 view .LVU170
 143:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_ENCODER;
 673              		.loc 1 143 5 view .LVU171
 674 0062 2046     		mov	r0, r4
 675 0064 FFF7FEFF 		bl	lv_indev_drv_init
 676              	.LVL51:
 144:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = encoder_read;
 677              		.loc 1 144 5 view .LVU172
 144:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = encoder_read;
 678              		.loc 1 144 20 is_stmt 0 view .LVU173
 679 0068 0423     		movs	r3, #4
 680 006a 2370     		strb	r3, [r4]
 145:lvgl/src/lv_port_indev.c ****     indev_encoder = lv_indev_drv_register(&indev_drv);
 681              		.loc 1 145 5 is_stmt 1 view .LVU174
 145:lvgl/src/lv_port_indev.c ****     indev_encoder = lv_indev_drv_register(&indev_drv);
 682              		.loc 1 145 23 is_stmt 0 view .LVU175
 683 006c 134B     		ldr	r3, .L52+32
 684 006e 6360     		str	r3, [r4, #4]
 146:lvgl/src/lv_port_indev.c **** 
 685              		.loc 1 146 5 is_stmt 1 view .LVU176
 146:lvgl/src/lv_port_indev.c **** 
 686              		.loc 1 146 21 is_stmt 0 view .LVU177
 687 0070 2046     		mov	r0, r4
 688 0072 FFF7FEFF 		bl	lv_indev_drv_register
 689              	.LVL52:
 146:lvgl/src/lv_port_indev.c **** 
 690              		.loc 1 146 19 view .LVU178
 691 0076 124B     		ldr	r3, .L52+36
 692 0078 1860     		str	r0, [r3]
 158:lvgl/src/lv_port_indev.c **** 
 693              		.loc 1 158 5 is_stmt 1 view .LVU179
 161:lvgl/src/lv_port_indev.c ****     indev_drv.type = LV_INDEV_TYPE_BUTTON;
 694              		.loc 1 161 5 view .LVU180
 695 007a 2046     		mov	r0, r4
 696 007c FFF7FEFF 		bl	lv_indev_drv_init
 697              	.LVL53:
 162:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = button_read;
 698              		.loc 1 162 5 view .LVU181
 162:lvgl/src/lv_port_indev.c ****     indev_drv.read_cb = button_read;
 699              		.loc 1 162 20 is_stmt 0 view .LVU182
 700 0080 0323     		movs	r3, #3
 701 0082 2370     		strb	r3, [r4]
 163:lvgl/src/lv_port_indev.c ****     indev_button = lv_indev_drv_register(&indev_drv);
 702              		.loc 1 163 5 is_stmt 1 view .LVU183
 163:lvgl/src/lv_port_indev.c ****     indev_button = lv_indev_drv_register(&indev_drv);
 703              		.loc 1 163 23 is_stmt 0 view .LVU184
 704 0084 0F4B     		ldr	r3, .L52+40
 705 0086 6360     		str	r3, [r4, #4]
 164:lvgl/src/lv_port_indev.c **** 
 706              		.loc 1 164 5 is_stmt 1 view .LVU185
 164:lvgl/src/lv_port_indev.c **** 
 707              		.loc 1 164 20 is_stmt 0 view .LVU186
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 26


 708 0088 2046     		mov	r0, r4
 709 008a FFF7FEFF 		bl	lv_indev_drv_register
 710              	.LVL54:
 164:lvgl/src/lv_port_indev.c **** 
 711              		.loc 1 164 18 view .LVU187
 712 008e 0E4B     		ldr	r3, .L52+44
 713 0090 1860     		str	r0, [r3]
 167:lvgl/src/lv_port_indev.c ****         {10, 10},   /*Button 0 -> x:10; y:10*/
 714              		.loc 1 167 5 is_stmt 1 view .LVU188
 171:lvgl/src/lv_port_indev.c **** }
 715              		.loc 1 171 5 view .LVU189
 716 0092 0E49     		ldr	r1, .L52+48
 717 0094 FFF7FEFF 		bl	lv_indev_set_button_points
 718              	.LVL55:
 172:lvgl/src/lv_port_indev.c **** 
 719              		.loc 1 172 1 is_stmt 0 view .LVU190
 720 0098 70BD     		pop	{r4, r5, r6, pc}
 721              	.LVL56:
 722              	.L53:
 172:lvgl/src/lv_port_indev.c **** 
 723              		.loc 1 172 1 view .LVU191
 724 009a 00BF     		.align	2
 725              	.L52:
 726 009c 00000000 		.word	indev_drv.5
 727 00a0 00000000 		.word	touchpad_read
 728 00a4 00000000 		.word	indev_touchpad
 729 00a8 00000000 		.word	mouse_read
 730 00ac 00000000 		.word	indev_mouse
 731 00b0 00000000 		.word	.LC0
 732 00b4 00000000 		.word	keypad_read
 733 00b8 00000000 		.word	indev_keypad
 734 00bc 00000000 		.word	encoder_read
 735 00c0 00000000 		.word	indev_encoder
 736 00c4 00000000 		.word	button_read
 737 00c8 00000000 		.word	indev_button
 738 00cc 00000000 		.word	btn_points.4
 739              		.cfi_endproc
 740              	.LFE204:
 742              		.section	.bss.last_y.0,"aw",%nobits
 743              		.align	1
 746              	last_y.0:
 747 0000 0000     		.space	2
 748              		.section	.bss.last_x.1,"aw",%nobits
 749              		.align	1
 752              	last_x.1:
 753 0000 0000     		.space	2
 754              		.section	.bss.last_key.2,"aw",%nobits
 755              		.align	2
 758              	last_key.2:
 759 0000 00000000 		.space	4
 760              		.section	.bss.last_btn.3,"aw",%nobits
 763              	last_btn.3:
 764 0000 00       		.space	1
 765              		.section	.rodata.btn_points.4,"a"
 766              		.align	2
 769              	btn_points.4:
 770 0000 0A00     		.short	10
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 27


 771 0002 0A00     		.short	10
 772 0004 2800     		.short	40
 773 0006 6400     		.short	100
 774              		.section	.bss.indev_drv.5,"aw",%nobits
 775              		.align	2
 778              	indev_drv.5:
 779 0000 00000000 		.space	32
 779      00000000 
 779      00000000 
 779      00000000 
 779      00000000 
 780              		.global	indev_button
 781              		.section	.bss.indev_button,"aw",%nobits
 782              		.align	2
 785              	indev_button:
 786 0000 00000000 		.space	4
 787              		.global	indev_encoder
 788              		.section	.bss.indev_encoder,"aw",%nobits
 789              		.align	2
 792              	indev_encoder:
 793 0000 00000000 		.space	4
 794              		.global	indev_keypad
 795              		.section	.bss.indev_keypad,"aw",%nobits
 796              		.align	2
 799              	indev_keypad:
 800 0000 00000000 		.space	4
 801              		.global	indev_mouse
 802              		.section	.bss.indev_mouse,"aw",%nobits
 803              		.align	2
 806              	indev_mouse:
 807 0000 00000000 		.space	4
 808              		.global	indev_touchpad
 809              		.section	.bss.indev_touchpad,"aw",%nobits
 810              		.align	2
 813              	indev_touchpad:
 814 0000 00000000 		.space	4
 815              		.text
 816              	.Letext0:
 817              		.file 3 "/usr/local/include/sys/_types/_int8_t.h"
 818              		.file 4 "/usr/local/include/sys/_types/_int16_t.h"
 819              		.file 5 "/usr/local/include/sys/_types/_int32_t.h"
 820              		.file 6 "/usr/local/include/_types/_uint8_t.h"
 821              		.file 7 "/usr/local/include/_types/_uint16_t.h"
 822              		.file 8 "/usr/local/include/_types/_uint32_t.h"
 823              		.file 9 "/usr/local/include/arm/_types.h"
 824              		.file 10 "lvgl/src/../src/misc/lv_types.h"
 825              		.file 11 "lvgl/src/../src/misc/lv_timer.h"
 826              		.file 12 "/usr/local/include/sys/_types/_size_t.h"
 827              		.file 13 "lvgl/src/../src/hal/../draw/../misc/../font/../misc/lv_area.h"
 828              		.file 14 "lvgl/src/../src/hal/../draw/../misc/../font/lv_font.h"
 829              		.file 15 "lvgl/src/../src/hal/../draw/../misc/lv_color.h"
 830              		.file 16 "lvgl/src/../src/hal/../draw/../misc/lv_txt.h"
 831              		.file 17 "lvgl/src/../src/hal/../draw/../misc/lv_bidi.h"
 832              		.file 18 "lvgl/src/../src/hal/../draw/../misc/lv_style.h"
 833              		.file 19 "lvgl/src/../src/hal/../draw/lv_img_buf.h"
 834              		.file 20 "lvgl/src/../src/core/lv_obj.h"
 835              		.file 21 "lvgl/src/../src/hal/../draw/lv_draw_rect.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 28


 836              		.file 22 "lvgl/src/../src/hal/../draw/lv_draw_label.h"
 837              		.file 23 "lvgl/src/../src/hal/../draw/lv_draw_img.h"
 838              		.file 24 "lvgl/src/../src/hal/../draw/lv_draw_line.h"
 839              		.file 25 "lvgl/src/../src/hal/../draw/lv_draw_arc.h"
 840              		.file 26 "lvgl/src/../src/hal/../draw/lv_draw_layer.h"
 841              		.file 27 "lvgl/src/../src/hal/../draw/lv_draw.h"
 842              		.file 28 "lvgl/src/../src/hal/../misc/lv_ll.h"
 843              		.file 29 "lvgl/src/../src/hal/lv_hal_disp.h"
 844              		.file 30 "lvgl/src/../src/core/lv_theme.h"
 845              		.file 31 "lvgl/src/../src/hal/lv_hal_indev.h"
 846              		.file 32 "lvgl/src/../src/core/lv_group.h"
 847              		.file 33 "lvgl/src/../src/core/lv_obj_scroll.h"
 848              		.file 34 "lvgl/src/../src/core/lv_obj_style.h"
 849              		.file 35 "lvgl/src/../src/core/lv_obj_class.h"
 850              		.file 36 "lvgl/src/../src/core/lv_event.h"
 851              		.file 37 "lvgl/src/../src/widgets/lv_bar.h"
 852              		.file 38 "lvgl/src/../src/extra/widgets/imgbtn/lv_imgbtn.h"
 853              		.file 39 "lvgl/src/../src/core/lv_indev.h"
 854              		.file 40 "lvgl/src/../src/widgets/lv_img.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 lv_port_indev.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:21     .text.touchpad_is_pressed:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:26     .text.touchpad_is_pressed:00000000 touchpad_is_pressed
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:41     .text.touchpad_get_xy:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:46     .text.touchpad_get_xy:00000000 touchpad_get_xy
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:67     .text.touchpad_read:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:72     .text.touchpad_read:00000000 touchpad_read
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:126    .text.touchpad_read:0000002c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:752    .bss.last_x.1:00000000 last_x.1
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:746    .bss.last_y.0:00000000 last_y.0
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:132    .text.mouse_is_pressed:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:137    .text.mouse_is_pressed:00000000 mouse_is_pressed
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:152    .text.mouse_get_xy:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:157    .text.mouse_get_xy:00000000 mouse_get_xy
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:178    .text.mouse_read:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:183    .text.mouse_read:00000000 mouse_read
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:231    .text.keypad_get_key:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:236    .text.keypad_get_key:00000000 keypad_get_key
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:251    .text.keypad_read:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:256    .text.keypad_read:00000000 keypad_read
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:298    .text.keypad_read:00000022 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:367    .text.keypad_read:0000004c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:758    .bss.last_key.2:00000000 last_key.2
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:372    .text.encoder_read:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:377    .text.encoder_read:00000000 encoder_read
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:398    .text.button_is_pressed:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:403    .text.button_is_pressed:00000000 button_is_pressed
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:421    .text.button_get_pressed_id:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:426    .text.button_get_pressed_id:00000000 button_get_pressed_id
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:478    .text.button_read:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:483    .text.button_read:00000000 button_read
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:534    .text.button_read:00000024 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:763    .bss.last_btn.3:00000000 last_btn.3
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:539    .text.lv_scr_act:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:544    .text.lv_scr_act:00000000 lv_scr_act
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:568    .rodata.lv_port_indev_init.str1.4:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:572    .text.lv_port_indev_init:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:578    .text.lv_port_indev_init:00000000 lv_port_indev_init
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:726    .text.lv_port_indev_init:0000009c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:778    .bss.indev_drv.5:00000000 indev_drv.5
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:813    .bss.indev_touchpad:00000000 indev_touchpad
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:806    .bss.indev_mouse:00000000 indev_mouse
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:799    .bss.indev_keypad:00000000 indev_keypad
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:792    .bss.indev_encoder:00000000 indev_encoder
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:785    .bss.indev_button:00000000 indev_button
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:769    .rodata.btn_points.4:00000000 btn_points.4
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:743    .bss.last_y.0:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:749    .bss.last_x.1:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:755    .bss.last_key.2:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:764    .bss.last_btn.3:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:766    .rodata.btn_points.4:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:775    .bss.indev_drv.5:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:782    .bss.indev_button:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:789    .bss.indev_encoder:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:796    .bss.indev_keypad:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:803    .bss.indev_mouse:00000000 $d
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s 			page 30


/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:810    .bss.indev_touchpad:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:303    .text.keypad_read:00000027 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc1llKfG.s:303    .text.keypad_read:00000028 $t

UNDEFINED SYMBOLS
lv_disp_get_default
lv_disp_get_scr_act
lv_indev_drv_init
lv_indev_drv_register
lv_img_create
lv_img_set_src
lv_indev_set_cursor
lv_indev_set_button_points
