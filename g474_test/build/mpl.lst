ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"mpl.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "DMP/mllite/mpl.c"
  20              		.section	.rodata.inv_init_mpl.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 444D502F 		.ascii	"DMP/mllite/mpl.c\000"
  23      6D6C6C69 
  23      74652F6D 
  23      706C2E63 
  23      00
  24 0011 000000   		.align	2
  25              	.LC1:
  26 0014 25737C25 		.ascii	"%s|%s|%d returning %d\012\000"
  26      737C2564 
  26      20726574 
  26      75726E69 
  26      6E672025 
  27              		.section	.text.inv_init_mpl,"ax",%progbits
  28              		.align	1
  29              		.global	inv_init_mpl
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	inv_init_mpl:
  35              	.LFB10:
   1:DMP/mllite/mpl.c **** /*
   2:DMP/mllite/mpl.c ****  $License:
   3:DMP/mllite/mpl.c ****     Copyright (C) 2011-2012 InvenSense Corporation, All Rights Reserved.
   4:DMP/mllite/mpl.c ****     See included License.txt for License information.
   5:DMP/mllite/mpl.c ****  $
   6:DMP/mllite/mpl.c ****  */
   7:DMP/mllite/mpl.c **** /**
   8:DMP/mllite/mpl.c ****  *   @defgroup  MPL mpl
   9:DMP/mllite/mpl.c ****  *   @brief     Motion Library - Start Point
  10:DMP/mllite/mpl.c ****  *              Initializes MPL.
  11:DMP/mllite/mpl.c ****  *
  12:DMP/mllite/mpl.c ****  *   @{
  13:DMP/mllite/mpl.c ****  *       @file  mpl.c
  14:DMP/mllite/mpl.c ****  *       @brief MPL start point.
  15:DMP/mllite/mpl.c ****  */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 2


  16:DMP/mllite/mpl.c **** 
  17:DMP/mllite/mpl.c **** #include "storage_manager.h"
  18:DMP/mllite/mpl.c **** #include "log.h"
  19:DMP/mllite/mpl.c **** #include "mpl.h"
  20:DMP/mllite/mpl.c **** #include "start_manager.h"
  21:DMP/mllite/mpl.c **** #include "data_builder.h"
  22:DMP/mllite/mpl.c **** #include "results_holder.h"
  23:DMP/mllite/mpl.c **** #include "mlinclude.h"
  24:DMP/mllite/mpl.c **** 
  25:DMP/mllite/mpl.c **** /**
  26:DMP/mllite/mpl.c ****  * @brief  Initializes the MPL. Should be called first and once 
  27:DMP/mllite/mpl.c ****  * @return Returns INV_SUCCESS if successful or an error code if not.
  28:DMP/mllite/mpl.c ****  */
  29:DMP/mllite/mpl.c **** inv_error_t inv_init_mpl(void)
  30:DMP/mllite/mpl.c **** {
  36              		.loc 1 30 1 view -0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0000 00B5     		push	{lr}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 14, -4
  44 0002 85B0     		sub	sp, sp, #20
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  31:DMP/mllite/mpl.c ****     inv_init_storage_manager();
  47              		.loc 1 31 5 view .LVU1
  48 0004 FFF7FEFF 		bl	inv_init_storage_manager
  49              	.LVL0:
  32:DMP/mllite/mpl.c **** 
  33:DMP/mllite/mpl.c ****     /* initialize the start callback manager */
  34:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_init_start_manager());
  50              		.loc 1 34 5 view .LVU2
  51 0008 FFF7FEFF 		bl	inv_init_start_manager
  52              	.LVL1:
  53 000c 40B9     		cbnz	r0, .L6
  54              		.loc 1 34 46 discriminator 2 view .LVU3
  35:DMP/mllite/mpl.c **** 
  36:DMP/mllite/mpl.c ****     /* initialize the data builder */
  37:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_init_data_builder());
  55              		.loc 1 37 5 discriminator 2 view .LVU4
  56 000e FFF7FEFF 		bl	inv_init_data_builder
  57              	.LVL2:
  58 0012 A8B9     		cbnz	r0, .L7
  59              		.loc 1 37 45 discriminator 2 view .LVU5
  38:DMP/mllite/mpl.c **** 
  39:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_enable_results_holder());
  60              		.loc 1 39 5 discriminator 2 view .LVU6
  61 0014 FFF7FEFF 		bl	inv_enable_results_holder
  62              	.LVL3:
  63 0018 10BB     		cbnz	r0, .L8
  64              	.L1:
  40:DMP/mllite/mpl.c **** 
  41:DMP/mllite/mpl.c ****     return INV_SUCCESS;
  42:DMP/mllite/mpl.c **** }
  65              		.loc 1 42 1 is_stmt 0 view .LVU7
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 3


  66 001a 05B0     		add	sp, sp, #20
  67              	.LCFI2:
  68              		.cfi_remember_state
  69              		.cfi_def_cfa_offset 4
  70              		@ sp needed
  71 001c 5DF804FB 		ldr	pc, [sp], #4
  72              	.L6:
  73              	.LCFI3:
  74              		.cfi_restore_state
  34:DMP/mllite/mpl.c **** 
  75              		.loc 1 34 5 is_stmt 1 discriminator 1 view .LVU8
  34:DMP/mllite/mpl.c **** 
  76              		.loc 1 34 5 discriminator 1 view .LVU9
  77 0020 FFF7FEFF 		bl	inv_init_start_manager
  78              	.LVL4:
  79              	.LBB10:
  80              	.LBI10:
  81              		.file 2 "DMP/driver/include/log.h"
   1:DMP/driver/include/log.h **** /*
   2:DMP/driver/include/log.h ****  $License:
   3:DMP/driver/include/log.h ****     Copyright (C) 2011 InvenSense Corporation, All Rights Reserved.
   4:DMP/driver/include/log.h ****  $
   5:DMP/driver/include/log.h ****  */
   6:DMP/driver/include/log.h **** 
   7:DMP/driver/include/log.h **** /*
   8:DMP/driver/include/log.h ****  * This file incorporates work covered by the following copyright and
   9:DMP/driver/include/log.h ****  * permission notice:
  10:DMP/driver/include/log.h ****  *
  11:DMP/driver/include/log.h ****  * Copyright (C) 2005 The Android Open Source Project
  12:DMP/driver/include/log.h ****  *
  13:DMP/driver/include/log.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:DMP/driver/include/log.h ****  * you may not use this file except in compliance with the License.
  15:DMP/driver/include/log.h ****  * You may obtain a copy of the License at
  16:DMP/driver/include/log.h ****  *
  17:DMP/driver/include/log.h ****  *      http://www.apache.org/licenses/LICENSE-2.0
  18:DMP/driver/include/log.h ****  *
  19:DMP/driver/include/log.h ****  * Unless required by applicable law or agreed to in writing, software
  20:DMP/driver/include/log.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:DMP/driver/include/log.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:DMP/driver/include/log.h ****  * See the License for the specific language governing permissions and
  23:DMP/driver/include/log.h ****  * limitations under the License.
  24:DMP/driver/include/log.h ****  */
  25:DMP/driver/include/log.h **** 
  26:DMP/driver/include/log.h **** /*
  27:DMP/driver/include/log.h ****  * C/C++ logging functions.  See the logging documentation for API details.
  28:DMP/driver/include/log.h ****  *
  29:DMP/driver/include/log.h ****  * We'd like these to be available from C code (in case we import some from
  30:DMP/driver/include/log.h ****  * somewhere), so this has a C interface.
  31:DMP/driver/include/log.h ****  *
  32:DMP/driver/include/log.h ****  * The output will be correct when the log file is shared between multiple
  33:DMP/driver/include/log.h ****  * threads and/or multiple processes so long as the operating system
  34:DMP/driver/include/log.h ****  * supports O_APPEND.  These calls have mutex-protected data structures
  35:DMP/driver/include/log.h ****  * and so are NOT reentrant.  Do not use MPL_LOG in a signal handler.
  36:DMP/driver/include/log.h ****  */
  37:DMP/driver/include/log.h **** #ifndef _LIBS_CUTILS_MPL_LOG_H
  38:DMP/driver/include/log.h **** #define _LIBS_CUTILS_MPL_LOG_H
  39:DMP/driver/include/log.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 4


  40:DMP/driver/include/log.h **** #include <stdlib.h>
  41:DMP/driver/include/log.h **** #include <stdarg.h>
  42:DMP/driver/include/log.h **** 
  43:DMP/driver/include/log.h **** #ifdef ANDROID
  44:DMP/driver/include/log.h **** #ifdef NDK_BUILD
  45:DMP/driver/include/log.h **** #include "log_macros.h"
  46:DMP/driver/include/log.h **** #else
  47:DMP/driver/include/log.h **** #include <utils/Log.h>		/* For the LOG macro */
  48:DMP/driver/include/log.h **** #endif
  49:DMP/driver/include/log.h **** #endif
  50:DMP/driver/include/log.h **** 
  51:DMP/driver/include/log.h **** #ifdef __KERNEL__
  52:DMP/driver/include/log.h **** #include <linux/kernel.h>
  53:DMP/driver/include/log.h **** #endif
  54:DMP/driver/include/log.h **** 
  55:DMP/driver/include/log.h **** #ifdef __cplusplus
  56:DMP/driver/include/log.h **** extern "C" {
  57:DMP/driver/include/log.h **** #endif
  58:DMP/driver/include/log.h **** 
  59:DMP/driver/include/log.h **** #if defined ANDROID_JELLYBEAN
  60:DMP/driver/include/log.h **** #define LOG ALOG
  61:DMP/driver/include/log.h **** #define LOG_ERRROR ANDROID_LOG_ERROR
  62:DMP/driver/include/log.h **** #endif
  63:DMP/driver/include/log.h **** 
  64:DMP/driver/include/log.h **** /* --------------------------------------------------------------------- */
  65:DMP/driver/include/log.h **** 
  66:DMP/driver/include/log.h **** /*
  67:DMP/driver/include/log.h ****  * Normally we strip MPL_LOGV (VERBOSE messages) from release builds.
  68:DMP/driver/include/log.h ****  * You can modify this (for example with "#define MPL_LOG_NDEBUG 0"
  69:DMP/driver/include/log.h ****  * at the top of your source file) to change that behavior.
  70:DMP/driver/include/log.h ****  */
  71:DMP/driver/include/log.h **** #ifndef MPL_LOG_NDEBUG
  72:DMP/driver/include/log.h **** #ifdef NDEBUG
  73:DMP/driver/include/log.h **** #define MPL_LOG_NDEBUG 1
  74:DMP/driver/include/log.h **** #else
  75:DMP/driver/include/log.h **** #define MPL_LOG_NDEBUG 0
  76:DMP/driver/include/log.h **** #endif
  77:DMP/driver/include/log.h **** #endif
  78:DMP/driver/include/log.h **** 
  79:DMP/driver/include/log.h **** #ifdef __KERNEL__
  80:DMP/driver/include/log.h **** #define MPL_LOG_UNKNOWN MPL_LOG_VERBOSE
  81:DMP/driver/include/log.h **** #define MPL_LOG_DEFAULT KERN_DEFAULT
  82:DMP/driver/include/log.h **** #define MPL_LOG_VERBOSE KERN_CONT
  83:DMP/driver/include/log.h **** #define MPL_LOG_DEBUG   KERN_NOTICE
  84:DMP/driver/include/log.h **** #define MPL_LOG_INFO    KERN_INFO
  85:DMP/driver/include/log.h **** #define MPL_LOG_WARN    KERN_WARNING
  86:DMP/driver/include/log.h **** #define MPL_LOG_ERROR   KERN_ERR
  87:DMP/driver/include/log.h **** #define MPL_LOG_SILENT  MPL_LOG_VERBOSE
  88:DMP/driver/include/log.h **** 
  89:DMP/driver/include/log.h **** #else
  90:DMP/driver/include/log.h **** 	/* Based off the log priorities in android
  91:DMP/driver/include/log.h **** 	   /system/core/include/android/log.h */
  92:DMP/driver/include/log.h **** #define MPL_LOG_UNKNOWN		(0)
  93:DMP/driver/include/log.h **** #define MPL_LOG_DEFAULT		(1)
  94:DMP/driver/include/log.h **** #define MPL_LOG_VERBOSE		(2)
  95:DMP/driver/include/log.h **** #define MPL_LOG_DEBUG		(3)
  96:DMP/driver/include/log.h **** #define MPL_LOG_INFO		(4)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 5


  97:DMP/driver/include/log.h **** #define MPL_LOG_WARN		(5)
  98:DMP/driver/include/log.h **** #define MPL_LOG_ERROR		(6)
  99:DMP/driver/include/log.h **** #define MPL_LOG_SILENT		(8)
 100:DMP/driver/include/log.h **** #endif
 101:DMP/driver/include/log.h **** 
 102:DMP/driver/include/log.h **** 
 103:DMP/driver/include/log.h **** /*
 104:DMP/driver/include/log.h ****  * This is the local tag used for the following simplified
 105:DMP/driver/include/log.h ****  * logging macros.  You can change this preprocessor definition
 106:DMP/driver/include/log.h ****  * before using the other macros to change the tag.
 107:DMP/driver/include/log.h ****  */
 108:DMP/driver/include/log.h **** #ifndef MPL_LOG_TAG
 109:DMP/driver/include/log.h **** #ifdef __KERNEL__
 110:DMP/driver/include/log.h **** #define MPL_LOG_TAG
 111:DMP/driver/include/log.h **** #else
 112:DMP/driver/include/log.h **** #define MPL_LOG_TAG NULL
 113:DMP/driver/include/log.h **** #endif
 114:DMP/driver/include/log.h **** #endif
 115:DMP/driver/include/log.h **** 
 116:DMP/driver/include/log.h **** /* --------------------------------------------------------------------- */
 117:DMP/driver/include/log.h **** 
 118:DMP/driver/include/log.h **** /*
 119:DMP/driver/include/log.h ****  * Simplified macro to send a verbose log message using the current MPL_LOG_TAG.
 120:DMP/driver/include/log.h ****  */
 121:DMP/driver/include/log.h **** #ifndef MPL_LOGV
 122:DMP/driver/include/log.h **** #if MPL_LOG_NDEBUG
 123:DMP/driver/include/log.h **** #ifdef _WIN32
 124:DMP/driver/include/log.h **** #define MPL_LOGV(fmt, ...)						\
 125:DMP/driver/include/log.h **** 	do {								\
 126:DMP/driver/include/log.h ****         __pragma (warning(suppress : 4127 )) \
 127:DMP/driver/include/log.h **** 		if (0)							\
 128:DMP/driver/include/log.h **** 			MPL_LOG(LOG_VERBOSE, MPL_LOG_TAG, fmt, ##__VA_ARGS__);\
 129:DMP/driver/include/log.h ****             __pragma (warning(suppress : 4127 )) \
 130:DMP/driver/include/log.h ****     } while (0)
 131:DMP/driver/include/log.h **** #else
 132:DMP/driver/include/log.h **** #define MPL_LOGV(fmt, ...)						\
 133:DMP/driver/include/log.h **** 	do {								\
 134:DMP/driver/include/log.h **** 		if (0)							\
 135:DMP/driver/include/log.h **** 			MPL_LOG(LOG_VERBOSE, MPL_LOG_TAG, fmt, ##__VA_ARGS__);\
 136:DMP/driver/include/log.h ****     } while (0)
 137:DMP/driver/include/log.h **** #endif
 138:DMP/driver/include/log.h **** 
 139:DMP/driver/include/log.h **** #else
 140:DMP/driver/include/log.h **** #define MPL_LOGV(fmt, ...) MPL_LOG(LOG_VERBOSE, MPL_LOG_TAG, fmt, ##__VA_ARGS__)
 141:DMP/driver/include/log.h **** #endif
 142:DMP/driver/include/log.h **** #endif
 143:DMP/driver/include/log.h **** 
 144:DMP/driver/include/log.h **** #ifndef CONDITION
 145:DMP/driver/include/log.h **** #define CONDITION(cond)     ((cond) != 0)
 146:DMP/driver/include/log.h **** #endif
 147:DMP/driver/include/log.h **** 
 148:DMP/driver/include/log.h **** #ifndef MPL_LOGV_IF
 149:DMP/driver/include/log.h **** #if MPL_LOG_NDEBUG
 150:DMP/driver/include/log.h **** #define MPL_LOGV_IF(cond, fmt, ...)  \
 151:DMP/driver/include/log.h **** 	do { if (0) MPL_LOG(fmt, ##__VA_ARGS__); } while (0)
 152:DMP/driver/include/log.h **** #else
 153:DMP/driver/include/log.h **** #define MPL_LOGV_IF(cond, fmt, ...) \
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 6


 154:DMP/driver/include/log.h **** 	((CONDITION(cond))						\
 155:DMP/driver/include/log.h **** 		? MPL_LOG(LOG_VERBOSE, MPL_LOG_TAG, fmt, ##__VA_ARGS__) \
 156:DMP/driver/include/log.h **** 		: (void)0)
 157:DMP/driver/include/log.h **** #endif
 158:DMP/driver/include/log.h **** #endif
 159:DMP/driver/include/log.h **** 
 160:DMP/driver/include/log.h **** /*
 161:DMP/driver/include/log.h ****  * Simplified macro to send a debug log message using the current MPL_LOG_TAG.
 162:DMP/driver/include/log.h ****  */
 163:DMP/driver/include/log.h **** #ifndef MPL_LOGD
 164:DMP/driver/include/log.h **** #define MPL_LOGD(fmt, ...) MPL_LOG(LOG_DEBUG, MPL_LOG_TAG, fmt, ##__VA_ARGS__)
 165:DMP/driver/include/log.h **** #endif
 166:DMP/driver/include/log.h **** 
 167:DMP/driver/include/log.h **** #ifndef MPL_LOGD_IF
 168:DMP/driver/include/log.h **** #define MPL_LOGD_IF(cond, fmt, ...) \
 169:DMP/driver/include/log.h **** 	((CONDITION(cond))					       \
 170:DMP/driver/include/log.h **** 		? MPL_LOG(LOG_DEBUG, MPL_LOG_TAG, fmt, ##__VA_ARGS__)  \
 171:DMP/driver/include/log.h **** 		: (void)0)
 172:DMP/driver/include/log.h **** #endif
 173:DMP/driver/include/log.h **** 
 174:DMP/driver/include/log.h **** /*
 175:DMP/driver/include/log.h ****  * Simplified macro to send an info log message using the current MPL_LOG_TAG.
 176:DMP/driver/include/log.h ****  */
 177:DMP/driver/include/log.h **** #ifndef MPL_LOGI
 178:DMP/driver/include/log.h **** #ifdef __KERNEL__
 179:DMP/driver/include/log.h **** #define MPL_LOGI(fmt, ...) pr_info(KERN_INFO MPL_LOG_TAG fmt, ##__VA_ARGS__)
 180:DMP/driver/include/log.h **** #else
 181:DMP/driver/include/log.h **** #define MPL_LOGI(fmt, ...) MPL_LOG(LOG_INFO, MPL_LOG_TAG, fmt, ##__VA_ARGS__)
 182:DMP/driver/include/log.h **** #endif
 183:DMP/driver/include/log.h **** #endif
 184:DMP/driver/include/log.h **** 
 185:DMP/driver/include/log.h **** #ifndef MPL_LOGI_IF
 186:DMP/driver/include/log.h **** #define MPL_LOGI_IF(cond, fmt, ...) \
 187:DMP/driver/include/log.h **** 	((CONDITION(cond))                                              \
 188:DMP/driver/include/log.h **** 		? MPL_LOG(LOG_INFO, MPL_LOG_TAG, fmt, ##__VA_ARGS__)   \
 189:DMP/driver/include/log.h **** 		: (void)0)
 190:DMP/driver/include/log.h **** #endif
 191:DMP/driver/include/log.h **** 
 192:DMP/driver/include/log.h **** /*
 193:DMP/driver/include/log.h ****  * Simplified macro to send a warning log message using the current MPL_LOG_TAG.
 194:DMP/driver/include/log.h ****  */
 195:DMP/driver/include/log.h **** #ifndef MPL_LOGW
 196:DMP/driver/include/log.h **** #ifdef __KERNEL__
 197:DMP/driver/include/log.h **** #define MPL_LOGW(fmt, ...) printk(KERN_WARNING MPL_LOG_TAG fmt, ##__VA_ARGS__)
 198:DMP/driver/include/log.h **** #else
 199:DMP/driver/include/log.h **** #define MPL_LOGW(fmt, ...) MPL_LOG(LOG_WARN, MPL_LOG_TAG, fmt, ##__VA_ARGS__)
 200:DMP/driver/include/log.h **** #endif
 201:DMP/driver/include/log.h **** #endif
 202:DMP/driver/include/log.h **** 
 203:DMP/driver/include/log.h **** #ifndef MPL_LOGW_IF
 204:DMP/driver/include/log.h **** #define MPL_LOGW_IF(cond, fmt, ...) \
 205:DMP/driver/include/log.h **** 	((CONDITION(cond))					       \
 206:DMP/driver/include/log.h **** 		? MPL_LOG(LOG_WARN, MPL_LOG_TAG, fmt, ##__VA_ARGS__)   \
 207:DMP/driver/include/log.h **** 		: (void)0)
 208:DMP/driver/include/log.h **** #endif
 209:DMP/driver/include/log.h **** 
 210:DMP/driver/include/log.h **** /*
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 7


 211:DMP/driver/include/log.h ****  * Simplified macro to send an error log message using the current MPL_LOG_TAG.
 212:DMP/driver/include/log.h ****  */
 213:DMP/driver/include/log.h **** #ifndef MPL_LOGE
 214:DMP/driver/include/log.h **** #ifdef __KERNEL__
 215:DMP/driver/include/log.h **** #define MPL_LOGE(fmt, ...) printk(KERN_ERR MPL_LOG_TAG fmt, ##__VA_ARGS__)
 216:DMP/driver/include/log.h **** #else
 217:DMP/driver/include/log.h **** #define MPL_LOGE(fmt, ...) MPL_LOG(LOG_ERROR, MPL_LOG_TAG, fmt, ##__VA_ARGS__)
 218:DMP/driver/include/log.h **** #endif
 219:DMP/driver/include/log.h **** #endif
 220:DMP/driver/include/log.h **** 
 221:DMP/driver/include/log.h **** #ifndef MPL_LOGE_IF
 222:DMP/driver/include/log.h **** #define MPL_LOGE_IF(cond, fmt, ...) \
 223:DMP/driver/include/log.h **** 	((CONDITION(cond))					       \
 224:DMP/driver/include/log.h **** 		? MPL_LOG(LOG_ERROR, MPL_LOG_TAG, fmt, ##__VA_ARGS__)  \
 225:DMP/driver/include/log.h **** 		: (void)0)
 226:DMP/driver/include/log.h **** #endif
 227:DMP/driver/include/log.h **** 
 228:DMP/driver/include/log.h **** /* --------------------------------------------------------------------- */
 229:DMP/driver/include/log.h **** 
 230:DMP/driver/include/log.h **** /*
 231:DMP/driver/include/log.h ****  * Log a fatal error.  If the given condition fails, this stops program
 232:DMP/driver/include/log.h ****  * execution like a normal assertion, but also generating the given message.
 233:DMP/driver/include/log.h ****  * It is NOT stripped from release builds.  Note that the condition test
 234:DMP/driver/include/log.h ****  * is -inverted- from the normal assert() semantics.
 235:DMP/driver/include/log.h ****  */
 236:DMP/driver/include/log.h **** #define MPL_LOG_ALWAYS_FATAL_IF(cond, fmt, ...) \
 237:DMP/driver/include/log.h **** 	((CONDITION(cond))					   \
 238:DMP/driver/include/log.h **** 		? ((void)android_printAssert(#cond, MPL_LOG_TAG,   \
 239:DMP/driver/include/log.h **** 						fmt, ##__VA_ARGS__))	\
 240:DMP/driver/include/log.h **** 		: (void)0)
 241:DMP/driver/include/log.h **** 
 242:DMP/driver/include/log.h **** #define MPL_LOG_ALWAYS_FATAL(fmt, ...) \
 243:DMP/driver/include/log.h **** 	(((void)android_printAssert(NULL, MPL_LOG_TAG, fmt, ##__VA_ARGS__)))
 244:DMP/driver/include/log.h **** 
 245:DMP/driver/include/log.h **** /*
 246:DMP/driver/include/log.h ****  * Versions of MPL_LOG_ALWAYS_FATAL_IF and MPL_LOG_ALWAYS_FATAL that
 247:DMP/driver/include/log.h ****  * are stripped out of release builds.
 248:DMP/driver/include/log.h ****  */
 249:DMP/driver/include/log.h **** #if MPL_LOG_NDEBUG
 250:DMP/driver/include/log.h **** #define MPL_LOG_FATAL_IF(cond, fmt, ...)				\
 251:DMP/driver/include/log.h **** 	do {								\
 252:DMP/driver/include/log.h **** 		if (0)							\
 253:DMP/driver/include/log.h **** 			MPL_LOG_ALWAYS_FATAL_IF(cond, fmt, ##__VA_ARGS__); \
 254:DMP/driver/include/log.h **** 	} while (0)
 255:DMP/driver/include/log.h **** #define MPL_LOG_FATAL(fmt, ...)						\
 256:DMP/driver/include/log.h **** 	do {								\
 257:DMP/driver/include/log.h **** 		if (0)							\
 258:DMP/driver/include/log.h **** 			MPL_LOG_ALWAYS_FATAL(fmt, ##__VA_ARGS__)	\
 259:DMP/driver/include/log.h **** 	} while (0)
 260:DMP/driver/include/log.h **** #else
 261:DMP/driver/include/log.h **** #define MPL_LOG_FATAL_IF(cond, fmt, ...) \
 262:DMP/driver/include/log.h **** 	MPL_LOG_ALWAYS_FATAL_IF(cond, fmt, ##__VA_ARGS__)
 263:DMP/driver/include/log.h **** #define MPL_LOG_FATAL(fmt, ...) \
 264:DMP/driver/include/log.h **** 	MPL_LOG_ALWAYS_FATAL(fmt, ##__VA_ARGS__)
 265:DMP/driver/include/log.h **** #endif
 266:DMP/driver/include/log.h **** 
 267:DMP/driver/include/log.h **** /*
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 8


 268:DMP/driver/include/log.h ****  * Assertion that generates a log message when the assertion fails.
 269:DMP/driver/include/log.h ****  * Stripped out of release builds.  Uses the current MPL_LOG_TAG.
 270:DMP/driver/include/log.h ****  */
 271:DMP/driver/include/log.h **** #define MPL_LOG_ASSERT(cond, fmt, ...)			\
 272:DMP/driver/include/log.h **** 	MPL_LOG_FATAL_IF(!(cond), fmt, ##__VA_ARGS__)
 273:DMP/driver/include/log.h **** 
 274:DMP/driver/include/log.h **** /* --------------------------------------------------------------------- */
 275:DMP/driver/include/log.h **** 
 276:DMP/driver/include/log.h **** /*
 277:DMP/driver/include/log.h ****  * Basic log message macro.
 278:DMP/driver/include/log.h ****  *
 279:DMP/driver/include/log.h ****  * Example:
 280:DMP/driver/include/log.h ****  *  MPL_LOG(MPL_LOG_WARN, NULL, "Failed with error %d", errno);
 281:DMP/driver/include/log.h ****  *
 282:DMP/driver/include/log.h ****  * The second argument may be NULL or "" to indicate the "global" tag.
 283:DMP/driver/include/log.h ****  */
 284:DMP/driver/include/log.h **** #ifndef MPL_LOG
 285:DMP/driver/include/log.h **** #ifdef REMOVE_LOGGING
 286:DMP/driver/include/log.h **** #define MPL_LOG(priority, tag, fmt, ...) do {} while (0)
 287:DMP/driver/include/log.h **** #else
 288:DMP/driver/include/log.h **** #define MPL_LOG(priority, tag, fmt, ...)		\
 289:DMP/driver/include/log.h **** 	MPL_LOG_PRI(priority, tag, fmt, ##__VA_ARGS__)
 290:DMP/driver/include/log.h **** #endif
 291:DMP/driver/include/log.h **** #endif
 292:DMP/driver/include/log.h **** 
 293:DMP/driver/include/log.h **** /*
 294:DMP/driver/include/log.h ****  * Log macro that allows you to specify a number for the priority.
 295:DMP/driver/include/log.h ****  */
 296:DMP/driver/include/log.h **** #ifndef MPL_LOG_PRI
 297:DMP/driver/include/log.h **** #ifdef ANDROID
 298:DMP/driver/include/log.h **** #define MPL_LOG_PRI(priority, tag, fmt, ...) \
 299:DMP/driver/include/log.h **** 	LOG(priority, tag, fmt, ##__VA_ARGS__)
 300:DMP/driver/include/log.h **** #elif defined __KERNEL__
 301:DMP/driver/include/log.h **** #define MPL_LOG_PRI(priority, tag, fmt, ...) \
 302:DMP/driver/include/log.h **** 	pr_debug(MPL_##priority tag fmt, ##__VA_ARGS__)
 303:DMP/driver/include/log.h **** #else
 304:DMP/driver/include/log.h **** #define MPL_LOG_PRI(priority, tag, fmt, ...) \
 305:DMP/driver/include/log.h **** 	_MLPrintLog(MPL_##priority, tag, fmt, ##__VA_ARGS__)
 306:DMP/driver/include/log.h **** #endif
 307:DMP/driver/include/log.h **** #endif
 308:DMP/driver/include/log.h **** 
 309:DMP/driver/include/log.h **** /*
 310:DMP/driver/include/log.h ****  * Log macro that allows you to pass in a varargs ("args" is a va_list).
 311:DMP/driver/include/log.h ****  */
 312:DMP/driver/include/log.h **** #ifndef MPL_LOG_PRI_VA
 313:DMP/driver/include/log.h **** #ifdef ANDROID
 314:DMP/driver/include/log.h **** #define MPL_LOG_PRI_VA(priority, tag, fmt, args) \
 315:DMP/driver/include/log.h **** 	android_vprintLog(priority, NULL, tag, fmt, args)
 316:DMP/driver/include/log.h **** #elif defined __KERNEL__
 317:DMP/driver/include/log.h **** /* not allowed in the Kernel because there is no dev_dbg that takes a va_list */
 318:DMP/driver/include/log.h **** #else
 319:DMP/driver/include/log.h **** #define MPL_LOG_PRI_VA(priority, tag, fmt, args) \
 320:DMP/driver/include/log.h **** 	_MLPrintVaLog(priority, NULL, tag, fmt, args)
 321:DMP/driver/include/log.h **** #endif
 322:DMP/driver/include/log.h **** #endif
 323:DMP/driver/include/log.h **** 
 324:DMP/driver/include/log.h **** /* --------------------------------------------------------------------- */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 9


 325:DMP/driver/include/log.h **** 
 326:DMP/driver/include/log.h **** /*
 327:DMP/driver/include/log.h ****  * ===========================================================================
 328:DMP/driver/include/log.h ****  *
 329:DMP/driver/include/log.h ****  * The stuff in the rest of this file should not be used directly.
 330:DMP/driver/include/log.h ****  */
 331:DMP/driver/include/log.h **** 
 332:DMP/driver/include/log.h **** #ifndef ANDROID
 333:DMP/driver/include/log.h **** int _MLPrintLog(int priority, const char *tag, const char *fmt,	...);
 334:DMP/driver/include/log.h **** int _MLPrintVaLog(int priority, const char *tag, const char *fmt, va_list args);
 335:DMP/driver/include/log.h **** /* Final implementation of actual writing to a character device */
 336:DMP/driver/include/log.h **** int _MLWriteLog(const char *buf, int buflen);
 337:DMP/driver/include/log.h **** #endif
 338:DMP/driver/include/log.h **** 
 339:DMP/driver/include/log.h **** static inline void __print_result_location(int result,
  82              		.loc 2 339 20 discriminator 1 view .LVU10
  83              	.LBB11:
 340:DMP/driver/include/log.h **** 					   const char *file,
 341:DMP/driver/include/log.h **** 					   const char *func, int line)
 342:DMP/driver/include/log.h **** {
 343:DMP/driver/include/log.h **** 	MPL_LOGE("%s|%s|%d returning %d\n", file, func, line, result);
  84              		.loc 2 343 2 discriminator 1 view .LVU11
  85 0024 0290     		str	r0, [sp, #8]
  86 0026 2223     		movs	r3, #34
  87 0028 0193     		str	r3, [sp, #4]
  88 002a 154B     		ldr	r3, .L9
  89 002c 0093     		str	r3, [sp]
  90 002e 154B     		ldr	r3, .L9+4
  91 0030 154A     		ldr	r2, .L9+8
  92 0032 0021     		movs	r1, #0
  93 0034 0620     		movs	r0, #6
  94              	.LVL5:
  95              		.loc 2 343 2 is_stmt 0 discriminator 1 view .LVU12
  96 0036 FFF7FEFF 		bl	_MLPrintLog
  97              	.LVL6:
  98              		.loc 2 343 2 discriminator 1 view .LVU13
  99              	.LBE11:
 100              	.LBE10:
  34:DMP/mllite/mpl.c **** 
 101              		.loc 1 34 5 is_stmt 1 discriminator 1 view .LVU14
  34:DMP/mllite/mpl.c **** 
 102              		.loc 1 34 5 discriminator 1 view .LVU15
 103 003a FFF7FEFF 		bl	inv_init_start_manager
 104              	.LVL7:
 105 003e ECE7     		b	.L1
 106              	.L7:
  37:DMP/mllite/mpl.c **** 
 107              		.loc 1 37 5 discriminator 1 view .LVU16
  37:DMP/mllite/mpl.c **** 
 108              		.loc 1 37 5 discriminator 1 view .LVU17
 109 0040 FFF7FEFF 		bl	inv_init_data_builder
 110              	.LVL8:
 111              	.LBB12:
 112              	.LBI12:
 339:DMP/driver/include/log.h **** 					   const char *file,
 113              		.loc 2 339 20 discriminator 1 view .LVU18
 114              	.LBB13:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 10


 115              		.loc 2 343 2 discriminator 1 view .LVU19
 116 0044 0290     		str	r0, [sp, #8]
 117 0046 2523     		movs	r3, #37
 118 0048 0193     		str	r3, [sp, #4]
 119 004a 0D4B     		ldr	r3, .L9
 120 004c 0093     		str	r3, [sp]
 121 004e 0D4B     		ldr	r3, .L9+4
 122 0050 0D4A     		ldr	r2, .L9+8
 123 0052 0021     		movs	r1, #0
 124 0054 0620     		movs	r0, #6
 125              	.LVL9:
 126              		.loc 2 343 2 is_stmt 0 discriminator 1 view .LVU20
 127 0056 FFF7FEFF 		bl	_MLPrintLog
 128              	.LVL10:
 129              		.loc 2 343 2 discriminator 1 view .LVU21
 130              	.LBE13:
 131              	.LBE12:
  37:DMP/mllite/mpl.c **** 
 132              		.loc 1 37 5 is_stmt 1 discriminator 1 view .LVU22
  37:DMP/mllite/mpl.c **** 
 133              		.loc 1 37 5 discriminator 1 view .LVU23
 134 005a FFF7FEFF 		bl	inv_init_data_builder
 135              	.LVL11:
 136 005e DCE7     		b	.L1
 137              	.L8:
  39:DMP/mllite/mpl.c **** 
 138              		.loc 1 39 5 discriminator 1 view .LVU24
  39:DMP/mllite/mpl.c **** 
 139              		.loc 1 39 5 discriminator 1 view .LVU25
 140 0060 FFF7FEFF 		bl	inv_enable_results_holder
 141              	.LVL12:
 142              	.LBB14:
 143              	.LBI14:
 339:DMP/driver/include/log.h **** 					   const char *file,
 144              		.loc 2 339 20 discriminator 1 view .LVU26
 145              	.LBB15:
 146              		.loc 2 343 2 discriminator 1 view .LVU27
 147 0064 0290     		str	r0, [sp, #8]
 148 0066 2723     		movs	r3, #39
 149 0068 0193     		str	r3, [sp, #4]
 150 006a 054B     		ldr	r3, .L9
 151 006c 0093     		str	r3, [sp]
 152 006e 054B     		ldr	r3, .L9+4
 153 0070 054A     		ldr	r2, .L9+8
 154 0072 0021     		movs	r1, #0
 155 0074 0620     		movs	r0, #6
 156              	.LVL13:
 157              		.loc 2 343 2 is_stmt 0 discriminator 1 view .LVU28
 158 0076 FFF7FEFF 		bl	_MLPrintLog
 159              	.LVL14:
 160              		.loc 2 343 2 discriminator 1 view .LVU29
 161              	.LBE15:
 162              	.LBE14:
  39:DMP/mllite/mpl.c **** 
 163              		.loc 1 39 5 is_stmt 1 discriminator 1 view .LVU30
  39:DMP/mllite/mpl.c **** 
 164              		.loc 1 39 5 discriminator 1 view .LVU31
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 11


 165 007a FFF7FEFF 		bl	inv_enable_results_holder
 166              	.LVL15:
 167 007e CCE7     		b	.L1
 168              	.L10:
 169              		.align	2
 170              	.L9:
 171 0080 00000000 		.word	__func__.1
 172 0084 00000000 		.word	.LC0
 173 0088 14000000 		.word	.LC1
 174              		.cfi_endproc
 175              	.LFE10:
 177              		.section	.text.inv_get_version,"ax",%progbits
 178              		.align	1
 179              		.global	inv_get_version
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	inv_get_version:
 185              	.LVL16:
 186              	.LFB11:
  43:DMP/mllite/mpl.c **** 
  44:DMP/mllite/mpl.c **** const char ml_ver[] = "InvenSense MA 5.1.2";
  45:DMP/mllite/mpl.c **** 
  46:DMP/mllite/mpl.c **** /**
  47:DMP/mllite/mpl.c ****  *  @brief  used to get the MPL version.
  48:DMP/mllite/mpl.c ****  *  @param  version     a string where the MPL version gets stored.
  49:DMP/mllite/mpl.c ****  *  @return INV_SUCCESS if successful or a non-zero error code otherwise.
  50:DMP/mllite/mpl.c ****  */
  51:DMP/mllite/mpl.c **** inv_error_t inv_get_version(char **version)
  52:DMP/mllite/mpl.c **** {
 187              		.loc 1 52 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
  53:DMP/mllite/mpl.c ****     INVENSENSE_FUNC_START;
 192              		.loc 1 53 5 view .LVU33
  54:DMP/mllite/mpl.c ****     /* cast out the const */
  55:DMP/mllite/mpl.c ****     *version = (char *)&ml_ver;
 193              		.loc 1 55 5 view .LVU34
 194              		.loc 1 55 14 is_stmt 0 view .LVU35
 195 0000 014B     		ldr	r3, .L12
 196 0002 0360     		str	r3, [r0]
  56:DMP/mllite/mpl.c ****     return INV_SUCCESS;
 197              		.loc 1 56 5 is_stmt 1 view .LVU36
  57:DMP/mllite/mpl.c **** }
 198              		.loc 1 57 1 is_stmt 0 view .LVU37
 199 0004 0020     		movs	r0, #0
 200              	.LVL17:
 201              		.loc 1 57 1 view .LVU38
 202 0006 7047     		bx	lr
 203              	.L13:
 204              		.align	2
 205              	.L12:
 206 0008 00000000 		.word	ml_ver
 207              		.cfi_endproc
 208              	.LFE11:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 12


 210              		.section	.text.inv_start_mpl,"ax",%progbits
 211              		.align	1
 212              		.global	inv_start_mpl
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	inv_start_mpl:
 218              	.LFB12:
  58:DMP/mllite/mpl.c **** 
  59:DMP/mllite/mpl.c **** /** 
  60:DMP/mllite/mpl.c ****  *  @brief  Starts the MPL. Typically called after inv_init_mpl() or after a
  61:DMP/mllite/mpl.c ****  *          inv_stop_mpl() to start the MPL back up an running.
  62:DMP/mllite/mpl.c ****  *  @return INV_SUCCESS if successful or a non-zero error code otherwise.
  63:DMP/mllite/mpl.c ****  */
  64:DMP/mllite/mpl.c **** inv_error_t inv_start_mpl(void)
  65:DMP/mllite/mpl.c **** {
 219              		.loc 1 65 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223 0000 00B5     		push	{lr}
 224              	.LCFI4:
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 14, -4
 227 0002 85B0     		sub	sp, sp, #20
 228              	.LCFI5:
 229              		.cfi_def_cfa_offset 24
  66:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_execute_mpl_start_notification());
 230              		.loc 1 66 5 view .LVU40
 231 0004 FFF7FEFF 		bl	inv_execute_mpl_start_notification
 232              	.LVL18:
 233 0008 10B9     		cbnz	r0, .L17
 234              	.L14:
  67:DMP/mllite/mpl.c ****     return INV_SUCCESS;
  68:DMP/mllite/mpl.c **** }
 235              		.loc 1 68 1 is_stmt 0 view .LVU41
 236 000a 05B0     		add	sp, sp, #20
 237              	.LCFI6:
 238              		.cfi_remember_state
 239              		.cfi_def_cfa_offset 4
 240              		@ sp needed
 241 000c 5DF804FB 		ldr	pc, [sp], #4
 242              	.L17:
 243              	.LCFI7:
 244              		.cfi_restore_state
  66:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_execute_mpl_start_notification());
 245              		.loc 1 66 5 is_stmt 1 discriminator 1 view .LVU42
  66:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_execute_mpl_start_notification());
 246              		.loc 1 66 5 discriminator 1 view .LVU43
 247 0010 FFF7FEFF 		bl	inv_execute_mpl_start_notification
 248              	.LVL19:
 249              	.LBB16:
 250              	.LBI16:
 339:DMP/driver/include/log.h **** 					   const char *file,
 251              		.loc 2 339 20 discriminator 1 view .LVU44
 252              	.LBB17:
 253              		.loc 2 343 2 discriminator 1 view .LVU45
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 13


 254 0014 0290     		str	r0, [sp, #8]
 255 0016 4223     		movs	r3, #66
 256 0018 0193     		str	r3, [sp, #4]
 257 001a 054B     		ldr	r3, .L18
 258 001c 0093     		str	r3, [sp]
 259 001e 054B     		ldr	r3, .L18+4
 260 0020 054A     		ldr	r2, .L18+8
 261 0022 0021     		movs	r1, #0
 262 0024 0620     		movs	r0, #6
 263              	.LVL20:
 264              		.loc 2 343 2 is_stmt 0 discriminator 1 view .LVU46
 265 0026 FFF7FEFF 		bl	_MLPrintLog
 266              	.LVL21:
 267              		.loc 2 343 2 discriminator 1 view .LVU47
 268              	.LBE17:
 269              	.LBE16:
  66:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_execute_mpl_start_notification());
 270              		.loc 1 66 5 is_stmt 1 discriminator 1 view .LVU48
  66:DMP/mllite/mpl.c ****     INV_ERROR_CHECK(inv_execute_mpl_start_notification());
 271              		.loc 1 66 5 discriminator 1 view .LVU49
 272 002a FFF7FEFF 		bl	inv_execute_mpl_start_notification
 273              	.LVL22:
 274 002e ECE7     		b	.L14
 275              	.L19:
 276              		.align	2
 277              	.L18:
 278 0030 00000000 		.word	__func__.0
 279 0034 00000000 		.word	.LC0
 280 0038 14000000 		.word	.LC1
 281              		.cfi_endproc
 282              	.LFE12:
 284              		.section	.rodata.__func__.0,"a"
 285              		.align	2
 288              	__func__.0:
 289 0000 696E765F 		.ascii	"inv_start_mpl\000"
 289      73746172 
 289      745F6D70 
 289      6C00
 290              		.section	.rodata.__func__.1,"a"
 291              		.align	2
 294              	__func__.1:
 295 0000 696E765F 		.ascii	"inv_init_mpl\000"
 295      696E6974 
 295      5F6D706C 
 295      00
 296              		.global	ml_ver
 297              		.section	.rodata.ml_ver,"a"
 298              		.align	2
 301              	ml_ver:
 302 0000 496E7665 		.ascii	"InvenSense MA 5.1.2\000"
 302      6E53656E 
 302      7365204D 
 302      4120352E 
 302      312E3200 
 303              		.text
 304              	.Letext0:
 305              		.file 3 "DMP/mllite/start_manager.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 14


 306              		.file 4 "DMP/mllite/results_holder.h"
 307              		.file 5 "DMP/mllite/data_builder.h"
 308              		.file 6 "DMP/driver/include/mltypes.h"
 309              		.file 7 "DMP/mllite/storage_manager.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 mpl.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:21     .rodata.inv_init_mpl.str1.4:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:28     .text.inv_init_mpl:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:34     .text.inv_init_mpl:00000000 inv_init_mpl
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:171    .text.inv_init_mpl:00000080 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:294    .rodata.__func__.1:00000000 __func__.1
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:178    .text.inv_get_version:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:184    .text.inv_get_version:00000000 inv_get_version
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:206    .text.inv_get_version:00000008 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:301    .rodata.ml_ver:00000000 ml_ver
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:211    .text.inv_start_mpl:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:217    .text.inv_start_mpl:00000000 inv_start_mpl
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:278    .text.inv_start_mpl:00000030 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:288    .rodata.__func__.0:00000000 __func__.0
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:285    .rodata.__func__.0:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:291    .rodata.__func__.1:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cciYr1n5.s:298    .rodata.ml_ver:00000000 $d

UNDEFINED SYMBOLS
inv_init_storage_manager
inv_init_start_manager
inv_init_data_builder
inv_enable_results_holder
_MLPrintLog
inv_execute_mpl_start_notification
