ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_color.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/misc/lv_color.c"
  20              		.section	.text.lv_color_to32,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_color_to32:
  27              	.LVL0:
  28              	.LFB5:
  29              		.file 2 "lvgl/src/misc/lv_color.h"
   1:lvgl/src/misc/lv_color.h **** /**
   2:lvgl/src/misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/misc/lv_color.h ****  *
   4:lvgl/src/misc/lv_color.h ****  */
   5:lvgl/src/misc/lv_color.h **** 
   6:lvgl/src/misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/misc/lv_color.h **** 
   9:lvgl/src/misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_color.h **** extern "C" {
  11:lvgl/src/misc/lv_color.h **** #endif
  12:lvgl/src/misc/lv_color.h **** 
  13:lvgl/src/misc/lv_color.h **** /*********************
  14:lvgl/src/misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_color.h ****  *********************/
  16:lvgl/src/misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/misc/lv_color.h **** 
  21:lvgl/src/misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/misc/lv_color.h **** #endif
  25:lvgl/src/misc/lv_color.h **** 
  26:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/misc/lv_color.h **** #endif
  29:lvgl/src/misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 2


  30:lvgl/src/misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/misc/lv_color.h **** 
  32:lvgl/src/misc/lv_color.h **** /*********************
  33:lvgl/src/misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/misc/lv_color.h ****  *********************/
  35:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/misc/lv_color.h **** 
  38:lvgl/src/misc/lv_color.h **** /**
  39:lvgl/src/misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/misc/lv_color.h ****  */
  41:lvgl/src/misc/lv_color.h **** enum {
  42:lvgl/src/misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/misc/lv_color.h **** };
  56:lvgl/src/misc/lv_color.h **** 
  57:lvgl/src/misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/misc/lv_color.h **** 
  60:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/misc/lv_color.h **** #else
  69:lvgl/src/misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/misc/lv_color.h **** #endif
  71:lvgl/src/misc/lv_color.h **** 
  72:lvgl/src/misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/misc/lv_color.h **** /**
  74:lvgl/src/misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/misc/lv_color.h **** */
  78:lvgl/src/misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/misc/lv_color.h **** #endif
  82:lvgl/src/misc/lv_color.h **** #else
  83:lvgl/src/misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/misc/lv_color.h **** #endif
  86:lvgl/src/misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 3


  87:lvgl/src/misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/misc/lv_color.h **** 
  89:lvgl/src/misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/misc/lv_color.h **** #endif
  92:lvgl/src/misc/lv_color.h **** 
  93:lvgl/src/misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/misc/lv_color.h **** #else
  97:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/misc/lv_color.h **** #endif
  99:lvgl/src/misc/lv_color.h **** 
 100:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/misc/lv_color.h **** 
 109:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/misc/lv_color.h **** 
 114:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/misc/lv_color.h **** 
 117:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/misc/lv_color.h **** 
 122:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/misc/lv_color.h **** 
 127:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/misc/lv_color.h **** 
 130:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/misc/lv_color.h **** #else
 134:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/misc/lv_color.h **** #endif
 136:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/misc/lv_color.h **** 
 139:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/misc/lv_color.h **** #else
 143:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 4


 144:lvgl/src/misc/lv_color.h **** #endif
 145:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/misc/lv_color.h **** 
 148:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/misc/lv_color.h **** #else
 152:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/misc/lv_color.h **** #endif
 155:lvgl/src/misc/lv_color.h **** 
 156:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/misc/lv_color.h **** 
 161:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/misc/lv_color.h **** 
 166:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/misc/lv_color.h **** 
 169:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/misc/lv_color.h **** 
 178:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/misc/lv_color.h **** 
 183:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/misc/lv_color.h **** 
 186:lvgl/src/misc/lv_color.h **** /**********************
 187:lvgl/src/misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/misc/lv_color.h ****  **********************/
 189:lvgl/src/misc/lv_color.h **** 
 190:lvgl/src/misc/lv_color.h **** typedef union {
 191:lvgl/src/misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/misc/lv_color.h ****     union {
 193:lvgl/src/misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/misc/lv_color.h ****     } ch;
 197:lvgl/src/misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/misc/lv_color.h **** 
 199:lvgl/src/misc/lv_color.h **** typedef union {
 200:lvgl/src/misc/lv_color.h ****     struct {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 5


 201:lvgl/src/misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/misc/lv_color.h ****     } ch;
 205:lvgl/src/misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/misc/lv_color.h **** 
 208:lvgl/src/misc/lv_color.h **** typedef union {
 209:lvgl/src/misc/lv_color.h ****     struct {
 210:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/misc/lv_color.h **** #else
 215:lvgl/src/misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/misc/lv_color.h **** #endif
 220:lvgl/src/misc/lv_color.h ****     } ch;
 221:lvgl/src/misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/misc/lv_color.h **** 
 224:lvgl/src/misc/lv_color.h **** typedef union {
 225:lvgl/src/misc/lv_color.h ****     struct {
 226:lvgl/src/misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/misc/lv_color.h ****     } ch;
 231:lvgl/src/misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/misc/lv_color.h **** 
 234:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/misc/lv_color.h **** 
 237:lvgl/src/misc/lv_color.h **** typedef struct {
 238:lvgl/src/misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/misc/lv_color.h **** 
 243:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/misc/lv_color.h **** //! @endcond
 247:lvgl/src/misc/lv_color.h **** 
 248:lvgl/src/misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/misc/lv_color.h **** 
 250:lvgl/src/misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/misc/lv_color.h **** 
 252:lvgl/src/misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/misc/lv_color.h ****     void * user_data;
 255:lvgl/src/misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/misc/lv_color.h **** 
 257:lvgl/src/misc/lv_color.h **** typedef enum {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 6


 258:lvgl/src/misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/misc/lv_color.h **** 
 281:lvgl/src/misc/lv_color.h **** /**********************
 282:lvgl/src/misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/misc/lv_color.h ****  **********************/
 284:lvgl/src/misc/lv_color.h **** 
 285:lvgl/src/misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/misc/lv_color.h ****  *
 292:lvgl/src/misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/misc/lv_color.h ****  */
 298:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/misc/lv_color.h **** {
 300:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/misc/lv_color.h ****     return color.full;
 302:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/misc/lv_color.h ****         return 1;
 305:lvgl/src/misc/lv_color.h ****     }
 306:lvgl/src/misc/lv_color.h ****     else {
 307:lvgl/src/misc/lv_color.h ****         return 0;
 308:lvgl/src/misc/lv_color.h ****     }
 309:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/misc/lv_color.h ****         return 1;
 312:lvgl/src/misc/lv_color.h ****     }
 313:lvgl/src/misc/lv_color.h ****     else {
 314:lvgl/src/misc/lv_color.h ****         return 0;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 7


 315:lvgl/src/misc/lv_color.h ****     }
 316:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/misc/lv_color.h ****         return 1;
 319:lvgl/src/misc/lv_color.h ****     }
 320:lvgl/src/misc/lv_color.h ****     else {
 321:lvgl/src/misc/lv_color.h ****         return 0;
 322:lvgl/src/misc/lv_color.h ****     }
 323:lvgl/src/misc/lv_color.h **** #endif
 324:lvgl/src/misc/lv_color.h **** }
 325:lvgl/src/misc/lv_color.h **** 
 326:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/misc/lv_color.h **** {
 328:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/misc/lv_color.h ****         return 0;
 331:lvgl/src/misc/lv_color.h ****     else
 332:lvgl/src/misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/misc/lv_color.h ****     return color.full;
 335:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/misc/lv_color.h ****     return ret.full;
 341:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/misc/lv_color.h ****     return ret.full;
 347:lvgl/src/misc/lv_color.h **** #endif
 348:lvgl/src/misc/lv_color.h **** }
 349:lvgl/src/misc/lv_color.h **** 
 350:lvgl/src/misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/misc/lv_color.h **** {
 352:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/misc/lv_color.h ****         return 0;
 355:lvgl/src/misc/lv_color.h ****     else
 356:lvgl/src/misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/misc/lv_color.h ****     return ret.full;
 363:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/misc/lv_color.h ****     return color.full;
 365:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/misc/lv_color.h ****     return ret.full;
 371:lvgl/src/misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 8


 372:lvgl/src/misc/lv_color.h **** }
 373:lvgl/src/misc/lv_color.h **** 
 374:lvgl/src/misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/misc/lv_color.h **** {
  30              		.loc 2 375 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 376:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/misc/lv_color.h ****     else
 380:lvgl/src/misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/misc/lv_color.h ****     return ret.full;
 388:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/misc/lv_color.h ****     /**
 390:lvgl/src/misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/misc/lv_color.h ****      *
 396:lvgl/src/misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/misc/lv_color.h ****      *
 398:lvgl/src/misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/misc/lv_color.h ****      *
 407:lvgl/src/misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/misc/lv_color.h ****      */
 417:lvgl/src/misc/lv_color.h **** 
 418:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
  35              		.loc 2 418 5 view .LVU1
 419:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
  36              		.loc 2 419 5 view .LVU2
  37 0000 C0F3C423 		ubfx	r3, r0, #11, #5
  38 0004 03EB4312 		add	r2, r3, r3, lsl #5
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 9


  39 0008 C3EBC203 		rsb	r3, r3, r2, lsl #3
  40 000c 0733     		adds	r3, r3, #7
  41 000e C3F34713 		ubfx	r3, r3, #5, #8
  42 0012 0022     		movs	r2, #0
  43              	.LVL1:
  44              		.loc 2 419 5 is_stmt 0 view .LVU3
  45 0014 63F31742 		bfi	r2, r3, #16, #8
  46              	.LVL2:
 420:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
  47              		.loc 2 420 5 is_stmt 1 view .LVU4
  48 0018 C0F34513 		ubfx	r3, r0, #5, #6
  49 001c 03EBC311 		add	r1, r3, r3, lsl #7
  50 0020 03EB4103 		add	r3, r3, r1, lsl #1
  51 0024 0333     		adds	r3, r3, #3
  52 0026 C3F38713 		ubfx	r3, r3, #6, #8
  53 002a 63F30F22 		bfi	r2, r3, #8, #8
 421:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
  54              		.loc 2 421 5 view .LVU5
  55 002e 00F01F03 		and	r3, r0, #31
  56 0032 03EB4311 		add	r1, r3, r3, lsl #5
  57 0036 C3EBC103 		rsb	r3, r3, r1, lsl #3
  58 003a 0733     		adds	r3, r3, #7
  59 003c C3F34713 		ubfx	r3, r3, #5, #8
  60 0040 63F30702 		bfi	r2, r3, #0, #8
 422:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
  61              		.loc 2 422 5 view .LVU6
 423:lvgl/src/misc/lv_color.h ****     return ret.full;
  62              		.loc 2 423 5 view .LVU7
 424:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/misc/lv_color.h ****     return color.full;
 426:lvgl/src/misc/lv_color.h **** #endif
 427:lvgl/src/misc/lv_color.h **** }
  63              		.loc 2 427 1 is_stmt 0 view .LVU8
  64 0044 42F07F40 		orr	r0, r2, #-16777216
  65              	.LVL3:
  66              		.loc 2 427 1 view .LVU9
  67 0048 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE5:
  71              		.section	.text.lv_color_mix,"ax",%progbits
  72              		.align	1
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	lv_color_mix:
  78              	.LVL4:
  79              	.LFB6:
 428:lvgl/src/misc/lv_color.h **** 
 429:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/misc/lv_color.h **** 
 431:lvgl/src/misc/lv_color.h **** /**
 432:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/misc/lv_color.h ****  */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 10


 438:lvgl/src/misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/misc/lv_color.h **** {
  80              		.loc 2 439 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
 440:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
  85              		.loc 2 440 5 view .LVU11
 441:lvgl/src/misc/lv_color.h **** 
 442:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/misc/lv_color.h **** #endif
 447:lvgl/src/misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
  86              		.loc 2 448 5 view .LVU12
  87              		.loc 2 448 11 is_stmt 0 view .LVU13
  88 0000 0432     		adds	r2, r2, #4
  89              	.LVL5:
 449:lvgl/src/misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
  90              		.loc 2 449 5 is_stmt 1 view .LVU14
  91              		.loc 2 449 19 is_stmt 0 view .LVU15
  92 0002 0B04     		lsls	r3, r1, #16
  93 0004 13FA81F1 		uxtah	r1, r3, r1
  94              	.LVL6:
  95              		.loc 2 449 14 view .LVU16
  96 0008 084B     		ldr	r3, .L3
  97 000a 1940     		ands	r1, r1, r3
  98              	.LVL7:
 450:lvgl/src/misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
  99              		.loc 2 451 5 is_stmt 1 view .LVU17
 100              		.loc 2 451 19 is_stmt 0 view .LVU18
 101 000c 4FEA004C 		lsl	ip, r0, #16
 102 0010 1CFA80F0 		uxtah	r0, ip, r0
 103              	.LVL8:
 104              		.loc 2 451 14 view .LVU19
 105 0014 1840     		ands	r0, r0, r3
 106              	.LVL9:
 452:lvgl/src/misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 107              		.loc 2 452 5 is_stmt 1 view .LVU20
 108              		.loc 2 452 30 is_stmt 0 view .LVU21
 109 0016 401A     		subs	r0, r0, r1
 110              	.LVL10:
 111              		.loc 2 452 36 view .LVU22
 112 0018 D208     		lsrs	r2, r2, #3
 113              	.LVL11:
 114              		.loc 2 452 36 view .LVU23
 115 001a 00FB02F2 		mul	r2, r0, r2
 116              		.loc 2 452 49 view .LVU24
 117 001e 01EB5211 		add	r1, r1, r2, lsr #5
 118              	.LVL12:
 119              		.loc 2 452 14 view .LVU25
 120 0022 01EA0300 		and	r0, r1, r3
 121              	.LVL13:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 11


 453:lvgl/src/misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 122              		.loc 2 453 5 is_stmt 1 view .LVU26
 454:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/misc/lv_color.h **** #endif
 457:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/misc/lv_color.h **** #else
 467:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/misc/lv_color.h **** #endif
 470:lvgl/src/misc/lv_color.h **** 
 471:lvgl/src/misc/lv_color.h ****     return ret;
 123              		.loc 2 471 5 view .LVU27
 472:lvgl/src/misc/lv_color.h **** }
 124              		.loc 2 472 1 is_stmt 0 view .LVU28
 125 0026 40EA1040 		orr	r0, r0, r0, lsr #16
 126              	.LVL14:
 127              		.loc 2 472 1 view .LVU29
 128 002a 7047     		bx	lr
 129              	.L4:
 130              		.align	2
 131              	.L3:
 132 002c 1FF8E007 		.word	132184095
 133              		.cfi_endproc
 134              	.LFE6:
 136              		.section	.text.lv_color_fill,"ax",%progbits
 137              		.align	1
 138              		.global	lv_color_fill
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	lv_color_fill:
 144              	.LVL15:
 145              	.LFB18:
   1:lvgl/src/misc/lv_color.c **** /**
   2:lvgl/src/misc/lv_color.c ****  * @file lv_color.c
   3:lvgl/src/misc/lv_color.c ****  *
   4:lvgl/src/misc/lv_color.c ****  */
   5:lvgl/src/misc/lv_color.c **** 
   6:lvgl/src/misc/lv_color.c **** /*********************
   7:lvgl/src/misc/lv_color.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_color.c ****  *********************/
   9:lvgl/src/misc/lv_color.c **** #include "lv_color.h"
  10:lvgl/src/misc/lv_color.c **** #include "lv_log.h"
  11:lvgl/src/misc/lv_color.c **** 
  12:lvgl/src/misc/lv_color.c **** /*********************
  13:lvgl/src/misc/lv_color.c ****  *      DEFINES
  14:lvgl/src/misc/lv_color.c ****  *********************/
  15:lvgl/src/misc/lv_color.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 12


  16:lvgl/src/misc/lv_color.c **** /**********************
  17:lvgl/src/misc/lv_color.c ****  *      TYPEDEFS
  18:lvgl/src/misc/lv_color.c ****  **********************/
  19:lvgl/src/misc/lv_color.c **** 
  20:lvgl/src/misc/lv_color.c **** /**********************
  21:lvgl/src/misc/lv_color.c ****  *  STATIC PROTOTYPES
  22:lvgl/src/misc/lv_color.c ****  **********************/
  23:lvgl/src/misc/lv_color.c **** 
  24:lvgl/src/misc/lv_color.c **** /**********************
  25:lvgl/src/misc/lv_color.c ****  *  STATIC VARIABLES
  26:lvgl/src/misc/lv_color.c ****  **********************/
  27:lvgl/src/misc/lv_color.c **** 
  28:lvgl/src/misc/lv_color.c **** /**********************
  29:lvgl/src/misc/lv_color.c ****  *      MACROS
  30:lvgl/src/misc/lv_color.c ****  **********************/
  31:lvgl/src/misc/lv_color.c **** 
  32:lvgl/src/misc/lv_color.c **** /**********************
  33:lvgl/src/misc/lv_color.c ****  *   GLOBAL FUNCTIONS
  34:lvgl/src/misc/lv_color.c ****  **********************/
  35:lvgl/src/misc/lv_color.c **** 
  36:lvgl/src/misc/lv_color.c **** void LV_ATTRIBUTE_FAST_MEM lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
  37:lvgl/src/misc/lv_color.c **** {
 146              		.loc 1 37 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
  38:lvgl/src/misc/lv_color.c **** #if LV_COLOR_DEPTH == 16
  39:lvgl/src/misc/lv_color.c ****     uintptr_t buf_int = (uintptr_t)buf;
 151              		.loc 1 39 5 view .LVU31
  40:lvgl/src/misc/lv_color.c ****     if(buf_int & 0x3) {
 152              		.loc 1 40 5 view .LVU32
 153              		.loc 1 40 7 is_stmt 0 view .LVU33
 154 0000 10F0030F 		tst	r0, #3
 155 0004 02D0     		beq	.L6
  41:lvgl/src/misc/lv_color.c ****         *buf = color;
 156              		.loc 1 41 9 is_stmt 1 view .LVU34
 157              		.loc 1 41 14 is_stmt 0 view .LVU35
 158 0006 20F8021B 		strh	r1, [r0], #2	@ movhi
 159              	.LVL16:
  42:lvgl/src/misc/lv_color.c ****         buf++;
 160              		.loc 1 42 9 is_stmt 1 view .LVU36
  43:lvgl/src/misc/lv_color.c ****         px_num--;
 161              		.loc 1 43 9 view .LVU37
 162              		.loc 1 43 15 is_stmt 0 view .LVU38
 163 000a 013A     		subs	r2, r2, #1
 164              	.LVL17:
 165              	.L6:
  44:lvgl/src/misc/lv_color.c ****     }
  45:lvgl/src/misc/lv_color.c **** 
  46:lvgl/src/misc/lv_color.c ****     uint32_t c32 = (uint32_t)color.full + ((uint32_t)color.full << 16);
 166              		.loc 1 46 5 is_stmt 1 view .LVU39
 167              		.loc 1 46 65 is_stmt 0 view .LVU40
 168 000c 0B04     		lsls	r3, r1, #16
 169              		.loc 1 46 14 view .LVU41
 170 000e 13FA81F3 		uxtah	r3, r3, r1
 171              	.LVL18:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 13


  47:lvgl/src/misc/lv_color.c ****     uint32_t * buf32 = (uint32_t *)buf;
 172              		.loc 1 47 5 is_stmt 1 view .LVU42
  48:lvgl/src/misc/lv_color.c **** 
  49:lvgl/src/misc/lv_color.c ****     while(px_num > 16) {
 173              		.loc 1 49 5 view .LVU43
 174              		.loc 1 49 10 is_stmt 0 view .LVU44
 175 0012 09E0     		b	.L7
 176              	.LVL19:
 177              	.L8:
  50:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 178              		.loc 1 50 9 is_stmt 1 view .LVU45
 179              		.loc 1 50 16 is_stmt 0 view .LVU46
 180 0014 0360     		str	r3, [r0]
  51:lvgl/src/misc/lv_color.c ****         buf32++;
 181              		.loc 1 51 9 is_stmt 1 view .LVU47
 182              	.LVL20:
  52:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 183              		.loc 1 52 9 view .LVU48
 184              		.loc 1 52 16 is_stmt 0 view .LVU49
 185 0016 4360     		str	r3, [r0, #4]
  53:lvgl/src/misc/lv_color.c ****         buf32++;
 186              		.loc 1 53 9 is_stmt 1 view .LVU50
 187              	.LVL21:
  54:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 188              		.loc 1 54 9 view .LVU51
 189              		.loc 1 54 16 is_stmt 0 view .LVU52
 190 0018 8360     		str	r3, [r0, #8]
  55:lvgl/src/misc/lv_color.c ****         buf32++;
 191              		.loc 1 55 9 is_stmt 1 view .LVU53
 192              	.LVL22:
  56:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 193              		.loc 1 56 9 view .LVU54
 194              		.loc 1 56 16 is_stmt 0 view .LVU55
 195 001a C360     		str	r3, [r0, #12]
  57:lvgl/src/misc/lv_color.c ****         buf32++;
 196              		.loc 1 57 9 is_stmt 1 view .LVU56
 197              	.LVL23:
  58:lvgl/src/misc/lv_color.c **** 
  59:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 198              		.loc 1 59 9 view .LVU57
 199              		.loc 1 59 16 is_stmt 0 view .LVU58
 200 001c 0361     		str	r3, [r0, #16]
  60:lvgl/src/misc/lv_color.c ****         buf32++;
 201              		.loc 1 60 9 is_stmt 1 view .LVU59
 202              	.LVL24:
  61:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 203              		.loc 1 61 9 view .LVU60
 204              		.loc 1 61 16 is_stmt 0 view .LVU61
 205 001e 4361     		str	r3, [r0, #20]
  62:lvgl/src/misc/lv_color.c ****         buf32++;
 206              		.loc 1 62 9 is_stmt 1 view .LVU62
 207              	.LVL25:
  63:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 208              		.loc 1 63 9 view .LVU63
 209              		.loc 1 63 16 is_stmt 0 view .LVU64
 210 0020 8361     		str	r3, [r0, #24]
  64:lvgl/src/misc/lv_color.c ****         buf32++;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 14


 211              		.loc 1 64 9 is_stmt 1 view .LVU65
 212              	.LVL26:
  65:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 213              		.loc 1 65 9 view .LVU66
 214              		.loc 1 65 16 is_stmt 0 view .LVU67
 215 0022 C361     		str	r3, [r0, #28]
  66:lvgl/src/misc/lv_color.c ****         buf32++;
 216              		.loc 1 66 9 is_stmt 1 view .LVU68
 217              		.loc 1 66 14 is_stmt 0 view .LVU69
 218 0024 2030     		adds	r0, r0, #32
 219              	.LVL27:
  67:lvgl/src/misc/lv_color.c **** 
  68:lvgl/src/misc/lv_color.c ****         px_num -= 16;
 220              		.loc 1 68 9 is_stmt 1 view .LVU70
 221              		.loc 1 68 16 is_stmt 0 view .LVU71
 222 0026 103A     		subs	r2, r2, #16
 223              	.LVL28:
 224              	.L7:
  49:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 225              		.loc 1 49 18 is_stmt 1 view .LVU72
 226 0028 102A     		cmp	r2, #16
 227 002a F3D8     		bhi	.L8
  49:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 228              		.loc 1 49 18 is_stmt 0 view .LVU73
 229 002c 02E0     		b	.L9
 230              	.LVL29:
 231              	.L10:
  69:lvgl/src/misc/lv_color.c ****     }
  70:lvgl/src/misc/lv_color.c **** 
  71:lvgl/src/misc/lv_color.c ****     buf = (lv_color_t *)buf32;
  72:lvgl/src/misc/lv_color.c **** 
  73:lvgl/src/misc/lv_color.c ****     while(px_num) {
  74:lvgl/src/misc/lv_color.c ****         *buf = color;
 232              		.loc 1 74 9 is_stmt 1 view .LVU74
 233              		.loc 1 74 14 is_stmt 0 view .LVU75
 234 002e 20F8021B 		strh	r1, [r0], #2	@ movhi
 235              	.LVL30:
  75:lvgl/src/misc/lv_color.c ****         buf++;
 236              		.loc 1 75 9 is_stmt 1 view .LVU76
  76:lvgl/src/misc/lv_color.c ****         px_num--;
 237              		.loc 1 76 9 view .LVU77
 238              		.loc 1 76 15 is_stmt 0 view .LVU78
 239 0032 013A     		subs	r2, r2, #1
 240              	.LVL31:
 241              	.L9:
  73:lvgl/src/misc/lv_color.c ****         *buf = color;
 242              		.loc 1 73 11 is_stmt 1 view .LVU79
 243 0034 002A     		cmp	r2, #0
 244 0036 FAD1     		bne	.L10
  77:lvgl/src/misc/lv_color.c ****     }
  78:lvgl/src/misc/lv_color.c **** #else
  79:lvgl/src/misc/lv_color.c ****     while(px_num > 16) {
  80:lvgl/src/misc/lv_color.c ****         *buf = color;
  81:lvgl/src/misc/lv_color.c ****         buf++;
  82:lvgl/src/misc/lv_color.c ****         *buf = color;
  83:lvgl/src/misc/lv_color.c ****         buf++;
  84:lvgl/src/misc/lv_color.c ****         *buf = color;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 15


  85:lvgl/src/misc/lv_color.c ****         buf++;
  86:lvgl/src/misc/lv_color.c ****         *buf = color;
  87:lvgl/src/misc/lv_color.c ****         buf++;
  88:lvgl/src/misc/lv_color.c **** 
  89:lvgl/src/misc/lv_color.c ****         *buf = color;
  90:lvgl/src/misc/lv_color.c ****         buf++;
  91:lvgl/src/misc/lv_color.c ****         *buf = color;
  92:lvgl/src/misc/lv_color.c ****         buf++;
  93:lvgl/src/misc/lv_color.c ****         *buf = color;
  94:lvgl/src/misc/lv_color.c ****         buf++;
  95:lvgl/src/misc/lv_color.c ****         *buf = color;
  96:lvgl/src/misc/lv_color.c ****         buf++;
  97:lvgl/src/misc/lv_color.c **** 
  98:lvgl/src/misc/lv_color.c ****         *buf = color;
  99:lvgl/src/misc/lv_color.c ****         buf++;
 100:lvgl/src/misc/lv_color.c ****         *buf = color;
 101:lvgl/src/misc/lv_color.c ****         buf++;
 102:lvgl/src/misc/lv_color.c ****         *buf = color;
 103:lvgl/src/misc/lv_color.c ****         buf++;
 104:lvgl/src/misc/lv_color.c ****         *buf = color;
 105:lvgl/src/misc/lv_color.c ****         buf++;
 106:lvgl/src/misc/lv_color.c **** 
 107:lvgl/src/misc/lv_color.c ****         *buf = color;
 108:lvgl/src/misc/lv_color.c ****         buf++;
 109:lvgl/src/misc/lv_color.c ****         *buf = color;
 110:lvgl/src/misc/lv_color.c ****         buf++;
 111:lvgl/src/misc/lv_color.c ****         *buf = color;
 112:lvgl/src/misc/lv_color.c ****         buf++;
 113:lvgl/src/misc/lv_color.c ****         *buf = color;
 114:lvgl/src/misc/lv_color.c ****         buf++;
 115:lvgl/src/misc/lv_color.c **** 
 116:lvgl/src/misc/lv_color.c ****         px_num -= 16;
 117:lvgl/src/misc/lv_color.c ****     }
 118:lvgl/src/misc/lv_color.c ****     while(px_num) {
 119:lvgl/src/misc/lv_color.c ****         *buf = color;
 120:lvgl/src/misc/lv_color.c ****         buf++;
 121:lvgl/src/misc/lv_color.c ****         px_num--;
 122:lvgl/src/misc/lv_color.c ****     }
 123:lvgl/src/misc/lv_color.c **** #endif
 124:lvgl/src/misc/lv_color.c **** }
 245              		.loc 1 124 1 is_stmt 0 view .LVU80
 246 0038 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE18:
 250              		.section	.text.lv_color_lighten,"ax",%progbits
 251              		.align	1
 252              		.global	lv_color_lighten
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 257              	lv_color_lighten:
 258              	.LVL32:
 259              	.LFB19:
 125:lvgl/src/misc/lv_color.c **** 
 126:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl)
 127:lvgl/src/misc/lv_color.c **** {
 260              		.loc 1 127 1 is_stmt 1 view -0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 16


 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 127 1 is_stmt 0 view .LVU82
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI0:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 270 0002 0A46     		mov	r2, r1
 128:lvgl/src/misc/lv_color.c ****     return lv_color_mix(lv_color_white(), c, lvl);
 271              		.loc 1 128 5 is_stmt 1 view .LVU83
 272              	.LBB38:
 273              	.LBI38:
 473:lvgl/src/misc/lv_color.h **** 
 474:lvgl/src/misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/misc/lv_color.h **** {
 476:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/misc/lv_color.h **** #else
 481:lvgl/src/misc/lv_color.h ****     (void) mix;
 482:lvgl/src/misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/misc/lv_color.h **** #endif
 487:lvgl/src/misc/lv_color.h **** 
 488:lvgl/src/misc/lv_color.h **** }
 489:lvgl/src/misc/lv_color.h **** 
 490:lvgl/src/misc/lv_color.h **** /**
 491:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/misc/lv_color.h ****  */
 499:lvgl/src/misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/misc/lv_color.h **** {
 501:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/misc/lv_color.h **** #else
 509:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 17


 516:lvgl/src/misc/lv_color.h **** #endif
 517:lvgl/src/misc/lv_color.h **** 
 518:lvgl/src/misc/lv_color.h ****     return ret;
 519:lvgl/src/misc/lv_color.h **** }
 520:lvgl/src/misc/lv_color.h **** 
 521:lvgl/src/misc/lv_color.h **** /**
 522:lvgl/src/misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/misc/lv_color.h ****  */
 530:lvgl/src/misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/misc/lv_color.h **** {
 534:lvgl/src/misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/misc/lv_color.h ****     }
 539:lvgl/src/misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/misc/lv_color.h ****     }
 544:lvgl/src/misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/misc/lv_color.h ****     }
 549:lvgl/src/misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/misc/lv_color.h ****     else {
 551:lvgl/src/misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/misc/lv_color.h **** 
 559:lvgl/src/misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/misc/lv_color.h ****             /*Info:
 566:lvgl/src/misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/misc/lv_color.h **** 
 572:lvgl/src/misc/lv_color.h ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 18


 573:lvgl/src/misc/lv_color.h **** 
 574:lvgl/src/misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/misc/lv_color.h ****     }
 577:lvgl/src/misc/lv_color.h **** }
 578:lvgl/src/misc/lv_color.h **** 
 579:lvgl/src/misc/lv_color.h **** //! @endcond
 580:lvgl/src/misc/lv_color.h **** 
 581:lvgl/src/misc/lv_color.h **** /**
 582:lvgl/src/misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/misc/lv_color.h ****  * @param color a color
 584:lvgl/src/misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/misc/lv_color.h ****  */
 586:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/misc/lv_color.h **** {
 588:lvgl/src/misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/misc/lv_color.h **** }
 593:lvgl/src/misc/lv_color.h **** 
 594:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/misc/lv_color.h **** {
 596:lvgl/src/misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/misc/lv_color.h **** }
 598:lvgl/src/misc/lv_color.h **** 
 599:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/misc/lv_color.h **** {
 601:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/misc/lv_color.h **** 
 612:lvgl/src/misc/lv_color.h ****         A bit better:
 613:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/misc/lv_color.h **** #else
 620:lvgl/src/misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/misc/lv_color.h **** #endif
 623:lvgl/src/misc/lv_color.h ****     return r;
 624:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/misc/lv_color.h ****     return r;
 628:lvgl/src/misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 19


 630:lvgl/src/misc/lv_color.h **** #endif
 631:lvgl/src/misc/lv_color.h **** }
 632:lvgl/src/misc/lv_color.h **** 
 633:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/misc/lv_color.h **** {
 635:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/misc/lv_color.h **** }
 638:lvgl/src/misc/lv_color.h **** 
 639:lvgl/src/misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/misc/lv_color.h **** {
 641:lvgl/src/misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/misc/lv_color.h **** }
 643:lvgl/src/misc/lv_color.h **** 
 644:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/misc/lv_color.h **** //!
 646:lvgl/src/misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/misc/lv_color.h **** 
 648:lvgl/src/misc/lv_color.h **** //! @endcond
 649:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/misc/lv_color.h **** 
 651:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/misc/lv_color.h **** 
 653:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/misc/lv_color.h **** 
 655:lvgl/src/misc/lv_color.h **** /**
 656:lvgl/src/misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/misc/lv_color.h ****  */
 662:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/misc/lv_color.h **** 
 664:lvgl/src/misc/lv_color.h **** /**
 665:lvgl/src/misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/misc/lv_color.h ****  */
 671:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/misc/lv_color.h **** 
 673:lvgl/src/misc/lv_color.h **** /**
 674:lvgl/src/misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/misc/lv_color.h ****  * @param color color
 676:lvgl/src/misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/misc/lv_color.h ****  */
 678:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/misc/lv_color.h **** 
 680:lvgl/src/misc/lv_color.h **** /**
 681:lvgl/src/misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/misc/lv_color.h ****  */
 684:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/misc/lv_color.h **** {
 686:lvgl/src/misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 20


 687:lvgl/src/misc/lv_color.h **** }
 688:lvgl/src/misc/lv_color.h **** 
 689:lvgl/src/misc/lv_color.h **** /**********************
 690:lvgl/src/misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/misc/lv_color.h ****  **********************/
 692:lvgl/src/misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/misc/lv_color.h **** 
 694:lvgl/src/misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 274              		.loc 2 695 26 view .LVU84
 696:lvgl/src/misc/lv_color.h **** {
 697:lvgl/src/misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 275              		.loc 2 697 5 view .LVU85
 276              	.LVL33:
 277              	.LBB39:
 278              	.LBI39:
 594:lvgl/src/misc/lv_color.h **** {
 279              		.loc 2 594 26 view .LVU86
 280              	.LBB40:
 596:lvgl/src/misc/lv_color.h **** }
 281              		.loc 2 596 5 view .LVU87
 596:lvgl/src/misc/lv_color.h **** }
 282              		.loc 2 596 5 is_stmt 0 view .LVU88
 283              	.LBE40:
 284              	.LBE39:
 285              	.LBE38:
 286              		.loc 1 128 12 view .LVU89
 287 0004 0146     		mov	r1, r0	@ movhi
 288              	.LVL34:
 289              		.loc 1 128 12 view .LVU90
 290 0006 4FF0FF30 		mov	r0, #-1	@ movhi
 291              	.LVL35:
 292              		.loc 1 128 12 view .LVU91
 293 000a FFF7FEFF 		bl	lv_color_mix
 294              	.LVL36:
 129:lvgl/src/misc/lv_color.c **** }
 295              		.loc 1 129 1 view .LVU92
 296 000e 08BD     		pop	{r3, pc}
 297              		.cfi_endproc
 298              	.LFE19:
 300              		.section	.text.lv_color_darken,"ax",%progbits
 301              		.align	1
 302              		.global	lv_color_darken
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	lv_color_darken:
 308              	.LVL37:
 309              	.LFB20:
 130:lvgl/src/misc/lv_color.c **** 
 131:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl)
 132:lvgl/src/misc/lv_color.c **** {
 310              		.loc 1 132 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		.loc 1 132 1 is_stmt 0 view .LVU94
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 21


 315 0000 08B5     		push	{r3, lr}
 316              	.LCFI1:
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 3, -8
 319              		.cfi_offset 14, -4
 320 0002 0A46     		mov	r2, r1
 133:lvgl/src/misc/lv_color.c ****     return lv_color_mix(lv_color_black(), c, lvl);
 321              		.loc 1 133 5 is_stmt 1 view .LVU95
 322              	.LBB41:
 323              	.LBI41:
 698:lvgl/src/misc/lv_color.h **** }
 699:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 324              		.loc 2 699 26 view .LVU96
 700:lvgl/src/misc/lv_color.h **** {
 701:lvgl/src/misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 325              		.loc 2 701 5 view .LVU97
 326              	.LVL38:
 327              	.LBB42:
 328              	.LBI42:
 594:lvgl/src/misc/lv_color.h **** {
 329              		.loc 2 594 26 view .LVU98
 330              	.LBB43:
 596:lvgl/src/misc/lv_color.h **** }
 331              		.loc 2 596 5 view .LVU99
 596:lvgl/src/misc/lv_color.h **** }
 332              		.loc 2 596 12 is_stmt 0 view .LVU100
 333 0004 4FF00003 		mov	r3, #0	@ movhi
 334 0008 6FF30403 		bfc	r3, #0, #5
 335 000c 6FF34A13 		bfc	r3, #5, #6
 336 0010 6FF3CF23 		bfc	r3, #11, #5
 337              	.LVL39:
 596:lvgl/src/misc/lv_color.h **** }
 338              		.loc 2 596 12 view .LVU101
 339              	.LBE43:
 340              	.LBE42:
 341              	.LBE41:
 342              		.loc 1 133 12 view .LVU102
 343 0014 0146     		mov	r1, r0	@ movhi
 344              	.LVL40:
 345              		.loc 1 133 12 view .LVU103
 346 0016 1846     		mov	r0, r3	@ movhi
 347              	.LVL41:
 348              		.loc 1 133 12 view .LVU104
 349 0018 FFF7FEFF 		bl	lv_color_mix
 350              	.LVL42:
 134:lvgl/src/misc/lv_color.c **** }
 351              		.loc 1 134 1 view .LVU105
 352 001c 08BD     		pop	{r3, pc}
 353              		.cfi_endproc
 354              	.LFE20:
 356              		.section	.text.lv_color_change_lightness,"ax",%progbits
 357              		.align	1
 358              		.global	lv_color_change_lightness
 359              		.syntax unified
 360              		.thumb
 361              		.thumb_func
 363              	lv_color_change_lightness:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 22


 364              	.LVL43:
 365              	.LFB21:
 135:lvgl/src/misc/lv_color.c **** 
 136:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl)
 137:lvgl/src/misc/lv_color.c **** {
 366              		.loc 1 137 1 is_stmt 1 view -0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 138:lvgl/src/misc/lv_color.c ****     /*It'd be better to convert the color to HSL, change L and convert back to RGB.*/
 139:lvgl/src/misc/lv_color.c ****     if(lvl == LV_OPA_50) return c;
 370              		.loc 1 139 5 view .LVU107
 371              		.loc 1 139 7 is_stmt 0 view .LVU108
 372 0000 7F29     		cmp	r1, #127
 373 0002 11D0     		beq	.L20
 137:lvgl/src/misc/lv_color.c ****     /*It'd be better to convert the color to HSL, change L and convert back to RGB.*/
 374              		.loc 1 137 1 view .LVU109
 375 0004 08B5     		push	{r3, lr}
 376              	.LCFI2:
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 140:lvgl/src/misc/lv_color.c ****     else if(lvl < LV_OPA_50) return lv_color_darken(c, (LV_OPA_50 - lvl) * 2);
 380              		.loc 1 140 10 is_stmt 1 view .LVU110
 381              		.loc 1 140 12 is_stmt 0 view .LVU111
 382 0006 7E29     		cmp	r1, #126
 383 0008 07D8     		bhi	.L18
 384              		.loc 1 140 30 is_stmt 1 discriminator 1 view .LVU112
 385              		.loc 1 140 67 is_stmt 0 discriminator 1 view .LVU113
 386 000a C1F17F01 		rsb	r1, r1, #127
 387              	.LVL44:
 388              		.loc 1 140 37 discriminator 1 view .LVU114
 389 000e 4900     		lsls	r1, r1, #1
 390 0010 01F0FE01 		and	r1, r1, #254
 391 0014 FFF7FEFF 		bl	lv_color_darken
 392              	.LVL45:
 393              	.L17:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 142:lvgl/src/misc/lv_color.c **** }
 394              		.loc 1 142 1 view .LVU115
 395 0018 08BD     		pop	{r3, pc}
 396              	.LVL46:
 397              	.L18:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 398              		.loc 1 141 10 is_stmt 1 view .LVU116
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 399              		.loc 1 141 17 is_stmt 0 view .LVU117
 400 001a 7F39     		subs	r1, r1, #127
 401              	.LVL47:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 402              		.loc 1 141 17 view .LVU118
 403 001c 4900     		lsls	r1, r1, #1
 404 001e 01F0FE01 		and	r1, r1, #254
 405 0022 FFF7FEFF 		bl	lv_color_lighten
 406              	.LVL48:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 407              		.loc 1 141 17 view .LVU119
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 23


 408 0026 F7E7     		b	.L17
 409              	.LVL49:
 410              	.L20:
 411              	.LCFI3:
 412              		.cfi_def_cfa_offset 0
 413              		.cfi_restore 3
 414              		.cfi_restore 14
 415              	.LVL50:
 416              		.loc 1 142 1 view .LVU120
 417 0028 7047     		bx	lr
 418              		.cfi_endproc
 419              	.LFE21:
 421              		.section	.text.lv_color_hsv_to_rgb,"ax",%progbits
 422              		.align	1
 423              		.global	lv_color_hsv_to_rgb
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	lv_color_hsv_to_rgb:
 429              	.LVL51:
 430              	.LFB22:
 143:lvgl/src/misc/lv_color.c **** 
 144:lvgl/src/misc/lv_color.c **** /**
 145:lvgl/src/misc/lv_color.c ****  * Convert a HSV color to RGB
 146:lvgl/src/misc/lv_color.c ****  * @param h hue [0..359]
 147:lvgl/src/misc/lv_color.c ****  * @param s saturation [0..100]
 148:lvgl/src/misc/lv_color.c ****  * @param v value [0..100]
 149:lvgl/src/misc/lv_color.c ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 150:lvgl/src/misc/lv_color.c ****  */
 151:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v)
 152:lvgl/src/misc/lv_color.c **** {
 431              		.loc 1 152 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		.loc 1 152 1 is_stmt 0 view .LVU122
 436 0000 00B5     		push	{lr}
 437              	.LCFI4:
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 14, -4
 153:lvgl/src/misc/lv_color.c ****     h = (uint32_t)((uint32_t)h * 255) / 360;
 440              		.loc 1 153 5 is_stmt 1 view .LVU123
 441              		.loc 1 153 9 is_stmt 0 view .LVU124
 442 0002 C0EB0020 		rsb	r0, r0, r0, lsl #8
 443              	.LVL52:
 444              		.loc 1 153 39 view .LVU125
 445 0006 C008     		lsrs	r0, r0, #3
 446 0008 3B4B     		ldr	r3, .L36
 447 000a A3FB0030 		umull	r3, r0, r3, r0
 448 000e 4FEA900C 		lsr	ip, r0, #2
 449              		.loc 1 153 7 view .LVU126
 450 0012 C0F38F00 		ubfx	r0, r0, #2, #16
 451              	.LVL53:
 154:lvgl/src/misc/lv_color.c ****     s = (uint16_t)((uint16_t)s * 255) / 100;
 452              		.loc 1 154 5 is_stmt 1 view .LVU127
 453              		.loc 1 154 9 is_stmt 0 view .LVU128
 454 0016 C1EB0121 		rsb	r1, r1, r1, lsl #8
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 24


 455              	.LVL54:
 456              		.loc 1 154 9 view .LVU129
 457 001a 8BB2     		uxth	r3, r1
 458              		.loc 1 154 7 view .LVU130
 459 001c 3749     		ldr	r1, .L36+4
 460 001e A1FB03E3 		umull	lr, r3, r1, r3
 461 0022 C3F34713 		ubfx	r3, r3, #5, #8
 462              	.LVL55:
 155:lvgl/src/misc/lv_color.c ****     v = (uint16_t)((uint16_t)v * 255) / 100;
 463              		.loc 1 155 5 is_stmt 1 view .LVU131
 464              		.loc 1 155 9 is_stmt 0 view .LVU132
 465 0026 C2EB0222 		rsb	r2, r2, r2, lsl #8
 466              	.LVL56:
 467              		.loc 1 155 9 view .LVU133
 468 002a 92B2     		uxth	r2, r2
 469              		.loc 1 155 7 view .LVU134
 470 002c A1FB0212 		umull	r1, r2, r1, r2
 471 0030 C2F34712 		ubfx	r2, r2, #5, #8
 472              	.LVL57:
 156:lvgl/src/misc/lv_color.c **** 
 157:lvgl/src/misc/lv_color.c ****     uint8_t r, g, b;
 473              		.loc 1 157 5 is_stmt 1 view .LVU135
 158:lvgl/src/misc/lv_color.c **** 
 159:lvgl/src/misc/lv_color.c ****     uint8_t region, remainder, p, q, t;
 474              		.loc 1 159 5 view .LVU136
 160:lvgl/src/misc/lv_color.c **** 
 161:lvgl/src/misc/lv_color.c ****     if(s == 0) {
 475              		.loc 1 161 5 view .LVU137
 476              		.loc 1 161 7 is_stmt 0 view .LVU138
 477 0034 83B3     		cbz	r3, .L35
 162:lvgl/src/misc/lv_color.c ****         return lv_color_make(v, v, v);
 163:lvgl/src/misc/lv_color.c ****     }
 164:lvgl/src/misc/lv_color.c **** 
 165:lvgl/src/misc/lv_color.c ****     region    = h / 43;
 478              		.loc 1 165 5 is_stmt 1 view .LVU139
 479              		.loc 1 165 15 is_stmt 0 view .LVU140
 480 0036 3249     		ldr	r1, .L36+8
 481 0038 A1FB0010 		umull	r1, r0, r1, r0
 482              	.LVL58:
 483              		.loc 1 165 15 view .LVU141
 484 003c C0F3C700 		ubfx	r0, r0, #3, #8
 485              	.LVL59:
 166:lvgl/src/misc/lv_color.c ****     remainder = (h - (region * 43)) * 6;
 486              		.loc 1 166 5 is_stmt 1 view .LVU142
 487              		.loc 1 166 20 is_stmt 0 view .LVU143
 488 0040 1FFA8CF1 		uxth	r1, ip
 489 0044 6FF02A0C 		mvn	ip, #42
 490 0048 0CFB0011 		mla	r1, ip, r0, r1
 491              		.loc 1 166 15 view .LVU144
 492 004c 01EB4101 		add	r1, r1, r1, lsl #1
 493 0050 4900     		lsls	r1, r1, #1
 494 0052 C9B2     		uxtb	r1, r1
 495              	.LVL60:
 167:lvgl/src/misc/lv_color.c **** 
 168:lvgl/src/misc/lv_color.c ****     p = (v * (255 - s)) >> 8;
 496              		.loc 1 168 5 is_stmt 1 view .LVU145
 497              		.loc 1 168 19 is_stmt 0 view .LVU146
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 25


 498 0054 C3F1FF0E 		rsb	lr, r3, #255
 499              		.loc 1 168 12 view .LVU147
 500 0058 0EFB02FE 		mul	lr, lr, r2
 501              		.loc 1 168 7 view .LVU148
 502 005c CEF3072E 		ubfx	lr, lr, #8, #8
 503              	.LVL61:
 169:lvgl/src/misc/lv_color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
 504              		.loc 1 169 5 is_stmt 1 view .LVU149
 505              		.loc 1 169 25 is_stmt 0 view .LVU150
 506 0060 01FB03FC 		mul	ip, r1, r3
 507              		.loc 1 169 38 view .LVU151
 508 0064 4FEA2C2C 		asr	ip, ip, #8
 509              		.loc 1 169 19 view .LVU152
 510 0068 CCF1FF0C 		rsb	ip, ip, #255
 511              		.loc 1 169 12 view .LVU153
 512 006c 0CFB02FC 		mul	ip, ip, r2
 513              		.loc 1 169 7 view .LVU154
 514 0070 CCF3072C 		ubfx	ip, ip, #8, #8
 515              	.LVL62:
 170:lvgl/src/misc/lv_color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 516              		.loc 1 170 5 is_stmt 1 view .LVU155
 517              		.loc 1 170 32 is_stmt 0 view .LVU156
 518 0074 C1F1FF01 		rsb	r1, r1, #255
 519              	.LVL63:
 520              		.loc 1 170 25 view .LVU157
 521 0078 01FB03F3 		mul	r3, r1, r3
 522              	.LVL64:
 523              		.loc 1 170 46 view .LVU158
 524 007c 1B12     		asrs	r3, r3, #8
 525              		.loc 1 170 19 view .LVU159
 526 007e C3F1FF03 		rsb	r3, r3, #255
 527              		.loc 1 170 12 view .LVU160
 528 0082 02FB03F3 		mul	r3, r2, r3
 529              		.loc 1 170 7 view .LVU161
 530 0086 C3F30723 		ubfx	r3, r3, #8, #8
 531              	.LVL65:
 171:lvgl/src/misc/lv_color.c **** 
 172:lvgl/src/misc/lv_color.c ****     switch(region) {
 532              		.loc 1 172 5 is_stmt 1 view .LVU162
 533 008a 0428     		cmp	r0, #4
 534 008c 2ED8     		bhi	.L26
 535 008e DFE800F0 		tbb	[pc, r0]
 536              	.L28:
 537 0092 0E       		.byte	(.L32-.L28)/2
 538 0093 10       		.byte	(.L31-.L28)/2
 539 0094 20       		.byte	(.L30-.L28)/2
 540 0095 23       		.byte	(.L29-.L28)/2
 541 0096 28       		.byte	(.L27-.L28)/2
 542              	.LVL66:
 543 0097 00       		.p2align 1
 544              	.L35:
 162:lvgl/src/misc/lv_color.c ****     }
 545              		.loc 1 162 9 view .LVU163
 546              	.LBB44:
 547              	.LBI44:
 594:lvgl/src/misc/lv_color.h **** {
 548              		.loc 2 594 26 view .LVU164
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 26


 549              	.LBB45:
 596:lvgl/src/misc/lv_color.h **** }
 550              		.loc 2 596 5 view .LVU165
 596:lvgl/src/misc/lv_color.h **** }
 551              		.loc 2 596 39 is_stmt 0 view .LVU166
 552 0098 D308     		lsrs	r3, r2, #3
 553              	.LVL67:
 596:lvgl/src/misc/lv_color.h **** }
 554              		.loc 2 596 39 view .LVU167
 555 009a 9208     		lsrs	r2, r2, #2
 556              	.LVL68:
 596:lvgl/src/misc/lv_color.h **** }
 557              		.loc 2 596 12 view .LVU168
 558 009c 4FF00000 		mov	r0, #0	@ movhi
 559              	.LVL69:
 596:lvgl/src/misc/lv_color.h **** }
 560              		.loc 2 596 12 view .LVU169
 561 00a0 63F30400 		bfi	r0, r3, #0, #5
 562 00a4 62F34A10 		bfi	r0, r2, #5, #6
 563 00a8 63F3CF20 		bfi	r0, r3, #11, #5
 564              	.LVL70:
 596:lvgl/src/misc/lv_color.h **** }
 565              		.loc 2 596 12 view .LVU170
 566              	.LBE45:
 567              	.LBE44:
 162:lvgl/src/misc/lv_color.c ****     }
 568              		.loc 1 162 16 view .LVU171
 569 00ac 0FE0     		b	.L25
 570              	.LVL71:
 571              	.L32:
 572              		.loc 1 172 5 view .LVU172
 573 00ae 9446     		mov	ip, r2
 574              	.LVL72:
 575              		.loc 1 172 5 view .LVU173
 576 00b0 1A46     		mov	r2, r3
 577              	.LVL73:
 578              	.L31:
 173:lvgl/src/misc/lv_color.c ****         case 0:
 174:lvgl/src/misc/lv_color.c ****             r = v;
 175:lvgl/src/misc/lv_color.c ****             g = t;
 176:lvgl/src/misc/lv_color.c ****             b = p;
 177:lvgl/src/misc/lv_color.c ****             break;
 178:lvgl/src/misc/lv_color.c ****         case 1:
 179:lvgl/src/misc/lv_color.c ****             r = q;
 180:lvgl/src/misc/lv_color.c ****             g = v;
 181:lvgl/src/misc/lv_color.c ****             b = p;
 182:lvgl/src/misc/lv_color.c ****             break;
 183:lvgl/src/misc/lv_color.c ****         case 2:
 184:lvgl/src/misc/lv_color.c ****             r = p;
 185:lvgl/src/misc/lv_color.c ****             g = v;
 186:lvgl/src/misc/lv_color.c ****             b = t;
 187:lvgl/src/misc/lv_color.c ****             break;
 188:lvgl/src/misc/lv_color.c ****         case 3:
 189:lvgl/src/misc/lv_color.c ****             r = p;
 190:lvgl/src/misc/lv_color.c ****             g = q;
 191:lvgl/src/misc/lv_color.c ****             b = v;
 192:lvgl/src/misc/lv_color.c ****             break;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 27


 193:lvgl/src/misc/lv_color.c ****         case 4:
 194:lvgl/src/misc/lv_color.c ****             r = t;
 195:lvgl/src/misc/lv_color.c ****             g = p;
 196:lvgl/src/misc/lv_color.c ****             b = v;
 197:lvgl/src/misc/lv_color.c ****             break;
 198:lvgl/src/misc/lv_color.c ****         default:
 199:lvgl/src/misc/lv_color.c ****             r = v;
 200:lvgl/src/misc/lv_color.c ****             g = p;
 201:lvgl/src/misc/lv_color.c ****             b = q;
 202:lvgl/src/misc/lv_color.c ****             break;
 203:lvgl/src/misc/lv_color.c ****     }
 204:lvgl/src/misc/lv_color.c **** 
 205:lvgl/src/misc/lv_color.c ****     lv_color_t result = lv_color_make(r, g, b);
 579              		.loc 1 205 5 is_stmt 1 view .LVU174
 580              	.LBB46:
 581              	.LBI46:
 594:lvgl/src/misc/lv_color.h **** {
 582              		.loc 2 594 26 view .LVU175
 583              	.LBB47:
 596:lvgl/src/misc/lv_color.h **** }
 584              		.loc 2 596 5 view .LVU176
 596:lvgl/src/misc/lv_color.h **** }
 585              		.loc 2 596 39 is_stmt 0 view .LVU177
 586 00b2 CEF3C40E 		ubfx	lr, lr, #3, #5
 587              	.LVL74:
 596:lvgl/src/misc/lv_color.h **** }
 588              		.loc 2 596 39 view .LVU178
 589 00b6 C2F38502 		ubfx	r2, r2, #2, #6
 590              	.LVL75:
 596:lvgl/src/misc/lv_color.h **** }
 591              		.loc 2 596 39 view .LVU179
 592 00ba CCF3C40C 		ubfx	ip, ip, #3, #5
 593              	.LVL76:
 596:lvgl/src/misc/lv_color.h **** }
 594              		.loc 2 596 12 view .LVU180
 595 00be 4FF00000 		mov	r0, #0	@ movhi
 596              	.LVL77:
 596:lvgl/src/misc/lv_color.h **** }
 597              		.loc 2 596 12 view .LVU181
 598 00c2 6EF30400 		bfi	r0, lr, #0, #5
 599 00c6 62F34A10 		bfi	r0, r2, #5, #6
 600 00ca 6CF3CF20 		bfi	r0, ip, #11, #5
 601              	.LVL78:
 596:lvgl/src/misc/lv_color.h **** }
 602              		.loc 2 596 12 view .LVU182
 603              	.LBE47:
 604              	.LBE46:
 206:lvgl/src/misc/lv_color.c ****     return result;
 605              		.loc 1 206 5 is_stmt 1 view .LVU183
 606              	.L25:
 207:lvgl/src/misc/lv_color.c **** }
 607              		.loc 1 207 1 is_stmt 0 view .LVU184
 608 00ce 5DF804FB 		ldr	pc, [sp], #4
 609              	.LVL79:
 610              	.L30:
 184:lvgl/src/misc/lv_color.c ****             g = v;
 611              		.loc 1 184 13 is_stmt 1 view .LVU185
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 28


 185:lvgl/src/misc/lv_color.c ****             b = t;
 612              		.loc 1 185 13 view .LVU186
 186:lvgl/src/misc/lv_color.c ****             break;
 613              		.loc 1 186 13 view .LVU187
 187:lvgl/src/misc/lv_color.c ****         case 3:
 614              		.loc 1 187 13 view .LVU188
 184:lvgl/src/misc/lv_color.c ****             g = v;
 615              		.loc 1 184 15 is_stmt 0 view .LVU189
 616 00d2 F446     		mov	ip, lr
 617              	.LVL80:
 186:lvgl/src/misc/lv_color.c ****             break;
 618              		.loc 1 186 15 view .LVU190
 619 00d4 9E46     		mov	lr, r3
 620              	.LVL81:
 187:lvgl/src/misc/lv_color.c ****         case 3:
 621              		.loc 1 187 13 view .LVU191
 622 00d6 ECE7     		b	.L31
 623              	.LVL82:
 624              	.L29:
 189:lvgl/src/misc/lv_color.c ****             g = q;
 625              		.loc 1 189 13 is_stmt 1 view .LVU192
 190:lvgl/src/misc/lv_color.c ****             b = v;
 626              		.loc 1 190 13 view .LVU193
 191:lvgl/src/misc/lv_color.c ****             break;
 627              		.loc 1 191 13 view .LVU194
 192:lvgl/src/misc/lv_color.c ****         case 4:
 628              		.loc 1 192 13 view .LVU195
 629 00d8 6346     		mov	r3, ip
 630              	.LVL83:
 189:lvgl/src/misc/lv_color.c ****             g = q;
 631              		.loc 1 189 15 is_stmt 0 view .LVU196
 632 00da F446     		mov	ip, lr
 633              	.LVL84:
 191:lvgl/src/misc/lv_color.c ****             break;
 634              		.loc 1 191 15 view .LVU197
 635 00dc 9646     		mov	lr, r2
 636              	.LVL85:
 190:lvgl/src/misc/lv_color.c ****             b = v;
 637              		.loc 1 190 15 view .LVU198
 638 00de 1A46     		mov	r2, r3
 639              	.LVL86:
 192:lvgl/src/misc/lv_color.c ****         case 4:
 640              		.loc 1 192 13 view .LVU199
 641 00e0 E7E7     		b	.L31
 642              	.LVL87:
 643              	.L27:
 194:lvgl/src/misc/lv_color.c ****             g = p;
 644              		.loc 1 194 13 is_stmt 1 view .LVU200
 195:lvgl/src/misc/lv_color.c ****             b = v;
 645              		.loc 1 195 13 view .LVU201
 196:lvgl/src/misc/lv_color.c ****             break;
 646              		.loc 1 196 13 view .LVU202
 197:lvgl/src/misc/lv_color.c ****         default:
 647              		.loc 1 197 13 view .LVU203
 648 00e2 1146     		mov	r1, r2
 195:lvgl/src/misc/lv_color.c ****             b = v;
 649              		.loc 1 195 15 is_stmt 0 view .LVU204
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 29


 650 00e4 7246     		mov	r2, lr
 651              	.LVL88:
 196:lvgl/src/misc/lv_color.c ****             break;
 652              		.loc 1 196 15 view .LVU205
 653 00e6 8E46     		mov	lr, r1
 654              	.LVL89:
 194:lvgl/src/misc/lv_color.c ****             g = p;
 655              		.loc 1 194 15 view .LVU206
 656 00e8 9C46     		mov	ip, r3
 657              	.LVL90:
 197:lvgl/src/misc/lv_color.c ****         default:
 658              		.loc 1 197 13 view .LVU207
 659 00ea E2E7     		b	.L31
 660              	.LVL91:
 661              	.L26:
 199:lvgl/src/misc/lv_color.c ****             g = p;
 662              		.loc 1 199 13 is_stmt 1 view .LVU208
 200:lvgl/src/misc/lv_color.c ****             b = q;
 663              		.loc 1 200 13 view .LVU209
 201:lvgl/src/misc/lv_color.c ****             break;
 664              		.loc 1 201 13 view .LVU210
 202:lvgl/src/misc/lv_color.c ****     }
 665              		.loc 1 202 13 view .LVU211
 666 00ec 6346     		mov	r3, ip
 667              	.LVL92:
 199:lvgl/src/misc/lv_color.c ****             g = p;
 668              		.loc 1 199 15 is_stmt 0 view .LVU212
 669 00ee 9446     		mov	ip, r2
 670              	.LVL93:
 200:lvgl/src/misc/lv_color.c ****             b = q;
 671              		.loc 1 200 15 view .LVU213
 672 00f0 7246     		mov	r2, lr
 673              	.LVL94:
 201:lvgl/src/misc/lv_color.c ****             break;
 674              		.loc 1 201 15 view .LVU214
 675 00f2 9E46     		mov	lr, r3
 676              	.LVL95:
 202:lvgl/src/misc/lv_color.c ****     }
 677              		.loc 1 202 13 view .LVU215
 678 00f4 DDE7     		b	.L31
 679              	.L37:
 680 00f6 00BF     		.align	2
 681              	.L36:
 682 00f8 176CC116 		.word	381774871
 683 00fc 1F85EB51 		.word	1374389535
 684 0100 83BEA02F 		.word	799063683
 685              		.cfi_endproc
 686              	.LFE22:
 688              		.section	.text.lv_color_rgb_to_hsv,"ax",%progbits
 689              		.align	1
 690              		.global	lv_color_rgb_to_hsv
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	lv_color_rgb_to_hsv:
 696              	.LVL96:
 697              	.LFB23:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 30


 208:lvgl/src/misc/lv_color.c **** 
 209:lvgl/src/misc/lv_color.c **** /**
 210:lvgl/src/misc/lv_color.c ****  * Convert a 32-bit RGB color to HSV
 211:lvgl/src/misc/lv_color.c ****  * @param r8 8-bit red
 212:lvgl/src/misc/lv_color.c ****  * @param g8 8-bit green
 213:lvgl/src/misc/lv_color.c ****  * @param b8 8-bit blue
 214:lvgl/src/misc/lv_color.c ****  * @return the given RGB color in HSV
 215:lvgl/src/misc/lv_color.c ****  */
 216:lvgl/src/misc/lv_color.c **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8)
 217:lvgl/src/misc/lv_color.c **** {
 698              		.loc 1 217 1 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		.loc 1 217 1 is_stmt 0 view .LVU217
 703 0000 70B5     		push	{r4, r5, r6, lr}
 704              	.LCFI5:
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 4, -16
 707              		.cfi_offset 5, -12
 708              		.cfi_offset 6, -8
 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              	.LCFI6:
 712              		.cfi_def_cfa_offset 24
 218:lvgl/src/misc/lv_color.c ****     uint16_t r = ((uint32_t)r8 << 10) / 255;
 713              		.loc 1 218 5 is_stmt 1 view .LVU218
 714              		.loc 1 218 32 is_stmt 0 view .LVU219
 715 0004 8002     		lsls	r0, r0, #10
 716              	.LVL97:
 717              		.loc 1 218 39 view .LVU220
 718 0006 484E     		ldr	r6, .L60
 719 0008 A6FB000E 		umull	r0, lr, r6, r0
 720 000c 4FEADE1C 		lsr	ip, lr, #7
 721              		.loc 1 218 14 view .LVU221
 722 0010 6446     		mov	r4, ip
 723              	.LVL98:
 219:lvgl/src/misc/lv_color.c ****     uint16_t g = ((uint32_t)g8 << 10) / 255;
 724              		.loc 1 219 5 is_stmt 1 view .LVU222
 725              		.loc 1 219 32 is_stmt 0 view .LVU223
 726 0012 8B02     		lsls	r3, r1, #10
 727              		.loc 1 219 39 view .LVU224
 728 0014 A6FB0313 		umull	r1, r3, r6, r3
 729              	.LVL99:
 730              		.loc 1 219 39 view .LVU225
 731 0018 DD09     		lsrs	r5, r3, #7
 732              		.loc 1 219 14 view .LVU226
 733 001a 2B46     		mov	r3, r5
 734              	.LVL100:
 220:lvgl/src/misc/lv_color.c ****     uint16_t b = ((uint32_t)b8 << 10) / 255;
 735              		.loc 1 220 5 is_stmt 1 view .LVU227
 736              		.loc 1 220 32 is_stmt 0 view .LVU228
 737 001c 9202     		lsls	r2, r2, #10
 738              	.LVL101:
 739              		.loc 1 220 39 view .LVU229
 740 001e A6FB0262 		umull	r6, r2, r6, r2
 741 0022 D609     		lsrs	r6, r2, #7
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 31


 742              		.loc 1 220 14 view .LVU230
 743 0024 3246     		mov	r2, r6
 744              	.LVL102:
 221:lvgl/src/misc/lv_color.c **** 
 222:lvgl/src/misc/lv_color.c ****     uint16_t rgbMin = r < g ? (r < b ? r : b) : (g < b ? g : b);
 745              		.loc 1 222 5 is_stmt 1 view .LVU231
 746              		.loc 1 222 14 is_stmt 0 view .LVU232
 747 0026 B5EBDE1F 		cmp	r5, lr, lsr #7
 748 002a 2BD9     		bls	.L39
 749              		.loc 1 222 14 discriminator 1 view .LVU233
 750 002c 6146     		mov	r1, ip
 751 002e B445     		cmp	ip, r6
 752 0030 28BF     		it	cs
 753 0032 3146     		movcs	r1, r6
 754 0034 89B2     		uxth	r1, r1
 755              	.L40:
 756              	.LVL103:
 223:lvgl/src/misc/lv_color.c ****     uint16_t rgbMax = r > g ? (r > b ? r : b) : (g > b ? g : b);
 757              		.loc 1 223 5 is_stmt 1 discriminator 4 view .LVU234
 758              		.loc 1 223 14 is_stmt 0 discriminator 4 view .LVU235
 759 0036 9C42     		cmp	r4, r3
 760 0038 2AD9     		bls	.L41
 761              		.loc 1 223 14 discriminator 1 view .LVU236
 762 003a 2046     		mov	r0, r4
 763 003c 9442     		cmp	r4, r2
 764 003e 38BF     		it	cc
 765 0040 1046     		movcc	r0, r2
 766 0042 80B2     		uxth	r0, r0
 767              	.L42:
 768              	.LVL104:
 224:lvgl/src/misc/lv_color.c **** 
 225:lvgl/src/misc/lv_color.c ****     lv_color_hsv_t hsv;
 769              		.loc 1 225 5 is_stmt 1 discriminator 4 view .LVU237
 226:lvgl/src/misc/lv_color.c **** 
 227:lvgl/src/misc/lv_color.c ****     // https://en.wikipedia.org/wiki/HSL_and_HSV#Lightness
 228:lvgl/src/misc/lv_color.c ****     hsv.v = (100 * rgbMax) >> 10;
 770              		.loc 1 228 5 discriminator 4 view .LVU238
 771              		.loc 1 228 18 is_stmt 0 discriminator 4 view .LVU239
 772 0044 4FF0640E 		mov	lr, #100
 773 0048 0EFB00FE 		mul	lr, lr, r0
 774              		.loc 1 228 28 discriminator 4 view .LVU240
 775 004c 4FEAAE2E 		asr	lr, lr, #10
 776              		.loc 1 228 11 discriminator 4 view .LVU241
 777 0050 8DF803E0 		strb	lr, [sp, #3]
 229:lvgl/src/misc/lv_color.c **** 
 230:lvgl/src/misc/lv_color.c ****     int32_t delta = rgbMax - rgbMin;
 778              		.loc 1 230 5 is_stmt 1 discriminator 4 view .LVU242
 779              		.loc 1 230 13 is_stmt 0 discriminator 4 view .LVU243
 780 0054 411A     		subs	r1, r0, r1
 781              	.LVL105:
 231:lvgl/src/misc/lv_color.c ****     if(delta < 3) {
 782              		.loc 1 231 5 is_stmt 1 discriminator 4 view .LVU244
 783              		.loc 1 231 7 is_stmt 0 discriminator 4 view .LVU245
 784 0056 0229     		cmp	r1, #2
 785 0058 20DD     		ble	.L54
 232:lvgl/src/misc/lv_color.c ****         hsv.h = 0;
 233:lvgl/src/misc/lv_color.c ****         hsv.s = 0;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 32


 234:lvgl/src/misc/lv_color.c ****         return hsv;
 235:lvgl/src/misc/lv_color.c ****     }
 236:lvgl/src/misc/lv_color.c **** 
 237:lvgl/src/misc/lv_color.c ****     // https://en.wikipedia.org/wiki/HSL_and_HSV#Saturation
 238:lvgl/src/misc/lv_color.c ****     hsv.s = 100 * delta / rgbMax;
 786              		.loc 1 238 5 is_stmt 1 view .LVU246
 787              		.loc 1 238 17 is_stmt 0 view .LVU247
 788 005a 4FF0640E 		mov	lr, #100
 789 005e 0EFB01FE 		mul	lr, lr, r1
 790              		.loc 1 238 25 view .LVU248
 791 0062 9EFBF0FE 		sdiv	lr, lr, r0
 792              		.loc 1 238 11 view .LVU249
 793 0066 5FFA8EFE 		uxtb	lr, lr
 794 006a 8DF802E0 		strb	lr, [sp, #2]
 239:lvgl/src/misc/lv_color.c ****     if(hsv.s < 3) {
 795              		.loc 1 239 5 is_stmt 1 view .LVU250
 796              		.loc 1 239 7 is_stmt 0 view .LVU251
 797 006e BEF1020F 		cmp	lr, #2
 798 0072 1BD9     		bls	.L55
 240:lvgl/src/misc/lv_color.c ****         hsv.h = 0;
 241:lvgl/src/misc/lv_color.c ****         return hsv;
 242:lvgl/src/misc/lv_color.c ****     }
 243:lvgl/src/misc/lv_color.c **** 
 244:lvgl/src/misc/lv_color.c ****     // https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma
 245:lvgl/src/misc/lv_color.c ****     int32_t h;
 799              		.loc 1 245 5 is_stmt 1 view .LVU252
 246:lvgl/src/misc/lv_color.c ****     if(rgbMax == r)
 800              		.loc 1 246 5 view .LVU253
 801              		.loc 1 246 7 is_stmt 0 view .LVU254
 802 0074 A042     		cmp	r0, r4
 803 0076 1FD0     		beq	.L56
 247:lvgl/src/misc/lv_color.c ****         h = (((g - b) << 10) / delta) + (g < b ? (6 << 10) : 0); // between yellow & magenta
 248:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 804              		.loc 1 248 10 is_stmt 1 view .LVU255
 805              		.loc 1 248 12 is_stmt 0 view .LVU256
 806 0078 9842     		cmp	r0, r3
 807 007a 3FD0     		beq	.L57
 249:lvgl/src/misc/lv_color.c ****         h = (((b - r) << 10) / delta) + (2 << 10); // between cyan & yellow
 250:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 808              		.loc 1 250 10 is_stmt 1 view .LVU257
 809              		.loc 1 250 12 is_stmt 0 view .LVU258
 810 007c 9042     		cmp	r0, r2
 811 007e 46D0     		beq	.L58
 251:lvgl/src/misc/lv_color.c ****         h = (((r - g) << 10) / delta) + (4 << 10); // between magenta & cyan
 252:lvgl/src/misc/lv_color.c ****     else
 253:lvgl/src/misc/lv_color.c ****         h = 0;
 812              		.loc 1 253 11 view .LVU259
 813 0080 0023     		movs	r3, #0
 814 0082 24E0     		b	.L48
 815              	.LVL106:
 816              	.L39:
 222:lvgl/src/misc/lv_color.c ****     uint16_t rgbMax = r > g ? (r > b ? r : b) : (g > b ? g : b);
 817              		.loc 1 222 14 discriminator 2 view .LVU260
 818 0084 2946     		mov	r1, r5
 819 0086 B542     		cmp	r5, r6
 820 0088 28BF     		it	cs
 821 008a 3146     		movcs	r1, r6
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 33


 822 008c 89B2     		uxth	r1, r1
 823 008e D2E7     		b	.L40
 824              	.LVL107:
 825              	.L41:
 223:lvgl/src/misc/lv_color.c **** 
 826              		.loc 1 223 14 discriminator 2 view .LVU261
 827 0090 1846     		mov	r0, r3
 828 0092 9342     		cmp	r3, r2
 829 0094 38BF     		it	cc
 830 0096 1046     		movcc	r0, r2
 831 0098 80B2     		uxth	r0, r0
 832 009a D3E7     		b	.L42
 833              	.LVL108:
 834              	.L54:
 232:lvgl/src/misc/lv_color.c ****         hsv.s = 0;
 835              		.loc 1 232 9 is_stmt 1 view .LVU262
 232:lvgl/src/misc/lv_color.c ****         hsv.s = 0;
 836              		.loc 1 232 15 is_stmt 0 view .LVU263
 837 009c 0023     		movs	r3, #0
 838 009e ADF80030 		strh	r3, [sp]	@ movhi
 233:lvgl/src/misc/lv_color.c ****         return hsv;
 839              		.loc 1 233 9 is_stmt 1 view .LVU264
 233:lvgl/src/misc/lv_color.c ****         return hsv;
 840              		.loc 1 233 15 is_stmt 0 view .LVU265
 841 00a2 8DF80230 		strb	r3, [sp, #2]
 234:lvgl/src/misc/lv_color.c ****     }
 842              		.loc 1 234 9 is_stmt 1 view .LVU266
 234:lvgl/src/misc/lv_color.c ****     }
 843              		.loc 1 234 16 is_stmt 0 view .LVU267
 844 00a6 009B     		ldr	r3, [sp]
 845 00a8 0193     		str	r3, [sp, #4]
 846 00aa 1AE0     		b	.L44
 847              	.L55:
 240:lvgl/src/misc/lv_color.c ****         return hsv;
 848              		.loc 1 240 9 is_stmt 1 view .LVU268
 240:lvgl/src/misc/lv_color.c ****         return hsv;
 849              		.loc 1 240 15 is_stmt 0 view .LVU269
 850 00ac 0023     		movs	r3, #0
 851 00ae ADF80030 		strh	r3, [sp]	@ movhi
 241:lvgl/src/misc/lv_color.c ****     }
 852              		.loc 1 241 9 is_stmt 1 view .LVU270
 241:lvgl/src/misc/lv_color.c ****     }
 853              		.loc 1 241 16 is_stmt 0 view .LVU271
 854 00b2 009B     		ldr	r3, [sp]
 855 00b4 0193     		str	r3, [sp, #4]
 856 00b6 14E0     		b	.L44
 857              	.L56:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 858              		.loc 1 247 9 is_stmt 1 view .LVU272
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 859              		.loc 1 247 18 is_stmt 0 view .LVU273
 860 00b8 A8B2     		uxth	r0, r5
 861              	.LVL109:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 862              		.loc 1 247 18 view .LVU274
 863 00ba B6B2     		uxth	r6, r6
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 34


 864              		.loc 1 247 18 view .LVU275
 865 00bc 801B     		subs	r0, r0, r6
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 866              		.loc 1 247 23 view .LVU276
 867 00be 8002     		lsls	r0, r0, #10
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 868              		.loc 1 247 30 view .LVU277
 869 00c0 90FBF1F1 		sdiv	r1, r0, r1
 870              	.LVL110:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 871              		.loc 1 247 60 view .LVU278
 872 00c4 9342     		cmp	r3, r2
 873 00c6 17D2     		bcs	.L51
 874 00c8 4FF4C053 		mov	r3, #6144
 875              	.L47:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 876              		.loc 1 247 11 discriminator 4 view .LVU279
 877 00cc 0B44     		add	r3, r3, r1
 878              	.LVL111:
 879              	.L48:
 254:lvgl/src/misc/lv_color.c ****     h *= 60;
 880              		.loc 1 254 5 is_stmt 1 view .LVU280
 881              		.loc 1 254 7 is_stmt 0 view .LVU281
 882 00ce C3EB0313 		rsb	r3, r3, r3, lsl #4
 883              	.LVL112:
 255:lvgl/src/misc/lv_color.c ****     h >>= 10;
 884              		.loc 1 255 5 is_stmt 1 view .LVU282
 885              		.loc 1 255 7 is_stmt 0 view .LVU283
 886 00d2 43F31523 		sbfx	r3, r3, #8, #22
 887              	.LVL113:
 256:lvgl/src/misc/lv_color.c ****     if(h < 0) h += 360;
 888              		.loc 1 256 5 is_stmt 1 view .LVU284
 889              		.loc 1 256 7 is_stmt 0 view .LVU285
 890 00d6 002B     		cmp	r3, #0
 891 00d8 22DB     		blt	.L59
 892              	.L50:
 257:lvgl/src/misc/lv_color.c **** 
 258:lvgl/src/misc/lv_color.c ****     hsv.h = h;
 893              		.loc 1 258 5 is_stmt 1 view .LVU286
 894              		.loc 1 258 11 is_stmt 0 view .LVU287
 895 00da ADF80030 		strh	r3, [sp]	@ movhi
 259:lvgl/src/misc/lv_color.c ****     return hsv;
 896              		.loc 1 259 5 is_stmt 1 view .LVU288
 897              		.loc 1 259 12 is_stmt 0 view .LVU289
 898 00de 009B     		ldr	r3, [sp]
 899              	.LVL114:
 900              		.loc 1 259 12 view .LVU290
 901 00e0 0193     		str	r3, [sp, #4]
 902              	.LVL115:
 903              	.L44:
 260:lvgl/src/misc/lv_color.c **** }
 904              		.loc 1 260 1 view .LVU291
 905 00e2 0020     		movs	r0, #0
 906 00e4 BDF80430 		ldrh	r3, [sp, #4]
 907 00e8 63F30F00 		bfi	r0, r3, #0, #16
 908 00ec BDF80630 		ldrh	r3, [sp, #6]
 909 00f0 63F31F40 		bfi	r0, r3, #16, #16
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 35


 910 00f4 02B0     		add	sp, sp, #8
 911              	.LCFI7:
 912              		.cfi_remember_state
 913              		.cfi_def_cfa_offset 16
 914              		@ sp needed
 915 00f6 70BD     		pop	{r4, r5, r6, pc}
 916              	.LVL116:
 917              	.L51:
 918              	.LCFI8:
 919              		.cfi_restore_state
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 920              		.loc 1 247 60 view .LVU292
 921 00f8 0023     		movs	r3, #0
 922 00fa E7E7     		b	.L47
 923              	.LVL117:
 924              	.L57:
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 925              		.loc 1 249 9 is_stmt 1 view .LVU293
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 926              		.loc 1 249 18 is_stmt 0 view .LVU294
 927 00fc B3B2     		uxth	r3, r6
 928 00fe A3EB0C03 		sub	r3, r3, ip
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 929              		.loc 1 249 23 view .LVU295
 930 0102 9B02     		lsls	r3, r3, #10
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 931              		.loc 1 249 30 view .LVU296
 932 0104 93FBF1F3 		sdiv	r3, r3, r1
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 933              		.loc 1 249 11 view .LVU297
 934 0108 03F50063 		add	r3, r3, #2048
 935              	.LVL118:
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 936              		.loc 1 249 11 view .LVU298
 937 010c DFE7     		b	.L48
 938              	.LVL119:
 939              	.L58:
 251:lvgl/src/misc/lv_color.c ****     else
 940              		.loc 1 251 9 is_stmt 1 view .LVU299
 251:lvgl/src/misc/lv_color.c ****     else
 941              		.loc 1 251 18 is_stmt 0 view .LVU300
 942 010e ADB2     		uxth	r5, r5
 251:lvgl/src/misc/lv_color.c ****     else
 943              		.loc 1 251 18 view .LVU301
 944 0110 ACEB0503 		sub	r3, ip, r5
 251:lvgl/src/misc/lv_color.c ****     else
 945              		.loc 1 251 23 view .LVU302
 946 0114 9B02     		lsls	r3, r3, #10
 251:lvgl/src/misc/lv_color.c ****     else
 947              		.loc 1 251 30 view .LVU303
 948 0116 93FBF1F3 		sdiv	r3, r3, r1
 251:lvgl/src/misc/lv_color.c ****     else
 949              		.loc 1 251 11 view .LVU304
 950 011a 03F58053 		add	r3, r3, #4096
 951              	.LVL120:
 251:lvgl/src/misc/lv_color.c ****     else
 952              		.loc 1 251 11 view .LVU305
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 36


 953 011e D6E7     		b	.L48
 954              	.LVL121:
 955              	.L59:
 256:lvgl/src/misc/lv_color.c **** 
 956              		.loc 1 256 15 is_stmt 1 discriminator 1 view .LVU306
 256:lvgl/src/misc/lv_color.c **** 
 957              		.loc 1 256 17 is_stmt 0 discriminator 1 view .LVU307
 958 0120 03F5B473 		add	r3, r3, #360
 959              	.LVL122:
 256:lvgl/src/misc/lv_color.c **** 
 960              		.loc 1 256 17 discriminator 1 view .LVU308
 961 0124 D9E7     		b	.L50
 962              	.L61:
 963 0126 00BF     		.align	2
 964              	.L60:
 965 0128 81808080 		.word	-2139062143
 966              		.cfi_endproc
 967              	.LFE23:
 969              		.section	.text.lv_color_to_hsv,"ax",%progbits
 970              		.align	1
 971              		.global	lv_color_to_hsv
 972              		.syntax unified
 973              		.thumb
 974              		.thumb_func
 976              	lv_color_to_hsv:
 977              	.LVL123:
 978              	.LFB24:
 261:lvgl/src/misc/lv_color.c **** 
 262:lvgl/src/misc/lv_color.c **** /**
 263:lvgl/src/misc/lv_color.c ****  * Convert a color to HSV
 264:lvgl/src/misc/lv_color.c ****  * @param color color
 265:lvgl/src/misc/lv_color.c ****  * @return the given color in HSV
 266:lvgl/src/misc/lv_color.c ****  */
 267:lvgl/src/misc/lv_color.c **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color)
 268:lvgl/src/misc/lv_color.c **** {
 979              		.loc 1 268 1 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 8
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		.loc 1 268 1 is_stmt 0 view .LVU310
 984 0000 00B5     		push	{lr}
 985              	.LCFI9:
 986              		.cfi_def_cfa_offset 4
 987              		.cfi_offset 14, -4
 988 0002 83B0     		sub	sp, sp, #12
 989              	.LCFI10:
 990              		.cfi_def_cfa_offset 16
 269:lvgl/src/misc/lv_color.c ****     lv_color32_t color32;
 991              		.loc 1 269 5 is_stmt 1 view .LVU311
 270:lvgl/src/misc/lv_color.c ****     color32.full = lv_color_to32(color);
 992              		.loc 1 270 5 view .LVU312
 993              		.loc 1 270 20 is_stmt 0 view .LVU313
 994 0004 FFF7FEFF 		bl	lv_color_to32
 995              	.LVL124:
 271:lvgl/src/misc/lv_color.c ****     return lv_color_rgb_to_hsv(color32.ch.red, color32.ch.green, color32.ch.blue);
 996              		.loc 1 271 5 is_stmt 1 view .LVU314
 997              		.loc 1 271 12 is_stmt 0 view .LVU315
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 37


 998 0008 C2B2     		uxtb	r2, r0
 999 000a C0F30721 		ubfx	r1, r0, #8, #8
 1000 000e C0F30740 		ubfx	r0, r0, #16, #8
 1001 0012 FFF7FEFF 		bl	lv_color_rgb_to_hsv
 1002              	.LVL125:
 1003 0016 0190     		str	r0, [sp, #4]
 1004 0018 0020     		movs	r0, #0
 1005 001a BDF80430 		ldrh	r3, [sp, #4]
 1006 001e 63F30F00 		bfi	r0, r3, #0, #16
 1007 0022 BDF80630 		ldrh	r3, [sp, #6]
 1008 0026 63F31F40 		bfi	r0, r3, #16, #16
 272:lvgl/src/misc/lv_color.c **** }
 1009              		.loc 1 272 1 view .LVU316
 1010 002a 03B0     		add	sp, sp, #12
 1011              	.LCFI11:
 1012              		.cfi_def_cfa_offset 4
 1013              		@ sp needed
 1014 002c 5DF804FB 		ldr	pc, [sp], #4
 1015              		.cfi_endproc
 1016              	.LFE24:
 1018              		.section	.text.lv_palette_main,"ax",%progbits
 1019              		.align	1
 1020              		.global	lv_palette_main
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1025              	lv_palette_main:
 1026              	.LVL126:
 1027              	.LFB25:
 273:lvgl/src/misc/lv_color.c **** 
 274:lvgl/src/misc/lv_color.c **** lv_color_t lv_palette_main(lv_palette_t p)
 275:lvgl/src/misc/lv_color.c **** {
 1028              		.loc 1 275 1 is_stmt 1 view -0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 276:lvgl/src/misc/lv_color.c ****     static const lv_color_t colors[] = {
 1033              		.loc 1 276 5 view .LVU318
 277:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0xF4, 0x43, 0x36), LV_COLOR_MAKE(0xE9, 0x1E, 0x63), LV_COLOR_MAKE(0x9C, 0x27,
 278:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0x3F, 0x51, 0xB5), LV_COLOR_MAKE(0x21, 0x96, 0xF3), LV_COLOR_MAKE(0x03, 0xA9,
 279:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0x00, 0x96, 0x88), LV_COLOR_MAKE(0x4C, 0xAF, 0x50), LV_COLOR_MAKE(0x8B, 0xC3,
 280:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0xFF, 0xEB, 0x3B), LV_COLOR_MAKE(0xFF, 0xC1, 0x07), LV_COLOR_MAKE(0xFF, 0x98,
 281:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0x79, 0x55, 0x48), LV_COLOR_MAKE(0x60, 0x7D, 0x8B), LV_COLOR_MAKE(0x9E, 0x9E,
 282:lvgl/src/misc/lv_color.c ****     };
 283:lvgl/src/misc/lv_color.c **** 
 284:lvgl/src/misc/lv_color.c ****     if(p >= _LV_PALETTE_LAST) {
 1034              		.loc 1 284 5 view .LVU319
 1035              		.loc 1 284 7 is_stmt 0 view .LVU320
 1036 0000 1228     		cmp	r0, #18
 1037 0002 03D8     		bhi	.L67
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 286:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 287:lvgl/src/misc/lv_color.c ****     }
 288:lvgl/src/misc/lv_color.c **** 
 289:lvgl/src/misc/lv_color.c ****     return colors[p];
 1038              		.loc 1 289 5 is_stmt 1 view .LVU321
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 38


 1039              		.loc 1 289 18 is_stmt 0 view .LVU322
 1040 0004 064B     		ldr	r3, .L68
 1041 0006 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 1042              	.LVL127:
 290:lvgl/src/misc/lv_color.c **** 
 291:lvgl/src/misc/lv_color.c **** }
 1043              		.loc 1 291 1 view .LVU323
 1044 000a 7047     		bx	lr
 1045              	.LVL128:
 1046              	.L67:
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 1047              		.loc 1 285 9 is_stmt 1 view .LVU324
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 1048              		.loc 1 285 9 view .LVU325
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 1049              		.loc 1 285 9 view .LVU326
 286:lvgl/src/misc/lv_color.c ****     }
 1050              		.loc 1 286 9 view .LVU327
 1051              	.LBB48:
 1052              	.LBI48:
 699:lvgl/src/misc/lv_color.h **** {
 1053              		.loc 2 699 26 view .LVU328
 1054              		.loc 2 701 5 view .LVU329
 1055              	.LBB49:
 1056              	.LBI49:
 594:lvgl/src/misc/lv_color.h **** {
 1057              		.loc 2 594 26 view .LVU330
 1058              	.LBB50:
 596:lvgl/src/misc/lv_color.h **** }
 1059              		.loc 2 596 5 view .LVU331
 596:lvgl/src/misc/lv_color.h **** }
 1060              		.loc 2 596 12 is_stmt 0 view .LVU332
 1061 000c 4FF00000 		mov	r0, #0	@ movhi
 1062              	.LVL129:
 596:lvgl/src/misc/lv_color.h **** }
 1063              		.loc 2 596 12 view .LVU333
 1064 0010 6FF30400 		bfc	r0, #0, #5
 1065 0014 6FF34A10 		bfc	r0, #5, #6
 1066 0018 6FF3CF20 		bfc	r0, #11, #5
 1067              	.LVL130:
 596:lvgl/src/misc/lv_color.h **** }
 1068              		.loc 2 596 12 view .LVU334
 1069              	.LBE50:
 1070              	.LBE49:
 1071              	.LBE48:
 286:lvgl/src/misc/lv_color.c ****     }
 1072              		.loc 1 286 16 view .LVU335
 1073 001c 7047     		bx	lr
 1074              	.L69:
 1075 001e 00BF     		.align	2
 1076              	.L68:
 1077 0020 00000000 		.word	colors.2
 1078              		.cfi_endproc
 1079              	.LFE25:
 1081              		.section	.text.lv_palette_lighten,"ax",%progbits
 1082              		.align	1
 1083              		.global	lv_palette_lighten
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 39


 1084              		.syntax unified
 1085              		.thumb
 1086              		.thumb_func
 1088              	lv_palette_lighten:
 1089              	.LVL131:
 1090              	.LFB26:
 292:lvgl/src/misc/lv_color.c **** 
 293:lvgl/src/misc/lv_color.c **** lv_color_t lv_palette_lighten(lv_palette_t p, uint8_t lvl)
 294:lvgl/src/misc/lv_color.c **** {
 1091              		.loc 1 294 1 is_stmt 1 view -0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 0
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095              		@ link register save eliminated.
 295:lvgl/src/misc/lv_color.c ****     static const lv_color_t colors[][5] = {
 1096              		.loc 1 295 5 view .LVU337
 296:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xEF, 0x53, 0x50), LV_COLOR_MAKE(0xE5, 0x73, 0x73), LV_COLOR_MAKE(0xEF, 0x9A
 297:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xEC, 0x40, 0x7A), LV_COLOR_MAKE(0xF0, 0x62, 0x92), LV_COLOR_MAKE(0xF4, 0x8F
 298:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xAB, 0x47, 0xBC), LV_COLOR_MAKE(0xBA, 0x68, 0xC8), LV_COLOR_MAKE(0xCE, 0x93
 299:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x7E, 0x57, 0xC2), LV_COLOR_MAKE(0x95, 0x75, 0xCD), LV_COLOR_MAKE(0xB3, 0x9D
 300:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x5C, 0x6B, 0xC0), LV_COLOR_MAKE(0x79, 0x86, 0xCB), LV_COLOR_MAKE(0x9F, 0xA8
 301:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x42, 0xA5, 0xF5), LV_COLOR_MAKE(0x64, 0xB5, 0xF6), LV_COLOR_MAKE(0x90, 0xCA
 302:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x29, 0xB6, 0xF6), LV_COLOR_MAKE(0x4F, 0xC3, 0xF7), LV_COLOR_MAKE(0x81, 0xD4
 303:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x26, 0xC6, 0xDA), LV_COLOR_MAKE(0x4D, 0xD0, 0xE1), LV_COLOR_MAKE(0x80, 0xDE
 304:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x26, 0xA6, 0x9A), LV_COLOR_MAKE(0x4D, 0xB6, 0xAC), LV_COLOR_MAKE(0x80, 0xCB
 305:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x66, 0xBB, 0x6A), LV_COLOR_MAKE(0x81, 0xC7, 0x84), LV_COLOR_MAKE(0xA5, 0xD6
 306:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x9C, 0xCC, 0x65), LV_COLOR_MAKE(0xAE, 0xD5, 0x81), LV_COLOR_MAKE(0xC5, 0xE1
 307:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xD4, 0xE1, 0x57), LV_COLOR_MAKE(0xDC, 0xE7, 0x75), LV_COLOR_MAKE(0xE6, 0xEE
 308:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xEE, 0x58), LV_COLOR_MAKE(0xFF, 0xF1, 0x76), LV_COLOR_MAKE(0xFF, 0xF5
 309:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xCA, 0x28), LV_COLOR_MAKE(0xFF, 0xD5, 0x4F), LV_COLOR_MAKE(0xFF, 0xE0
 310:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xA7, 0x26), LV_COLOR_MAKE(0xFF, 0xB7, 0x4D), LV_COLOR_MAKE(0xFF, 0xCC
 311:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0x70, 0x43), LV_COLOR_MAKE(0xFF, 0x8A, 0x65), LV_COLOR_MAKE(0xFF, 0xAB
 312:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x8D, 0x6E, 0x63), LV_COLOR_MAKE(0xA1, 0x88, 0x7F), LV_COLOR_MAKE(0xBC, 0xAA
 313:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x78, 0x90, 0x9C), LV_COLOR_MAKE(0x90, 0xA4, 0xAE), LV_COLOR_MAKE(0xB0, 0xBE
 314:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xBD, 0xBD, 0xBD), LV_COLOR_MAKE(0xE0, 0xE0, 0xE0), LV_COLOR_MAKE(0xEE, 0xEE
 315:lvgl/src/misc/lv_color.c ****     };
 316:lvgl/src/misc/lv_color.c **** 
 317:lvgl/src/misc/lv_color.c ****     if(p >= _LV_PALETTE_LAST) {
 1097              		.loc 1 317 5 view .LVU338
 1098              		.loc 1 317 7 is_stmt 0 view .LVU339
 1099 0000 1228     		cmp	r0, #18
 1100 0002 0AD8     		bhi	.L74
 318:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 319:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 320:lvgl/src/misc/lv_color.c ****     }
 321:lvgl/src/misc/lv_color.c **** 
 322:lvgl/src/misc/lv_color.c ****     if(lvl == 0 || lvl > 5) {
 1101              		.loc 1 322 5 is_stmt 1 view .LVU340
 1102              		.loc 1 322 17 is_stmt 0 view .LVU341
 1103 0004 0139     		subs	r1, r1, #1
 1104              	.LVL132:
 1105              		.loc 1 322 17 view .LVU342
 1106 0006 C9B2     		uxtb	r1, r1
 1107              		.loc 1 322 7 view .LVU343
 1108 0008 0429     		cmp	r1, #4
 1109 000a 0FD8     		bhi	.L75
 323:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid level: %d. Must be 1..5", lvl);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 40


 324:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 325:lvgl/src/misc/lv_color.c ****     }
 326:lvgl/src/misc/lv_color.c **** 
 327:lvgl/src/misc/lv_color.c ****     lvl--;
 1110              		.loc 1 327 5 is_stmt 1 view .LVU344
 1111              	.LVL133:
 328:lvgl/src/misc/lv_color.c **** 
 329:lvgl/src/misc/lv_color.c ****     return colors[p][lvl];
 1112              		.loc 1 329 5 view .LVU345
 1113              		.loc 1 329 21 is_stmt 0 view .LVU346
 1114 000c 00EB8000 		add	r0, r0, r0, lsl #2
 1115              	.LVL134:
 1116              		.loc 1 329 21 view .LVU347
 1117 0010 0844     		add	r0, r0, r1
 1118 0012 0B4B     		ldr	r3, .L76
 1119 0014 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 330:lvgl/src/misc/lv_color.c **** }
 1120              		.loc 1 330 1 view .LVU348
 1121 0018 7047     		bx	lr
 1122              	.LVL135:
 1123              	.L74:
 318:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1124              		.loc 1 318 9 is_stmt 1 view .LVU349
 318:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1125              		.loc 1 318 9 view .LVU350
 318:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1126              		.loc 1 318 9 view .LVU351
 319:lvgl/src/misc/lv_color.c ****     }
 1127              		.loc 1 319 9 view .LVU352
 1128              	.LBB51:
 1129              	.LBI51:
 699:lvgl/src/misc/lv_color.h **** {
 1130              		.loc 2 699 26 view .LVU353
 1131              		.loc 2 701 5 view .LVU354
 1132              	.LBB52:
 1133              	.LBI52:
 594:lvgl/src/misc/lv_color.h **** {
 1134              		.loc 2 594 26 view .LVU355
 1135              	.LBB53:
 596:lvgl/src/misc/lv_color.h **** }
 1136              		.loc 2 596 5 view .LVU356
 596:lvgl/src/misc/lv_color.h **** }
 1137              		.loc 2 596 12 is_stmt 0 view .LVU357
 1138 001a 4FF00000 		mov	r0, #0	@ movhi
 1139              	.LVL136:
 596:lvgl/src/misc/lv_color.h **** }
 1140              		.loc 2 596 12 view .LVU358
 1141 001e 6FF30400 		bfc	r0, #0, #5
 1142 0022 6FF34A10 		bfc	r0, #5, #6
 1143 0026 6FF3CF20 		bfc	r0, #11, #5
 1144              	.LVL137:
 596:lvgl/src/misc/lv_color.h **** }
 1145              		.loc 2 596 12 view .LVU359
 1146              	.LBE53:
 1147              	.LBE52:
 1148              	.LBE51:
 319:lvgl/src/misc/lv_color.c ****     }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 41


 1149              		.loc 1 319 16 view .LVU360
 1150 002a 7047     		bx	lr
 1151              	.LVL138:
 1152              	.L75:
 323:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1153              		.loc 1 323 9 is_stmt 1 view .LVU361
 323:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1154              		.loc 1 323 9 view .LVU362
 323:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1155              		.loc 1 323 9 view .LVU363
 324:lvgl/src/misc/lv_color.c ****     }
 1156              		.loc 1 324 9 view .LVU364
 1157              	.LBB54:
 1158              	.LBI54:
 699:lvgl/src/misc/lv_color.h **** {
 1159              		.loc 2 699 26 view .LVU365
 1160              		.loc 2 701 5 view .LVU366
 1161              	.LBB55:
 1162              	.LBI55:
 594:lvgl/src/misc/lv_color.h **** {
 1163              		.loc 2 594 26 view .LVU367
 1164              	.LBB56:
 596:lvgl/src/misc/lv_color.h **** }
 1165              		.loc 2 596 5 view .LVU368
 596:lvgl/src/misc/lv_color.h **** }
 1166              		.loc 2 596 12 is_stmt 0 view .LVU369
 1167 002c 4FF00000 		mov	r0, #0	@ movhi
 1168              	.LVL139:
 596:lvgl/src/misc/lv_color.h **** }
 1169              		.loc 2 596 12 view .LVU370
 1170 0030 6FF30400 		bfc	r0, #0, #5
 1171 0034 6FF34A10 		bfc	r0, #5, #6
 1172 0038 6FF3CF20 		bfc	r0, #11, #5
 1173              	.LVL140:
 596:lvgl/src/misc/lv_color.h **** }
 1174              		.loc 2 596 12 view .LVU371
 1175              	.LBE56:
 1176              	.LBE55:
 1177              	.LBE54:
 324:lvgl/src/misc/lv_color.c ****     }
 1178              		.loc 1 324 16 view .LVU372
 1179 003c 7047     		bx	lr
 1180              	.L77:
 1181 003e 00BF     		.align	2
 1182              	.L76:
 1183 0040 00000000 		.word	colors.1
 1184              		.cfi_endproc
 1185              	.LFE26:
 1187              		.section	.text.lv_palette_darken,"ax",%progbits
 1188              		.align	1
 1189              		.global	lv_palette_darken
 1190              		.syntax unified
 1191              		.thumb
 1192              		.thumb_func
 1194              	lv_palette_darken:
 1195              	.LVL141:
 1196              	.LFB27:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 42


 331:lvgl/src/misc/lv_color.c **** 
 332:lvgl/src/misc/lv_color.c **** lv_color_t lv_palette_darken(lv_palette_t p, uint8_t lvl)
 333:lvgl/src/misc/lv_color.c **** {
 1197              		.loc 1 333 1 is_stmt 1 view -0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 334:lvgl/src/misc/lv_color.c ****     static const lv_color_t colors[][4] = {
 1202              		.loc 1 334 5 view .LVU374
 335:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xE5, 0x39, 0x35), LV_COLOR_MAKE(0xD3, 0x2F, 0x2F), LV_COLOR_MAKE(0xC6, 0x28
 336:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xD8, 0x1B, 0x60), LV_COLOR_MAKE(0xC2, 0x18, 0x5B), LV_COLOR_MAKE(0xAD, 0x14
 337:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x8E, 0x24, 0xAA), LV_COLOR_MAKE(0x7B, 0x1F, 0xA2), LV_COLOR_MAKE(0x6A, 0x1B
 338:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x5E, 0x35, 0xB1), LV_COLOR_MAKE(0x51, 0x2D, 0xA8), LV_COLOR_MAKE(0x45, 0x27
 339:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x39, 0x49, 0xAB), LV_COLOR_MAKE(0x30, 0x3F, 0x9F), LV_COLOR_MAKE(0x28, 0x35
 340:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x1E, 0x88, 0xE5), LV_COLOR_MAKE(0x19, 0x76, 0xD2), LV_COLOR_MAKE(0x15, 0x65
 341:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x03, 0x9B, 0xE5), LV_COLOR_MAKE(0x02, 0x88, 0xD1), LV_COLOR_MAKE(0x02, 0x77
 342:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x00, 0xAC, 0xC1), LV_COLOR_MAKE(0x00, 0x97, 0xA7), LV_COLOR_MAKE(0x00, 0x83
 343:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x00, 0x89, 0x7B), LV_COLOR_MAKE(0x00, 0x79, 0x6B), LV_COLOR_MAKE(0x00, 0x69
 344:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x43, 0xA0, 0x47), LV_COLOR_MAKE(0x38, 0x8E, 0x3C), LV_COLOR_MAKE(0x2E, 0x7D
 345:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x7C, 0xB3, 0x42), LV_COLOR_MAKE(0x68, 0x9F, 0x38), LV_COLOR_MAKE(0x55, 0x8B
 346:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xC0, 0xCA, 0x33), LV_COLOR_MAKE(0xAF, 0xB4, 0x2B), LV_COLOR_MAKE(0x9E, 0x9D
 347:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFD, 0xD8, 0x35), LV_COLOR_MAKE(0xFB, 0xC0, 0x2D), LV_COLOR_MAKE(0xF9, 0xA8
 348:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xB3, 0x00), LV_COLOR_MAKE(0xFF, 0xA0, 0x00), LV_COLOR_MAKE(0xFF, 0x8F
 349:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFB, 0x8C, 0x00), LV_COLOR_MAKE(0xF5, 0x7C, 0x00), LV_COLOR_MAKE(0xEF, 0x6C
 350:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xF4, 0x51, 0x1E), LV_COLOR_MAKE(0xE6, 0x4A, 0x19), LV_COLOR_MAKE(0xD8, 0x43
 351:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x6D, 0x4C, 0x41), LV_COLOR_MAKE(0x5D, 0x40, 0x37), LV_COLOR_MAKE(0x4E, 0x34
 352:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x54, 0x6E, 0x7A), LV_COLOR_MAKE(0x45, 0x5A, 0x64), LV_COLOR_MAKE(0x37, 0x47
 353:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x75, 0x75, 0x75), LV_COLOR_MAKE(0x61, 0x61, 0x61), LV_COLOR_MAKE(0x42, 0x42
 354:lvgl/src/misc/lv_color.c ****     };
 355:lvgl/src/misc/lv_color.c **** 
 356:lvgl/src/misc/lv_color.c ****     if(p >= _LV_PALETTE_LAST) {
 1203              		.loc 1 356 5 view .LVU375
 1204              		.loc 1 356 7 is_stmt 0 view .LVU376
 1205 0000 1228     		cmp	r0, #18
 1206 0002 09D8     		bhi	.L82
 357:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 358:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 359:lvgl/src/misc/lv_color.c ****     }
 360:lvgl/src/misc/lv_color.c **** 
 361:lvgl/src/misc/lv_color.c ****     if(lvl == 0 || lvl > 4) {
 1207              		.loc 1 361 5 is_stmt 1 view .LVU377
 1208              		.loc 1 361 17 is_stmt 0 view .LVU378
 1209 0004 0139     		subs	r1, r1, #1
 1210              	.LVL142:
 1211              		.loc 1 361 17 view .LVU379
 1212 0006 C9B2     		uxtb	r1, r1
 1213              		.loc 1 361 7 view .LVU380
 1214 0008 0329     		cmp	r1, #3
 1215 000a 0ED8     		bhi	.L83
 362:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid level: %d. Must be 1..4", lvl);
 363:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 364:lvgl/src/misc/lv_color.c ****     }
 365:lvgl/src/misc/lv_color.c **** 
 366:lvgl/src/misc/lv_color.c ****     lvl--;
 1216              		.loc 1 366 5 is_stmt 1 view .LVU381
 1217              	.LVL143:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 43


 367:lvgl/src/misc/lv_color.c **** 
 368:lvgl/src/misc/lv_color.c ****     return colors[p][lvl];
 1218              		.loc 1 368 5 view .LVU382
 1219              		.loc 1 368 21 is_stmt 0 view .LVU383
 1220 000c 01EB8000 		add	r0, r1, r0, lsl #2
 1221              	.LVL144:
 1222              		.loc 1 368 21 view .LVU384
 1223 0010 0A4B     		ldr	r3, .L84
 1224 0012 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 369:lvgl/src/misc/lv_color.c **** }
 1225              		.loc 1 369 1 view .LVU385
 1226 0016 7047     		bx	lr
 1227              	.LVL145:
 1228              	.L82:
 357:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1229              		.loc 1 357 9 is_stmt 1 view .LVU386
 357:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1230              		.loc 1 357 9 view .LVU387
 357:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1231              		.loc 1 357 9 view .LVU388
 358:lvgl/src/misc/lv_color.c ****     }
 1232              		.loc 1 358 9 view .LVU389
 1233              	.LBB57:
 1234              	.LBI57:
 699:lvgl/src/misc/lv_color.h **** {
 1235              		.loc 2 699 26 view .LVU390
 1236              		.loc 2 701 5 view .LVU391
 1237              	.LBB58:
 1238              	.LBI58:
 594:lvgl/src/misc/lv_color.h **** {
 1239              		.loc 2 594 26 view .LVU392
 1240              	.LBB59:
 596:lvgl/src/misc/lv_color.h **** }
 1241              		.loc 2 596 5 view .LVU393
 596:lvgl/src/misc/lv_color.h **** }
 1242              		.loc 2 596 12 is_stmt 0 view .LVU394
 1243 0018 4FF00000 		mov	r0, #0	@ movhi
 1244              	.LVL146:
 596:lvgl/src/misc/lv_color.h **** }
 1245              		.loc 2 596 12 view .LVU395
 1246 001c 6FF30400 		bfc	r0, #0, #5
 1247 0020 6FF34A10 		bfc	r0, #5, #6
 1248 0024 6FF3CF20 		bfc	r0, #11, #5
 1249              	.LVL147:
 596:lvgl/src/misc/lv_color.h **** }
 1250              		.loc 2 596 12 view .LVU396
 1251              	.LBE59:
 1252              	.LBE58:
 1253              	.LBE57:
 358:lvgl/src/misc/lv_color.c ****     }
 1254              		.loc 1 358 16 view .LVU397
 1255 0028 7047     		bx	lr
 1256              	.LVL148:
 1257              	.L83:
 362:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1258              		.loc 1 362 9 is_stmt 1 view .LVU398
 362:lvgl/src/misc/lv_color.c ****         return lv_color_black();
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 44


 1259              		.loc 1 362 9 view .LVU399
 362:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1260              		.loc 1 362 9 view .LVU400
 363:lvgl/src/misc/lv_color.c ****     }
 1261              		.loc 1 363 9 view .LVU401
 1262              	.LBB60:
 1263              	.LBI60:
 699:lvgl/src/misc/lv_color.h **** {
 1264              		.loc 2 699 26 view .LVU402
 1265              		.loc 2 701 5 view .LVU403
 1266              	.LBB61:
 1267              	.LBI61:
 594:lvgl/src/misc/lv_color.h **** {
 1268              		.loc 2 594 26 view .LVU404
 1269              	.LBB62:
 596:lvgl/src/misc/lv_color.h **** }
 1270              		.loc 2 596 5 view .LVU405
 596:lvgl/src/misc/lv_color.h **** }
 1271              		.loc 2 596 12 is_stmt 0 view .LVU406
 1272 002a 4FF00000 		mov	r0, #0	@ movhi
 1273              	.LVL149:
 596:lvgl/src/misc/lv_color.h **** }
 1274              		.loc 2 596 12 view .LVU407
 1275 002e 6FF30400 		bfc	r0, #0, #5
 1276 0032 6FF34A10 		bfc	r0, #5, #6
 1277 0036 6FF3CF20 		bfc	r0, #11, #5
 1278              	.LVL150:
 596:lvgl/src/misc/lv_color.h **** }
 1279              		.loc 2 596 12 view .LVU408
 1280              	.LBE62:
 1281              	.LBE61:
 1282              	.LBE60:
 363:lvgl/src/misc/lv_color.c ****     }
 1283              		.loc 1 363 16 view .LVU409
 1284 003a 7047     		bx	lr
 1285              	.L85:
 1286              		.align	2
 1287              	.L84:
 1288 003c 00000000 		.word	colors.0
 1289              		.cfi_endproc
 1290              	.LFE27:
 1292              		.section	.rodata.colors.0,"a"
 1293              		.align	2
 1296              	colors.0:
 1297 0000 C6       		.byte	198
 1298 0001 E1       		.byte	225
 1299 0002 65       		.byte	101
 1300 0003 D1       		.byte	209
 1301 0004 45       		.byte	69
 1302 0005 C1       		.byte	193
 1303 0006 E3       		.byte	227
 1304 0007 B0       		.byte	176
 1305 0008 CC       		.byte	204
 1306 0009 D8       		.byte	216
 1307 000a CB       		.byte	203
 1308 000b C0       		.byte	192
 1309 000c AA       		.byte	170
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 45


 1310 000d A8       		.byte	168
 1311 000e 69       		.byte	105
 1312 000f 88       		.byte	136
 1313 0010 35       		.byte	53
 1314 0011 89       		.byte	137
 1315 0012 F4       		.byte	244
 1316 0013 78       		.byte	120
 1317 0014 D3       		.byte	211
 1318 0015 68       		.byte	104
 1319 0016 B1       		.byte	177
 1320 0017 48       		.byte	72
 1321 0018 B6       		.byte	182
 1322 0019 59       		.byte	89
 1323 001a 75       		.byte	117
 1324 001b 51       		.byte	81
 1325 001c 34       		.byte	52
 1326 001d 41       		.byte	65
 1327 001e D2       		.byte	210
 1328 001f 30       		.byte	48
 1329 0020 55       		.byte	85
 1330 0021 3A       		.byte	58
 1331 0022 F3       		.byte	243
 1332 0023 31       		.byte	49
 1333 0024 B2       		.byte	178
 1334 0025 29       		.byte	41
 1335 0026 0F       		.byte	15
 1336 0027 19       		.byte	25
 1337 0028 5C       		.byte	92
 1338 0029 1C       		.byte	28
 1339 002a BA       		.byte	186
 1340 002b 1B       		.byte	27
 1341 002c 38       		.byte	56
 1342 002d 13       		.byte	19
 1343 002e 34       		.byte	52
 1344 002f 0A       		.byte	10
 1345 0030 DC       		.byte	220
 1346 0031 04       		.byte	4
 1347 0032 5A       		.byte	90
 1348 0033 04       		.byte	4
 1349 0034 B7       		.byte	183
 1350 0035 03       		.byte	3
 1351 0036 B3       		.byte	179
 1352 0037 02       		.byte	2
 1353 0038 78       		.byte	120
 1354 0039 05       		.byte	5
 1355 003a B4       		.byte	180
 1356 003b 04       		.byte	4
 1357 003c 11       		.byte	17
 1358 003d 04       		.byte	4
 1359 003e 0C       		.byte	12
 1360 003f 03       		.byte	3
 1361 0040 4F       		.byte	79
 1362 0041 04       		.byte	4
 1363 0042 CD       		.byte	205
 1364 0043 03       		.byte	3
 1365 0044 4B       		.byte	75
 1366 0045 03       		.byte	3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 46


 1367 0046 68       		.byte	104
 1368 0047 02       		.byte	2
 1369 0048 08       		.byte	8
 1370 0049 45       		.byte	69
 1371 004a 67       		.byte	103
 1372 004b 3C       		.byte	60
 1373 004c E6       		.byte	230
 1374 004d 2B       		.byte	43
 1375 004e E4       		.byte	228
 1376 004f 1A       		.byte	26
 1377 0050 88       		.byte	136
 1378 0051 7D       		.byte	125
 1379 0052 E7       		.byte	231
 1380 0053 6C       		.byte	108
 1381 0054 45       		.byte	69
 1382 0055 54       		.byte	84
 1383 0056 43       		.byte	67
 1384 0057 33       		.byte	51
 1385 0058 46       		.byte	70
 1386 0059 C6       		.byte	198
 1387 005a A5       		.byte	165
 1388 005b AD       		.byte	173
 1389 005c E4       		.byte	228
 1390 005d 9C       		.byte	156
 1391 005e A2       		.byte	162
 1392 005f 83       		.byte	131
 1393 0060 C6       		.byte	198
 1394 0061 FE       		.byte	254
 1395 0062 05       		.byte	5
 1396 0063 FE       		.byte	254
 1397 0064 44       		.byte	68
 1398 0065 FD       		.byte	253
 1399 0066 E2       		.byte	226
 1400 0067 F3       		.byte	243
 1401 0068 80       		.byte	128
 1402 0069 FD       		.byte	253
 1403 006a 00       		.byte	0
 1404 006b FD       		.byte	253
 1405 006c 60       		.byte	96
 1406 006d FC       		.byte	252
 1407 006e 60       		.byte	96
 1408 006f FB       		.byte	251
 1409 0070 60       		.byte	96
 1410 0071 FC       		.byte	252
 1411 0072 E0       		.byte	224
 1412 0073 F3       		.byte	243
 1413 0074 60       		.byte	96
 1414 0075 EB       		.byte	235
 1415 0076 80       		.byte	128
 1416 0077 E2       		.byte	226
 1417 0078 83       		.byte	131
 1418 0079 F2       		.byte	242
 1419 007a 43       		.byte	67
 1420 007b E2       		.byte	226
 1421 007c 02       		.byte	2
 1422 007d DA       		.byte	218
 1423 007e A1       		.byte	161
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 47


 1424 007f B9       		.byte	185
 1425 0080 68       		.byte	104
 1426 0081 6A       		.byte	106
 1427 0082 06       		.byte	6
 1428 0083 5A       		.byte	90
 1429 0084 A5       		.byte	165
 1430 0085 49       		.byte	73
 1431 0086 24       		.byte	36
 1432 0087 39       		.byte	57
 1433 0088 6F       		.byte	111
 1434 0089 53       		.byte	83
 1435 008a CC       		.byte	204
 1436 008b 42       		.byte	66
 1437 008c 29       		.byte	41
 1438 008d 32       		.byte	50
 1439 008e 87       		.byte	135
 1440 008f 21       		.byte	33
 1441 0090 AE       		.byte	174
 1442 0091 73       		.byte	115
 1443 0092 0C       		.byte	12
 1444 0093 63       		.byte	99
 1445 0094 08       		.byte	8
 1446 0095 42       		.byte	66
 1447 0096 04       		.byte	4
 1448 0097 21       		.byte	33
 1449              		.section	.rodata.colors.1,"a"
 1450              		.align	2
 1453              	colors.1:
 1454 0000 8A       		.byte	138
 1455 0001 EA       		.byte	234
 1456 0002 8E       		.byte	142
 1457 0003 E3       		.byte	227
 1458 0004 D3       		.byte	211
 1459 0005 EC       		.byte	236
 1460 0006 7A       		.byte	122
 1461 0007 FE       		.byte	254
 1462 0008 5D       		.byte	93
 1463 0009 FF       		.byte	255
 1464 000a 0F       		.byte	15
 1465 000b EA       		.byte	234
 1466 000c 12       		.byte	18
 1467 000d F3       		.byte	243
 1468 000e 76       		.byte	118
 1469 000f F4       		.byte	244
 1470 0010 DA       		.byte	218
 1471 0011 FD       		.byte	253
 1472 0012 3D       		.byte	61
 1473 0013 FF       		.byte	255
 1474 0014 37       		.byte	55
 1475 0015 AA       		.byte	170
 1476 0016 59       		.byte	89
 1477 0017 BB       		.byte	187
 1478 0018 9B       		.byte	155
 1479 0019 CC       		.byte	204
 1480 001a FC       		.byte	252
 1481 001b E5       		.byte	229
 1482 001c 3E       		.byte	62
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 48


 1483 001d F7       		.byte	247
 1484 001e B8       		.byte	184
 1485 001f 7A       		.byte	122
 1486 0020 B9       		.byte	185
 1487 0021 93       		.byte	147
 1488 0022 FB       		.byte	251
 1489 0023 B4       		.byte	180
 1490 0024 3D       		.byte	61
 1491 0025 D6       		.byte	214
 1492 0026 3E       		.byte	62
 1493 0027 EF       		.byte	239
 1494 0028 58       		.byte	88
 1495 0029 5B       		.byte	91
 1496 002a 39       		.byte	57
 1497 002b 7C       		.byte	124
 1498 002c 5B       		.byte	91
 1499 002d 9D       		.byte	157
 1500 002e 5D       		.byte	93
 1501 002f C6       		.byte	198
 1502 0030 5E       		.byte	94
 1503 0031 EF       		.byte	239
 1504 0032 3E       		.byte	62
 1505 0033 45       		.byte	69
 1506 0034 BE       		.byte	190
 1507 0035 65       		.byte	101
 1508 0036 5F       		.byte	95
 1509 0037 96       		.byte	150
 1510 0038 FF       		.byte	255
 1511 0039 BE       		.byte	190
 1512 003a 9F       		.byte	159
 1513 003b E7       		.byte	231
 1514 003c BE       		.byte	190
 1515 003d 2D       		.byte	45
 1516 003e 1E       		.byte	30
 1517 003f 4E       		.byte	78
 1518 0040 BF       		.byte	191
 1519 0041 86       		.byte	134
 1520 0042 3F       		.byte	63
 1521 0043 B7       		.byte	183
 1522 0044 BF       		.byte	191
 1523 0045 E7       		.byte	231
 1524 0046 3B       		.byte	59
 1525 0047 26       		.byte	38
 1526 0048 9C       		.byte	156
 1527 0049 4E       		.byte	78
 1528 004a FD       		.byte	253
 1529 004b 86       		.byte	134
 1530 004c 5E       		.byte	94
 1531 004d B7       		.byte	183
 1532 004e BF       		.byte	191
 1533 004f E7       		.byte	231
 1534 0050 33       		.byte	51
 1535 0051 25       		.byte	37
 1536 0052 B5       		.byte	181
 1537 0053 4D       		.byte	77
 1538 0054 58       		.byte	88
 1539 0055 86       		.byte	134
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 49


 1540 0056 FB       		.byte	251
 1541 0057 B6       		.byte	182
 1542 0058 9E       		.byte	158
 1543 0059 E7       		.byte	231
 1544 005a CD       		.byte	205
 1545 005b 65       		.byte	101
 1546 005c 30       		.byte	48
 1547 005d 86       		.byte	134
 1548 005e B4       		.byte	180
 1549 005f A6       		.byte	166
 1550 0060 39       		.byte	57
 1551 0061 CF       		.byte	207
 1552 0062 BD       		.byte	189
 1553 0063 EF       		.byte	239
 1554 0064 6C       		.byte	108
 1555 0065 9E       		.byte	158
 1556 0066 B0       		.byte	176
 1557 0067 AE       		.byte	174
 1558 0068 14       		.byte	20
 1559 0069 C7       		.byte	199
 1560 006a 79       		.byte	121
 1561 006b DF       		.byte	223
 1562 006c DD       		.byte	221
 1563 006d F7       		.byte	247
 1564 006e 0A       		.byte	10
 1565 006f D7       		.byte	215
 1566 0070 2E       		.byte	46
 1567 0071 DF       		.byte	223
 1568 0072 73       		.byte	115
 1569 0073 E7       		.byte	231
 1570 0074 B8       		.byte	184
 1571 0075 F7       		.byte	247
 1572 0076 DC       		.byte	220
 1573 0077 FF       		.byte	255
 1574 0078 6B       		.byte	107
 1575 0079 FF       		.byte	255
 1576 007a 8E       		.byte	142
 1577 007b FF       		.byte	255
 1578 007c B3       		.byte	179
 1579 007d FF       		.byte	255
 1580 007e D8       		.byte	216
 1581 007f FF       		.byte	255
 1582 0080 FC       		.byte	252
 1583 0081 FF       		.byte	255
 1584 0082 45       		.byte	69
 1585 0083 FE       		.byte	254
 1586 0084 A9       		.byte	169
 1587 0085 FE       		.byte	254
 1588 0086 10       		.byte	16
 1589 0087 FF       		.byte	255
 1590 0088 76       		.byte	118
 1591 0089 FF       		.byte	255
 1592 008a DC       		.byte	220
 1593 008b FF       		.byte	255
 1594 008c 24       		.byte	36
 1595 008d FD       		.byte	253
 1596 008e A9       		.byte	169
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 50


 1597 008f FD       		.byte	253
 1598 0090 70       		.byte	112
 1599 0091 FE       		.byte	254
 1600 0092 16       		.byte	22
 1601 0093 FF       		.byte	255
 1602 0094 9C       		.byte	156
 1603 0095 FF       		.byte	255
 1604 0096 88       		.byte	136
 1605 0097 FB       		.byte	251
 1606 0098 4C       		.byte	76
 1607 0099 FC       		.byte	252
 1608 009a 52       		.byte	82
 1609 009b FD       		.byte	253
 1610 009c 77       		.byte	119
 1611 009d FE       		.byte	254
 1612 009e 5C       		.byte	92
 1613 009f FF       		.byte	255
 1614 00a0 6C       		.byte	108
 1615 00a1 8B       		.byte	139
 1616 00a2 4F       		.byte	79
 1617 00a3 A4       		.byte	164
 1618 00a4 54       		.byte	84
 1619 00a5 BD       		.byte	189
 1620 00a6 79       		.byte	121
 1621 00a7 D6       		.byte	214
 1622 00a8 5D       		.byte	93
 1623 00a9 EF       		.byte	239
 1624 00aa 93       		.byte	147
 1625 00ab 7C       		.byte	124
 1626 00ac 35       		.byte	53
 1627 00ad 95       		.byte	149
 1628 00ae F8       		.byte	248
 1629 00af B5       		.byte	181
 1630 00b0 DB       		.byte	219
 1631 00b1 CE       		.byte	206
 1632 00b2 7E       		.byte	126
 1633 00b3 EF       		.byte	239
 1634 00b4 F7       		.byte	247
 1635 00b5 BD       		.byte	189
 1636 00b6 1C       		.byte	28
 1637 00b7 E7       		.byte	231
 1638 00b8 7D       		.byte	125
 1639 00b9 EF       		.byte	239
 1640 00ba BE       		.byte	190
 1641 00bb F7       		.byte	247
 1642 00bc DF       		.byte	223
 1643 00bd FF       		.byte	255
 1644              		.section	.rodata.colors.2,"a"
 1645              		.align	2
 1648              	colors.2:
 1649 0000 06       		.byte	6
 1650 0001 F2       		.byte	242
 1651 0002 EC       		.byte	236
 1652 0003 E8       		.byte	232
 1653 0004 36       		.byte	54
 1654 0005 99       		.byte	153
 1655 0006 D6       		.byte	214
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 51


 1656 0007 61       		.byte	97
 1657 0008 96       		.byte	150
 1658 0009 3A       		.byte	58
 1659 000a BE       		.byte	190
 1660 000b 24       		.byte	36
 1661 000c 5E       		.byte	94
 1662 000d 05       		.byte	5
 1663 000e FA       		.byte	250
 1664 000f 05       		.byte	5
 1665 0010 B1       		.byte	177
 1666 0011 04       		.byte	4
 1667 0012 6A       		.byte	106
 1668 0013 4D       		.byte	77
 1669 0014 09       		.byte	9
 1670 0015 8E       		.byte	142
 1671 0016 E7       		.byte	231
 1672 0017 CE       		.byte	206
 1673 0018 47       		.byte	71
 1674 0019 FF       		.byte	255
 1675 001a 00       		.byte	0
 1676 001b FE       		.byte	254
 1677 001c C0       		.byte	192
 1678 001d FC       		.byte	252
 1679 001e A4       		.byte	164
 1680 001f FA       		.byte	250
 1681 0020 A9       		.byte	169
 1682 0021 7A       		.byte	122
 1683 0022 F1       		.byte	241
 1684 0023 63       		.byte	99
 1685 0024 F3       		.byte	243
 1686 0025 9C       		.byte	156
 1687              		.text
 1688              	.Letext0:
 1689              		.file 3 "/usr/local/include/sys/_types/_int32_t.h"
 1690              		.file 4 "/usr/local/include/_types/_uint8_t.h"
 1691              		.file 5 "/usr/local/include/_types/_uint16_t.h"
 1692              		.file 6 "/usr/local/include/_types/_uint32_t.h"
 1693              		.file 7 "/usr/local/include/sys/_types/_uintptr_t.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 lv_color.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:21     .text.lv_color_to32:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:26     .text.lv_color_to32:00000000 lv_color_to32
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:72     .text.lv_color_mix:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:77     .text.lv_color_mix:00000000 lv_color_mix
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:132    .text.lv_color_mix:0000002c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:137    .text.lv_color_fill:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:143    .text.lv_color_fill:00000000 lv_color_fill
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:251    .text.lv_color_lighten:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:257    .text.lv_color_lighten:00000000 lv_color_lighten
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:301    .text.lv_color_darken:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:307    .text.lv_color_darken:00000000 lv_color_darken
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:357    .text.lv_color_change_lightness:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:363    .text.lv_color_change_lightness:00000000 lv_color_change_lightness
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:422    .text.lv_color_hsv_to_rgb:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:428    .text.lv_color_hsv_to_rgb:00000000 lv_color_hsv_to_rgb
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:537    .text.lv_color_hsv_to_rgb:00000092 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:682    .text.lv_color_hsv_to_rgb:000000f8 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:689    .text.lv_color_rgb_to_hsv:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:695    .text.lv_color_rgb_to_hsv:00000000 lv_color_rgb_to_hsv
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:965    .text.lv_color_rgb_to_hsv:00000128 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:970    .text.lv_color_to_hsv:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:976    .text.lv_color_to_hsv:00000000 lv_color_to_hsv
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1019   .text.lv_palette_main:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1025   .text.lv_palette_main:00000000 lv_palette_main
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1077   .text.lv_palette_main:00000020 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1648   .rodata.colors.2:00000000 colors.2
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1082   .text.lv_palette_lighten:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1088   .text.lv_palette_lighten:00000000 lv_palette_lighten
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1183   .text.lv_palette_lighten:00000040 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1453   .rodata.colors.1:00000000 colors.1
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1188   .text.lv_palette_darken:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1194   .text.lv_palette_darken:00000000 lv_palette_darken
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1288   .text.lv_palette_darken:0000003c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1296   .rodata.colors.0:00000000 colors.0
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1293   .rodata.colors.0:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1450   .rodata.colors.1:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:1645   .rodata.colors.2:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:543    .text.lv_color_hsv_to_rgb:00000097 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccPVWGD3.s:543    .text.lv_color_hsv_to_rgb:00000098 $t

NO UNDEFINED SYMBOLS
