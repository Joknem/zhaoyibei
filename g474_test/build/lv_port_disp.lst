ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_port_disp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/lv_port_disp.c"
  20              		.section	.text.disp_flush,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	disp_flush:
  27              	.LVL0:
  28              	.LFB208:
   1:lvgl/src/lv_port_disp.c **** /**
   2:lvgl/src/lv_port_disp.c ****  * @file lv_port_disp_templ.c
   3:lvgl/src/lv_port_disp.c ****  *
   4:lvgl/src/lv_port_disp.c ****  */
   5:lvgl/src/lv_port_disp.c **** 
   6:lvgl/src/lv_port_disp.c **** /*Copy this file as "lv_port_disp.c" and set this value to "1" to enable content*/
   7:lvgl/src/lv_port_disp.c **** #if 1
   8:lvgl/src/lv_port_disp.c **** 
   9:lvgl/src/lv_port_disp.c **** /*********************
  10:lvgl/src/lv_port_disp.c ****  *      INCLUDES
  11:lvgl/src/lv_port_disp.c ****  *********************/
  12:lvgl/src/lv_port_disp.c **** #include "lv_port_disp.h"
  13:lvgl/src/lv_port_disp.c **** #include <stdbool.h>
  14:lvgl/src/lv_port_disp.c **** 
  15:lvgl/src/lv_port_disp.c **** /*********************
  16:lvgl/src/lv_port_disp.c ****  *      DEFINES
  17:lvgl/src/lv_port_disp.c ****  *********************/
  18:lvgl/src/lv_port_disp.c **** #define LV_HOR_RES_MAX 120
  19:lvgl/src/lv_port_disp.c **** #define LV_VER_RES_MAX 120
  20:lvgl/src/lv_port_disp.c **** 
  21:lvgl/src/lv_port_disp.c **** #ifndef MY_DISP_HOR_RES
  22:lvgl/src/lv_port_disp.c ****     #warning Please define or replace the macro MY_DISP_HOR_RES with the actual screen width, defau
  23:lvgl/src/lv_port_disp.c ****     #define MY_DISP_HOR_RES    320
  24:lvgl/src/lv_port_disp.c **** #endif
  25:lvgl/src/lv_port_disp.c **** 
  26:lvgl/src/lv_port_disp.c **** #ifndef MY_DISP_VER_RES
  27:lvgl/src/lv_port_disp.c ****     #warning Please define or replace the macro MY_DISP_HOR_RES with the actual screen height, defa
  28:lvgl/src/lv_port_disp.c ****     #define MY_DISP_VER_RES    240
  29:lvgl/src/lv_port_disp.c **** #endif
  30:lvgl/src/lv_port_disp.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 2


  31:lvgl/src/lv_port_disp.c **** /**********************
  32:lvgl/src/lv_port_disp.c ****  *      TYPEDEFS
  33:lvgl/src/lv_port_disp.c ****  **********************/
  34:lvgl/src/lv_port_disp.c **** 
  35:lvgl/src/lv_port_disp.c **** /**********************
  36:lvgl/src/lv_port_disp.c ****  *  STATIC PROTOTYPES
  37:lvgl/src/lv_port_disp.c ****  **********************/
  38:lvgl/src/lv_port_disp.c **** static void disp_init(void);
  39:lvgl/src/lv_port_disp.c **** 
  40:lvgl/src/lv_port_disp.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p);
  41:lvgl/src/lv_port_disp.c **** //static void gpu_fill(lv_disp_drv_t * disp_drv, lv_color_t * dest_buf, lv_coord_t dest_width,
  42:lvgl/src/lv_port_disp.c **** //        const lv_area_t * fill_area, lv_color_t color);
  43:lvgl/src/lv_port_disp.c **** 
  44:lvgl/src/lv_port_disp.c **** /**********************
  45:lvgl/src/lv_port_disp.c ****  *  STATIC VARIABLES
  46:lvgl/src/lv_port_disp.c ****  **********************/
  47:lvgl/src/lv_port_disp.c **** 
  48:lvgl/src/lv_port_disp.c **** /**********************
  49:lvgl/src/lv_port_disp.c ****  *      MACROS
  50:lvgl/src/lv_port_disp.c ****  **********************/
  51:lvgl/src/lv_port_disp.c **** 
  52:lvgl/src/lv_port_disp.c **** /**********************
  53:lvgl/src/lv_port_disp.c ****  *   GLOBAL FUNCTIONS
  54:lvgl/src/lv_port_disp.c ****  **********************/
  55:lvgl/src/lv_port_disp.c **** 
  56:lvgl/src/lv_port_disp.c **** void lv_port_disp_init(void)
  57:lvgl/src/lv_port_disp.c **** {
  58:lvgl/src/lv_port_disp.c ****     /*-------------------------
  59:lvgl/src/lv_port_disp.c ****      * Initialize your display
  60:lvgl/src/lv_port_disp.c ****      * -----------------------*/
  61:lvgl/src/lv_port_disp.c ****     disp_init();
  62:lvgl/src/lv_port_disp.c **** 
  63:lvgl/src/lv_port_disp.c ****     /*-----------------------------
  64:lvgl/src/lv_port_disp.c ****      * Create a buffer for drawing
  65:lvgl/src/lv_port_disp.c ****      *----------------------------*/
  66:lvgl/src/lv_port_disp.c **** 
  67:lvgl/src/lv_port_disp.c ****     /**
  68:lvgl/src/lv_port_disp.c ****      * LVGL requires a buffer where it internally draws the widgets.
  69:lvgl/src/lv_port_disp.c ****      * Later this buffer will passed to your display driver's `flush_cb` to copy its content to you
  70:lvgl/src/lv_port_disp.c ****      * The buffer has to be greater than 1 display row
  71:lvgl/src/lv_port_disp.c ****      *
  72:lvgl/src/lv_port_disp.c ****      * There are 3 buffering configurations:
  73:lvgl/src/lv_port_disp.c ****      * 1. Create ONE buffer:
  74:lvgl/src/lv_port_disp.c ****      *      LVGL will draw the display's content here and writes it to your display
  75:lvgl/src/lv_port_disp.c ****      *
  76:lvgl/src/lv_port_disp.c ****      * 2. Create TWO buffer:
  77:lvgl/src/lv_port_disp.c ****      *      LVGL will draw the display's content to a buffer and writes it your display.
  78:lvgl/src/lv_port_disp.c ****      *      You should use DMA to write the buffer's content to the display.
  79:lvgl/src/lv_port_disp.c ****      *      It will enable LVGL to draw the next part of the screen to the other buffer while
  80:lvgl/src/lv_port_disp.c ****      *      the data is being sent form the first buffer. It makes rendering and flushing parallel.
  81:lvgl/src/lv_port_disp.c ****      *
  82:lvgl/src/lv_port_disp.c ****      * 3. Double buffering
  83:lvgl/src/lv_port_disp.c ****      *      Set 2 screens sized buffers and set disp_drv.full_refresh = 1.
  84:lvgl/src/lv_port_disp.c ****      *      This way LVGL will always provide the whole rendered screen in `flush_cb`
  85:lvgl/src/lv_port_disp.c ****      *      and you only need to change the frame buffer's address.
  86:lvgl/src/lv_port_disp.c ****      */
  87:lvgl/src/lv_port_disp.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 3


  88:lvgl/src/lv_port_disp.c ****     /* Example for 1) */
  89:lvgl/src/lv_port_disp.c ****     static lv_disp_draw_buf_t draw_buf_dsc_1;
  90:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_1[MY_DISP_HOR_RES * 10];                          /*A buffer for 10 rows*
  91:lvgl/src/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_1, buf_1, NULL, MY_DISP_HOR_RES * 10);   /*Initialize the d
  92:lvgl/src/lv_port_disp.c **** 
  93:lvgl/src/lv_port_disp.c ****     /* Example for 2) */
  94:lvgl/src/lv_port_disp.c ****     static lv_disp_draw_buf_t draw_buf_dsc_2;
  95:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_2_1[MY_DISP_HOR_RES * 10];                        /*A buffer for 10 rows*
  96:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_2_2[MY_DISP_HOR_RES * 10];                        /*An other buffer for 1
  97:lvgl/src/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 10);   /*Initialize 
  98:lvgl/src/lv_port_disp.c **** 
  99:lvgl/src/lv_port_disp.c ****     /* Example for 3) also set disp_drv.full_refresh = 1 below*/
 100:lvgl/src/lv_port_disp.c ****     static lv_disp_draw_buf_t draw_buf_dsc_3;
 101:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_3_1[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*A screen sized buffe
 102:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_3_2[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*Another screen sized
 103:lvgl/src/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2,
 104:lvgl/src/lv_port_disp.c ****                           MY_DISP_VER_RES * LV_VER_RES_MAX);   /*Initialize the display buffer*/
 105:lvgl/src/lv_port_disp.c **** 
 106:lvgl/src/lv_port_disp.c ****     /*-----------------------------------
 107:lvgl/src/lv_port_disp.c ****      * Register the display in LVGL
 108:lvgl/src/lv_port_disp.c ****      *----------------------------------*/
 109:lvgl/src/lv_port_disp.c **** 
 110:lvgl/src/lv_port_disp.c ****     static lv_disp_drv_t disp_drv;                         /*Descriptor of a display driver*/
 111:lvgl/src/lv_port_disp.c ****     lv_disp_drv_init(&disp_drv);                    /*Basic initialization*/
 112:lvgl/src/lv_port_disp.c **** 
 113:lvgl/src/lv_port_disp.c ****     /*Set up the functions to access to your display*/
 114:lvgl/src/lv_port_disp.c **** 
 115:lvgl/src/lv_port_disp.c ****     /*Set the resolution of the display*/
 116:lvgl/src/lv_port_disp.c ****     disp_drv.hor_res = MY_DISP_HOR_RES;
 117:lvgl/src/lv_port_disp.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 118:lvgl/src/lv_port_disp.c **** 
 119:lvgl/src/lv_port_disp.c ****     /*Used to copy the buffer's content to the display*/
 120:lvgl/src/lv_port_disp.c ****     disp_drv.flush_cb = disp_flush;
 121:lvgl/src/lv_port_disp.c **** 
 122:lvgl/src/lv_port_disp.c ****     /*Set a display buffer*/
 123:lvgl/src/lv_port_disp.c ****     disp_drv.draw_buf = &draw_buf_dsc_1;
 124:lvgl/src/lv_port_disp.c **** 
 125:lvgl/src/lv_port_disp.c ****     /*Required for Example 3)*/
 126:lvgl/src/lv_port_disp.c ****     //disp_drv.full_refresh = 1;
 127:lvgl/src/lv_port_disp.c **** 
 128:lvgl/src/lv_port_disp.c ****     /* Fill a memory array with a color if you have GPU.
 129:lvgl/src/lv_port_disp.c ****      * Note that, in lv_conf.h you can enable GPUs that has built-in support in LVGL.
 130:lvgl/src/lv_port_disp.c ****      * But if you have a different GPU you can use with this callback.*/
 131:lvgl/src/lv_port_disp.c ****     //disp_drv.gpu_fill_cb = gpu_fill;
 132:lvgl/src/lv_port_disp.c **** 
 133:lvgl/src/lv_port_disp.c ****     /*Finally register the driver*/
 134:lvgl/src/lv_port_disp.c ****     lv_disp_drv_register(&disp_drv);
 135:lvgl/src/lv_port_disp.c **** }
 136:lvgl/src/lv_port_disp.c **** 
 137:lvgl/src/lv_port_disp.c **** /**********************
 138:lvgl/src/lv_port_disp.c ****  *   STATIC FUNCTIONS
 139:lvgl/src/lv_port_disp.c ****  **********************/
 140:lvgl/src/lv_port_disp.c **** 
 141:lvgl/src/lv_port_disp.c **** /*Initialize your display and the required peripherals.*/
 142:lvgl/src/lv_port_disp.c **** static void disp_init(void)
 143:lvgl/src/lv_port_disp.c **** {
 144:lvgl/src/lv_port_disp.c ****     /*You code here*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 4


 145:lvgl/src/lv_port_disp.c **** }
 146:lvgl/src/lv_port_disp.c **** 
 147:lvgl/src/lv_port_disp.c **** volatile bool disp_flush_enabled = true;
 148:lvgl/src/lv_port_disp.c **** 
 149:lvgl/src/lv_port_disp.c **** /* Enable updating the screen (the flushing process) when disp_flush() is called by LVGL
 150:lvgl/src/lv_port_disp.c ****  */
 151:lvgl/src/lv_port_disp.c **** void disp_enable_update(void)
 152:lvgl/src/lv_port_disp.c **** {
 153:lvgl/src/lv_port_disp.c ****     disp_flush_enabled = true;
 154:lvgl/src/lv_port_disp.c **** }
 155:lvgl/src/lv_port_disp.c **** 
 156:lvgl/src/lv_port_disp.c **** /* Disable updating the screen (the flushing process) when disp_flush() is called by LVGL
 157:lvgl/src/lv_port_disp.c ****  */
 158:lvgl/src/lv_port_disp.c **** void disp_disable_update(void)
 159:lvgl/src/lv_port_disp.c **** {
 160:lvgl/src/lv_port_disp.c ****     disp_flush_enabled = false;
 161:lvgl/src/lv_port_disp.c **** }
 162:lvgl/src/lv_port_disp.c **** 
 163:lvgl/src/lv_port_disp.c **** /*Flush the content of the internal buffer the specific area on the display
 164:lvgl/src/lv_port_disp.c ****  *You can use DMA or any hardware acceleration to do this operation in the background but
 165:lvgl/src/lv_port_disp.c ****  *'lv_disp_flush_ready()' has to be called when finished.*/
 166:lvgl/src/lv_port_disp.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)
 167:lvgl/src/lv_port_disp.c **** {
  29              		.loc 1 167 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 167 1 is_stmt 0 view .LVU1
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 168:lvgl/src/lv_port_disp.c ****     if(disp_flush_enabled) {
  39              		.loc 1 168 5 is_stmt 1 view .LVU2
  40              		.loc 1 168 8 is_stmt 0 view .LVU3
  41 0002 0B4B     		ldr	r3, .L8
  42 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  43              		.loc 1 168 7 view .LVU4
  44 0006 83B1     		cbz	r3, .L2
  45              	.LBB2:
 169:lvgl/src/lv_port_disp.c ****         /*The most simple case (but also the slowest) to put all pixels to the screen one-by-one*/
 170:lvgl/src/lv_port_disp.c **** 
 171:lvgl/src/lv_port_disp.c ****         int32_t x;
  46              		.loc 1 171 9 is_stmt 1 view .LVU5
 172:lvgl/src/lv_port_disp.c ****         int32_t y;
  47              		.loc 1 172 9 view .LVU6
 173:lvgl/src/lv_port_disp.c ****         for(y = area->y1; y <= area->y2; y++) {
  48              		.loc 1 173 9 view .LVU7
  49              		.loc 1 173 21 is_stmt 0 view .LVU8
  50 0008 B1F902C0 		ldrsh	ip, [r1, #2]
  51              	.LVL1:
  52              		.loc 1 173 9 view .LVU9
  53 000c 06E0     		b	.L3
  54              	.LVL2:
  55              	.L5:
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 5


 175:lvgl/src/lv_port_disp.c ****                 /*Put a pixel to the display. For example:*/
 176:lvgl/src/lv_port_disp.c ****                 /*put_px(x, y, *color_p)*/
 177:lvgl/src/lv_port_disp.c ****                 color_p++;
  56              		.loc 1 177 17 is_stmt 1 discriminator 3 view .LVU10
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  57              		.loc 1 174 47 discriminator 3 view .LVU11
  58 000e 0133     		adds	r3, r3, #1
  59              	.LVL3:
  60              	.L4:
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  61              		.loc 1 174 33 discriminator 1 view .LVU12
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  62              		.loc 1 174 40 is_stmt 0 discriminator 1 view .LVU13
  63 0010 B1F90420 		ldrsh	r2, [r1, #4]
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  64              		.loc 1 174 33 discriminator 1 view .LVU14
  65 0014 9A42     		cmp	r2, r3
  66 0016 FADA     		bge	.L5
 173:lvgl/src/lv_port_disp.c ****         for(y = area->y1; y <= area->y2; y++) {
  67              		.loc 1 173 43 is_stmt 1 discriminator 2 view .LVU15
  68 0018 0CF1010C 		add	ip, ip, #1
  69              	.LVL4:
  70              	.L3:
 173:lvgl/src/lv_port_disp.c ****         for(y = area->y1; y <= area->y2; y++) {
  71              		.loc 1 173 29 discriminator 1 view .LVU16
 173:lvgl/src/lv_port_disp.c ****         for(y = area->y1; y <= area->y2; y++) {
  72              		.loc 1 173 36 is_stmt 0 discriminator 1 view .LVU17
  73 001c B1F90630 		ldrsh	r3, [r1, #6]
 173:lvgl/src/lv_port_disp.c ****         for(y = area->y1; y <= area->y2; y++) {
  74              		.loc 1 173 29 discriminator 1 view .LVU18
  75 0020 6345     		cmp	r3, ip
  76 0022 02DB     		blt	.L2
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  77              		.loc 1 174 13 is_stmt 1 view .LVU19
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  78              		.loc 1 174 25 is_stmt 0 view .LVU20
  79 0024 B1F90030 		ldrsh	r3, [r1]
  80              	.LVL5:
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  81              		.loc 1 174 13 view .LVU21
  82 0028 F2E7     		b	.L4
  83              	.LVL6:
  84              	.L2:
 174:lvgl/src/lv_port_disp.c ****             for(x = area->x1; x <= area->x2; x++) {
  85              		.loc 1 174 13 view .LVU22
  86              	.LBE2:
 178:lvgl/src/lv_port_disp.c ****             }
 179:lvgl/src/lv_port_disp.c ****         }
 180:lvgl/src/lv_port_disp.c ****     }
 181:lvgl/src/lv_port_disp.c **** 
 182:lvgl/src/lv_port_disp.c ****     /*IMPORTANT!!!
 183:lvgl/src/lv_port_disp.c ****      *Inform the graphics library that you are ready with the flushing*/
 184:lvgl/src/lv_port_disp.c ****     lv_disp_flush_ready(disp_drv);
  87              		.loc 1 184 5 is_stmt 1 view .LVU23
  88 002a FFF7FEFF 		bl	lv_disp_flush_ready
  89              	.LVL7:
 185:lvgl/src/lv_port_disp.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 6


  90              		.loc 1 185 1 is_stmt 0 view .LVU24
  91 002e 08BD     		pop	{r3, pc}
  92              	.L9:
  93              		.align	2
  94              	.L8:
  95 0030 00000000 		.word	disp_flush_enabled
  96              		.cfi_endproc
  97              	.LFE208:
  99              		.section	.text.lv_port_disp_init,"ax",%progbits
 100              		.align	1
 101              		.global	lv_port_disp_init
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	lv_port_disp_init:
 107              	.LFB204:
  57:lvgl/src/lv_port_disp.c ****     /*-------------------------
 108              		.loc 1 57 1 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112 0000 38B5     		push	{r3, r4, r5, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 3, -16
 116              		.cfi_offset 4, -12
 117              		.cfi_offset 5, -8
 118              		.cfi_offset 14, -4
  61:lvgl/src/lv_port_disp.c **** 
 119              		.loc 1 61 5 view .LVU26
  89:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_1[MY_DISP_HOR_RES * 10];                          /*A buffer for 10 rows*
 120              		.loc 1 89 5 view .LVU27
  90:lvgl/src/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_1, buf_1, NULL, MY_DISP_HOR_RES * 10);   /*Initialize the d
 121              		.loc 1 90 5 view .LVU28
  91:lvgl/src/lv_port_disp.c **** 
 122              		.loc 1 91 5 view .LVU29
 123 0002 134D     		ldr	r5, .L12
 124 0004 4FF44863 		mov	r3, #3200
 125 0008 0022     		movs	r2, #0
 126 000a 1249     		ldr	r1, .L12+4
 127 000c 2846     		mov	r0, r5
 128 000e FFF7FEFF 		bl	lv_disp_draw_buf_init
 129              	.LVL8:
  94:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_2_1[MY_DISP_HOR_RES * 10];                        /*A buffer for 10 rows*
 130              		.loc 1 94 5 view .LVU30
  95:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_2_2[MY_DISP_HOR_RES * 10];                        /*An other buffer for 1
 131              		.loc 1 95 5 view .LVU31
  96:lvgl/src/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 10);   /*Initialize 
 132              		.loc 1 96 5 view .LVU32
  97:lvgl/src/lv_port_disp.c **** 
 133              		.loc 1 97 5 view .LVU33
 134 0012 4FF44863 		mov	r3, #3200
 135 0016 104A     		ldr	r2, .L12+8
 136 0018 1049     		ldr	r1, .L12+12
 137 001a 1148     		ldr	r0, .L12+16
 138 001c FFF7FEFF 		bl	lv_disp_draw_buf_init
 139              	.LVL9:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 7


 100:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_3_1[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*A screen sized buffe
 140              		.loc 1 100 5 view .LVU34
 101:lvgl/src/lv_port_disp.c ****     static lv_color_t buf_3_2[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*Another screen sized
 141              		.loc 1 101 5 view .LVU35
 102:lvgl/src/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2,
 142              		.loc 1 102 5 view .LVU36
 103:lvgl/src/lv_port_disp.c ****                           MY_DISP_VER_RES * LV_VER_RES_MAX);   /*Initialize the display buffer*/
 143              		.loc 1 103 5 view .LVU37
 144 0020 4FF4E143 		mov	r3, #28800
 145 0024 0F4A     		ldr	r2, .L12+20
 146 0026 1049     		ldr	r1, .L12+24
 147 0028 1048     		ldr	r0, .L12+28
 148 002a FFF7FEFF 		bl	lv_disp_draw_buf_init
 149              	.LVL10:
 110:lvgl/src/lv_port_disp.c ****     lv_disp_drv_init(&disp_drv);                    /*Basic initialization*/
 150              		.loc 1 110 5 view .LVU38
 111:lvgl/src/lv_port_disp.c **** 
 151              		.loc 1 111 5 view .LVU39
 152 002e 104C     		ldr	r4, .L12+32
 153 0030 2046     		mov	r0, r4
 154 0032 FFF7FEFF 		bl	lv_disp_drv_init
 155              	.LVL11:
 116:lvgl/src/lv_port_disp.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 156              		.loc 1 116 5 view .LVU40
 116:lvgl/src/lv_port_disp.c ****     disp_drv.ver_res = MY_DISP_VER_RES;
 157              		.loc 1 116 22 is_stmt 0 view .LVU41
 158 0036 4FF4A073 		mov	r3, #320
 159 003a 2380     		strh	r3, [r4]	@ movhi
 117:lvgl/src/lv_port_disp.c **** 
 160              		.loc 1 117 5 is_stmt 1 view .LVU42
 117:lvgl/src/lv_port_disp.c **** 
 161              		.loc 1 117 22 is_stmt 0 view .LVU43
 162 003c F023     		movs	r3, #240
 163 003e 6380     		strh	r3, [r4, #2]	@ movhi
 120:lvgl/src/lv_port_disp.c **** 
 164              		.loc 1 120 5 is_stmt 1 view .LVU44
 120:lvgl/src/lv_port_disp.c **** 
 165              		.loc 1 120 23 is_stmt 0 view .LVU45
 166 0040 0C4B     		ldr	r3, .L12+36
 167 0042 6361     		str	r3, [r4, #20]
 123:lvgl/src/lv_port_disp.c **** 
 168              		.loc 1 123 5 is_stmt 1 view .LVU46
 123:lvgl/src/lv_port_disp.c **** 
 169              		.loc 1 123 23 is_stmt 0 view .LVU47
 170 0044 E560     		str	r5, [r4, #12]
 134:lvgl/src/lv_port_disp.c **** }
 171              		.loc 1 134 5 is_stmt 1 view .LVU48
 172 0046 2046     		mov	r0, r4
 173 0048 FFF7FEFF 		bl	lv_disp_drv_register
 174              	.LVL12:
 135:lvgl/src/lv_port_disp.c **** 
 175              		.loc 1 135 1 is_stmt 0 view .LVU49
 176 004c 38BD     		pop	{r3, r4, r5, pc}
 177              	.L13:
 178 004e 00BF     		.align	2
 179              	.L12:
 180 0050 00000000 		.word	draw_buf_dsc_1.8
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 8


 181 0054 00000000 		.word	buf_1.7
 182 0058 00000000 		.word	buf_2_2.4
 183 005c 00000000 		.word	buf_2_1.5
 184 0060 00000000 		.word	draw_buf_dsc_2.6
 185 0064 00000000 		.word	buf_3_2.1
 186 0068 00000000 		.word	buf_3_1.2
 187 006c 00000000 		.word	draw_buf_dsc_3.3
 188 0070 00000000 		.word	disp_drv.0
 189 0074 00000000 		.word	disp_flush
 190              		.cfi_endproc
 191              	.LFE204:
 193              		.section	.text.disp_enable_update,"ax",%progbits
 194              		.align	1
 195              		.global	disp_enable_update
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	disp_enable_update:
 201              	.LFB206:
 152:lvgl/src/lv_port_disp.c ****     disp_flush_enabled = true;
 202              		.loc 1 152 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 153:lvgl/src/lv_port_disp.c **** }
 207              		.loc 1 153 5 view .LVU51
 153:lvgl/src/lv_port_disp.c **** }
 208              		.loc 1 153 24 is_stmt 0 view .LVU52
 209 0000 014B     		ldr	r3, .L15
 210 0002 0122     		movs	r2, #1
 211 0004 1A70     		strb	r2, [r3]
 154:lvgl/src/lv_port_disp.c **** 
 212              		.loc 1 154 1 view .LVU53
 213 0006 7047     		bx	lr
 214              	.L16:
 215              		.align	2
 216              	.L15:
 217 0008 00000000 		.word	disp_flush_enabled
 218              		.cfi_endproc
 219              	.LFE206:
 221              		.section	.text.disp_disable_update,"ax",%progbits
 222              		.align	1
 223              		.global	disp_disable_update
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	disp_disable_update:
 229              	.LFB207:
 159:lvgl/src/lv_port_disp.c ****     disp_flush_enabled = false;
 230              		.loc 1 159 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		@ link register save eliminated.
 160:lvgl/src/lv_port_disp.c **** }
 235              		.loc 1 160 5 view .LVU55
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 9


 160:lvgl/src/lv_port_disp.c **** }
 236              		.loc 1 160 24 is_stmt 0 view .LVU56
 237 0000 014B     		ldr	r3, .L18
 238 0002 0022     		movs	r2, #0
 239 0004 1A70     		strb	r2, [r3]
 161:lvgl/src/lv_port_disp.c **** 
 240              		.loc 1 161 1 view .LVU57
 241 0006 7047     		bx	lr
 242              	.L19:
 243              		.align	2
 244              	.L18:
 245 0008 00000000 		.word	disp_flush_enabled
 246              		.cfi_endproc
 247              	.LFE207:
 249              		.section	.bss.disp_drv.0,"aw",%nobits
 250              		.align	2
 253              	disp_drv.0:
 254 0000 00000000 		.space	80
 254      00000000 
 254      00000000 
 254      00000000 
 254      00000000 
 255              		.section	.bss.buf_3_2.1,"aw",%nobits
 256              		.align	2
 259              	buf_3_2.1:
 260 0000 00000000 		.space	153600
 260      00000000 
 260      00000000 
 260      00000000 
 260      00000000 
 261              		.section	.bss.buf_3_1.2,"aw",%nobits
 262              		.align	2
 265              	buf_3_1.2:
 266 0000 00000000 		.space	153600
 266      00000000 
 266      00000000 
 266      00000000 
 266      00000000 
 267              		.section	.bss.draw_buf_dsc_3.3,"aw",%nobits
 268              		.align	2
 271              	draw_buf_dsc_3.3:
 272 0000 00000000 		.space	28
 272      00000000 
 272      00000000 
 272      00000000 
 272      00000000 
 273              		.section	.bss.buf_2_2.4,"aw",%nobits
 274              		.align	2
 277              	buf_2_2.4:
 278 0000 00000000 		.space	6400
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.section	.bss.buf_2_1.5,"aw",%nobits
 280              		.align	2
 283              	buf_2_1.5:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 10


 284 0000 00000000 		.space	6400
 284      00000000 
 284      00000000 
 284      00000000 
 284      00000000 
 285              		.section	.bss.draw_buf_dsc_2.6,"aw",%nobits
 286              		.align	2
 289              	draw_buf_dsc_2.6:
 290 0000 00000000 		.space	28
 290      00000000 
 290      00000000 
 290      00000000 
 290      00000000 
 291              		.section	.bss.buf_1.7,"aw",%nobits
 292              		.align	2
 295              	buf_1.7:
 296 0000 00000000 		.space	6400
 296      00000000 
 296      00000000 
 296      00000000 
 296      00000000 
 297              		.section	.bss.draw_buf_dsc_1.8,"aw",%nobits
 298              		.align	2
 301              	draw_buf_dsc_1.8:
 302 0000 00000000 		.space	28
 302      00000000 
 302      00000000 
 302      00000000 
 302      00000000 
 303              		.global	disp_flush_enabled
 304              		.section	.data.disp_flush_enabled,"aw"
 307              	disp_flush_enabled:
 308 0000 01       		.byte	1
 309              		.text
 310              	.Letext0:
 311              		.file 2 "/usr/local/include/sys/_types/_int8_t.h"
 312              		.file 3 "/usr/local/include/sys/_types/_int16_t.h"
 313              		.file 4 "/usr/local/include/sys/_types/_int32_t.h"
 314              		.file 5 "/usr/local/include/_types/_uint8_t.h"
 315              		.file 6 "/usr/local/include/_types/_uint16_t.h"
 316              		.file 7 "/usr/local/include/_types/_uint32_t.h"
 317              		.file 8 "/usr/local/include/arm/_types.h"
 318              		.file 9 "lvgl/src/../src/misc/lv_types.h"
 319              		.file 10 "lvgl/src/../src/misc/lv_timer.h"
 320              		.file 11 "/usr/local/include/sys/_types/_size_t.h"
 321              		.file 12 "lvgl/src/../src/hal/../draw/../misc/../font/../misc/lv_area.h"
 322              		.file 13 "lvgl/src/../src/hal/../draw/../misc/../font/lv_font.h"
 323              		.file 14 "lvgl/src/../src/hal/../draw/../misc/lv_color.h"
 324              		.file 15 "lvgl/src/../src/hal/../draw/../misc/lv_txt.h"
 325              		.file 16 "lvgl/src/../src/hal/../draw/../misc/lv_bidi.h"
 326              		.file 17 "lvgl/src/../src/hal/../draw/../misc/lv_style.h"
 327              		.file 18 "lvgl/src/../src/hal/../draw/lv_img_buf.h"
 328              		.file 19 "lvgl/src/../src/core/lv_obj.h"
 329              		.file 20 "lvgl/src/../src/hal/../draw/lv_draw_rect.h"
 330              		.file 21 "lvgl/src/../src/hal/../draw/lv_draw_label.h"
 331              		.file 22 "lvgl/src/../src/hal/../draw/lv_draw_img.h"
 332              		.file 23 "lvgl/src/../src/hal/../draw/lv_draw_line.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 11


 333              		.file 24 "lvgl/src/../src/hal/../draw/lv_draw_arc.h"
 334              		.file 25 "lvgl/src/../src/hal/../draw/lv_draw_layer.h"
 335              		.file 26 "lvgl/src/../src/hal/../draw/lv_draw.h"
 336              		.file 27 "lvgl/src/../src/hal/../misc/lv_ll.h"
 337              		.file 28 "lvgl/src/../src/hal/lv_hal_disp.h"
 338              		.file 29 "lvgl/src/../src/core/lv_theme.h"
 339              		.file 30 "lvgl/src/../src/core/lv_group.h"
 340              		.file 31 "lvgl/src/../src/core/lv_obj_scroll.h"
 341              		.file 32 "lvgl/src/../src/core/lv_obj_style.h"
 342              		.file 33 "lvgl/src/../src/core/lv_obj_class.h"
 343              		.file 34 "lvgl/src/../src/core/lv_event.h"
 344              		.file 35 "lvgl/src/../src/widgets/lv_bar.h"
 345              		.file 36 "lvgl/src/../src/extra/widgets/imgbtn/lv_imgbtn.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 lv_port_disp.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:21     .text.disp_flush:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:26     .text.disp_flush:00000000 disp_flush
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:95     .text.disp_flush:00000030 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:307    .data.disp_flush_enabled:00000000 disp_flush_enabled
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:100    .text.lv_port_disp_init:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:106    .text.lv_port_disp_init:00000000 lv_port_disp_init
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:180    .text.lv_port_disp_init:00000050 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:301    .bss.draw_buf_dsc_1.8:00000000 draw_buf_dsc_1.8
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:295    .bss.buf_1.7:00000000 buf_1.7
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:277    .bss.buf_2_2.4:00000000 buf_2_2.4
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:283    .bss.buf_2_1.5:00000000 buf_2_1.5
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:289    .bss.draw_buf_dsc_2.6:00000000 draw_buf_dsc_2.6
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:259    .bss.buf_3_2.1:00000000 buf_3_2.1
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:265    .bss.buf_3_1.2:00000000 buf_3_1.2
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:271    .bss.draw_buf_dsc_3.3:00000000 draw_buf_dsc_3.3
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:253    .bss.disp_drv.0:00000000 disp_drv.0
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:194    .text.disp_enable_update:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:200    .text.disp_enable_update:00000000 disp_enable_update
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:217    .text.disp_enable_update:00000008 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:222    .text.disp_disable_update:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:228    .text.disp_disable_update:00000000 disp_disable_update
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:245    .text.disp_disable_update:00000008 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:250    .bss.disp_drv.0:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:256    .bss.buf_3_2.1:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:262    .bss.buf_3_1.2:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:268    .bss.draw_buf_dsc_3.3:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:274    .bss.buf_2_2.4:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:280    .bss.buf_2_1.5:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:286    .bss.draw_buf_dsc_2.6:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:292    .bss.buf_1.7:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccCUNgU3.s:298    .bss.draw_buf_dsc_1.8:00000000 $d

UNDEFINED SYMBOLS
lv_disp_flush_ready
lv_disp_draw_buf_init
lv_disp_drv_init
lv_disp_drv_register
