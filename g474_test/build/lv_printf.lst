ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_printf.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/misc/lv_printf.c"
  20              		.section	.text._out_buffer,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_out_buffer:
  27              	.LVL0:
  28              	.LFB0:
   1:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:lvgl/src/misc/lv_printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:lvgl/src/misc/lv_printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:lvgl/src/misc/lv_printf.c **** //
   5:lvgl/src/misc/lv_printf.c **** // \license The MIT License (MIT)
   6:lvgl/src/misc/lv_printf.c **** //
   7:lvgl/src/misc/lv_printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:lvgl/src/misc/lv_printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:lvgl/src/misc/lv_printf.c **** // in the Software without restriction, including without limitation the rights
  10:lvgl/src/misc/lv_printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:lvgl/src/misc/lv_printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:lvgl/src/misc/lv_printf.c **** // furnished to do so, subject to the following conditions:
  13:lvgl/src/misc/lv_printf.c **** //
  14:lvgl/src/misc/lv_printf.c **** // The above copyright notice and this permission notice shall be included in
  15:lvgl/src/misc/lv_printf.c **** // all copies or substantial portions of the Software.
  16:lvgl/src/misc/lv_printf.c **** //
  17:lvgl/src/misc/lv_printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:lvgl/src/misc/lv_printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:lvgl/src/misc/lv_printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:lvgl/src/misc/lv_printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:lvgl/src/misc/lv_printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:lvgl/src/misc/lv_printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:lvgl/src/misc/lv_printf.c **** // THE SOFTWARE.
  24:lvgl/src/misc/lv_printf.c **** //
  25:lvgl/src/misc/lv_printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:lvgl/src/misc/lv_printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:lvgl/src/misc/lv_printf.c **** //        safe and reentrant!
  28:lvgl/src/misc/lv_printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:lvgl/src/misc/lv_printf.c **** //        malloc for printf (and may not be thread safe).
  30:lvgl/src/misc/lv_printf.c **** //
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 2


  31:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  32:lvgl/src/misc/lv_printf.c **** 
  33:lvgl/src/misc/lv_printf.c **** /*Original repository: https://github.com/mpaland/printf*/
  34:lvgl/src/misc/lv_printf.c **** 
  35:lvgl/src/misc/lv_printf.c **** #include "lv_printf.h"
  36:lvgl/src/misc/lv_printf.c **** 
  37:lvgl/src/misc/lv_printf.c **** #if LV_SPRINTF_CUSTOM == 0
  38:lvgl/src/misc/lv_printf.c **** 
  39:lvgl/src/misc/lv_printf.c **** #include <stdbool.h>
  40:lvgl/src/misc/lv_printf.c **** 
  41:lvgl/src/misc/lv_printf.c **** #define PRINTF_DISABLE_SUPPORT_FLOAT    (!LV_SPRINTF_USE_FLOAT)
  42:lvgl/src/misc/lv_printf.c **** 
  43:lvgl/src/misc/lv_printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  44:lvgl/src/misc/lv_printf.c **** // numeric number including padded zeros (dynamically created on stack)
  45:lvgl/src/misc/lv_printf.c **** // default: 32 byte
  46:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  47:lvgl/src/misc/lv_printf.c ****     #define PRINTF_NTOA_BUFFER_SIZE    32U
  48:lvgl/src/misc/lv_printf.c **** #endif
  49:lvgl/src/misc/lv_printf.c **** 
  50:lvgl/src/misc/lv_printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  51:lvgl/src/misc/lv_printf.c **** // float number including padded zeros (dynamically created on stack)
  52:lvgl/src/misc/lv_printf.c **** // default: 32 byte
  53:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  54:lvgl/src/misc/lv_printf.c ****     #define PRINTF_FTOA_BUFFER_SIZE    32U
  55:lvgl/src/misc/lv_printf.c **** #endif
  56:lvgl/src/misc/lv_printf.c **** 
  57:lvgl/src/misc/lv_printf.c **** // support for the floating point type (%f)
  58:lvgl/src/misc/lv_printf.c **** // default: activated
  59:lvgl/src/misc/lv_printf.c **** #if !PRINTF_DISABLE_SUPPORT_FLOAT
  60:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_FLOAT
  61:lvgl/src/misc/lv_printf.c **** #endif
  62:lvgl/src/misc/lv_printf.c **** 
  63:lvgl/src/misc/lv_printf.c **** // support for exponential floating point notation (%e/%g)
  64:lvgl/src/misc/lv_printf.c **** // default: activated
  65:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  66:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_EXPONENTIAL
  67:lvgl/src/misc/lv_printf.c **** #endif
  68:lvgl/src/misc/lv_printf.c **** 
  69:lvgl/src/misc/lv_printf.c **** // define the default floating point precision
  70:lvgl/src/misc/lv_printf.c **** // default: 6 digits
  71:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  72:lvgl/src/misc/lv_printf.c ****     #define PRINTF_DEFAULT_FLOAT_PRECISION 6U
  73:lvgl/src/misc/lv_printf.c **** #endif
  74:lvgl/src/misc/lv_printf.c **** 
  75:lvgl/src/misc/lv_printf.c **** // define the largest float suitable to print with %f
  76:lvgl/src/misc/lv_printf.c **** // default: 1e9
  77:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_MAX_FLOAT
  78:lvgl/src/misc/lv_printf.c ****     #define PRINTF_MAX_FLOAT 1e9
  79:lvgl/src/misc/lv_printf.c **** #endif
  80:lvgl/src/misc/lv_printf.c **** 
  81:lvgl/src/misc/lv_printf.c **** // support for the long long types (%llu or %p)
  82:lvgl/src/misc/lv_printf.c **** // default: activated
  83:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  84:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_LONG_LONG
  85:lvgl/src/misc/lv_printf.c **** #endif
  86:lvgl/src/misc/lv_printf.c **** 
  87:lvgl/src/misc/lv_printf.c **** // support for the ptrdiff_t type (%t)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 3


  88:lvgl/src/misc/lv_printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
  89:lvgl/src/misc/lv_printf.c **** // default: activated
  90:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  91:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_PTRDIFF_T
  92:lvgl/src/misc/lv_printf.c **** #endif
  93:lvgl/src/misc/lv_printf.c **** 
  94:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  95:lvgl/src/misc/lv_printf.c **** 
  96:lvgl/src/misc/lv_printf.c **** // internal flag definitions
  97:lvgl/src/misc/lv_printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
  98:lvgl/src/misc/lv_printf.c **** #define FLAGS_LEFT      (1U <<  1U)
  99:lvgl/src/misc/lv_printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 100:lvgl/src/misc/lv_printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 101:lvgl/src/misc/lv_printf.c **** #define FLAGS_HASH      (1U <<  4U)
 102:lvgl/src/misc/lv_printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 103:lvgl/src/misc/lv_printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 104:lvgl/src/misc/lv_printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 105:lvgl/src/misc/lv_printf.c **** #define FLAGS_LONG      (1U <<  8U)
 106:lvgl/src/misc/lv_printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 107:lvgl/src/misc/lv_printf.c **** #define FLAGS_PRECISION (1U << 10U)
 108:lvgl/src/misc/lv_printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 109:lvgl/src/misc/lv_printf.c **** 
 110:lvgl/src/misc/lv_printf.c **** // import float.h for DBL_MAX
 111:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 112:lvgl/src/misc/lv_printf.c ****     #include <float.h>
 113:lvgl/src/misc/lv_printf.c **** #endif
 114:lvgl/src/misc/lv_printf.c **** 
 115:lvgl/src/misc/lv_printf.c **** // output function type
 116:lvgl/src/misc/lv_printf.c **** typedef void (*out_fct_type)(char character, void * buffer, size_t idx, size_t maxlen);
 117:lvgl/src/misc/lv_printf.c **** 
 118:lvgl/src/misc/lv_printf.c **** // wrapper (used as buffer) for output function type
 119:lvgl/src/misc/lv_printf.c **** typedef struct {
 120:lvgl/src/misc/lv_printf.c ****     void (*fct)(char character, void * arg);
 121:lvgl/src/misc/lv_printf.c ****     void * arg;
 122:lvgl/src/misc/lv_printf.c **** } out_fct_wrap_type;
 123:lvgl/src/misc/lv_printf.c **** 
 124:lvgl/src/misc/lv_printf.c **** // internal buffer output
 125:lvgl/src/misc/lv_printf.c **** static inline void _out_buffer(char character, void * buffer, size_t idx, size_t maxlen)
 126:lvgl/src/misc/lv_printf.c **** {
  29              		.loc 1 126 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 127:lvgl/src/misc/lv_printf.c ****     if(idx < maxlen) {
  34              		.loc 1 127 5 view .LVU1
  35              		.loc 1 127 7 is_stmt 0 view .LVU2
  36 0000 9A42     		cmp	r2, r3
  37 0002 00D2     		bcs	.L1
 128:lvgl/src/misc/lv_printf.c ****         ((char *)buffer)[idx] = character;
  38              		.loc 1 128 9 is_stmt 1 view .LVU3
  39              		.loc 1 128 31 is_stmt 0 view .LVU4
  40 0004 8854     		strb	r0, [r1, r2]
  41              	.L1:
 129:lvgl/src/misc/lv_printf.c ****     }
 130:lvgl/src/misc/lv_printf.c **** }
  42              		.loc 1 130 1 view .LVU5
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 4


  43 0006 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text._out_null,"ax",%progbits
  48              		.align	1
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	_out_null:
  54              	.LVL1:
  55              	.LFB1:
 131:lvgl/src/misc/lv_printf.c **** 
 132:lvgl/src/misc/lv_printf.c **** // internal null output
 133:lvgl/src/misc/lv_printf.c **** static inline void _out_null(char character, void * buffer, size_t idx, size_t maxlen)
 134:lvgl/src/misc/lv_printf.c **** {
  56              		.loc 1 134 1 is_stmt 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
 135:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(character);
  61              		.loc 1 135 5 view .LVU7
 136:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(buffer);
  62              		.loc 1 136 5 view .LVU8
 137:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(idx);
  63              		.loc 1 137 5 view .LVU9
 138:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(maxlen);
  64              		.loc 1 138 5 view .LVU10
 139:lvgl/src/misc/lv_printf.c **** }
  65              		.loc 1 139 1 is_stmt 0 view .LVU11
  66 0000 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE1:
  70              		.section	.text._atoi,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	_atoi:
  77              	.LVL2:
  78              	.LFB4:
 140:lvgl/src/misc/lv_printf.c **** 
 141:lvgl/src/misc/lv_printf.c **** // internal secure strlen
 142:lvgl/src/misc/lv_printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 143:lvgl/src/misc/lv_printf.c **** static inline unsigned int _strnlen_s(const char * str, size_t maxsize)
 144:lvgl/src/misc/lv_printf.c **** {
 145:lvgl/src/misc/lv_printf.c ****     const char * s;
 146:lvgl/src/misc/lv_printf.c ****     for(s = str; *s && maxsize--; ++s);
 147:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 148:lvgl/src/misc/lv_printf.c **** }
 149:lvgl/src/misc/lv_printf.c **** 
 150:lvgl/src/misc/lv_printf.c **** // internal test if char is a digit (0-9)
 151:lvgl/src/misc/lv_printf.c **** // \return true if char is a digit
 152:lvgl/src/misc/lv_printf.c **** static inline bool _is_digit(char ch)
 153:lvgl/src/misc/lv_printf.c **** {
 154:lvgl/src/misc/lv_printf.c ****     return (ch >= '0') && (ch <= '9');
 155:lvgl/src/misc/lv_printf.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 5


 156:lvgl/src/misc/lv_printf.c **** 
 157:lvgl/src/misc/lv_printf.c **** // internal ASCII string to unsigned int conversion
 158:lvgl/src/misc/lv_printf.c **** static unsigned int _atoi(const char ** str)
 159:lvgl/src/misc/lv_printf.c **** {
  79              		.loc 1 159 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              		.loc 1 159 1 is_stmt 0 view .LVU13
  85 0000 0146     		mov	r1, r0
 160:lvgl/src/misc/lv_printf.c ****     unsigned int i = 0U;
  86              		.loc 1 160 5 is_stmt 1 view .LVU14
  87              	.LVL3:
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
  88              		.loc 1 161 5 view .LVU15
 160:lvgl/src/misc/lv_printf.c ****     unsigned int i = 0U;
  89              		.loc 1 160 18 is_stmt 0 view .LVU16
  90 0002 0020     		movs	r0, #0
  91              	.LVL4:
  92              		.loc 1 161 10 view .LVU17
  93 0004 08E0     		b	.L5
  94              	.LVL5:
  95              	.L6:
 162:lvgl/src/misc/lv_printf.c ****         i = i * 10U + (unsigned int)(*((*str)++) - '0');
  96              		.loc 1 162 9 is_stmt 1 view .LVU18
  97              		.loc 1 162 15 is_stmt 0 view .LVU19
  98 0006 00EB8000 		add	r0, r0, r0, lsl #2
  99              	.LVL6:
 100              		.loc 1 162 46 view .LVU20
 101 000a 531C     		adds	r3, r2, #1
 102 000c 0B60     		str	r3, [r1]
 103              		.loc 1 162 38 view .LVU21
 104 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 105              		.loc 1 162 21 view .LVU22
 106 0010 03EB4003 		add	r3, r3, r0, lsl #1
 107              		.loc 1 162 11 view .LVU23
 108 0014 A3F13000 		sub	r0, r3, #48
 109              	.LVL7:
 110              	.L5:
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
 111              		.loc 1 161 11 is_stmt 1 view .LVU24
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
 112              		.loc 1 161 22 is_stmt 0 view .LVU25
 113 0018 0A68     		ldr	r2, [r1]
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
 114              		.loc 1 161 11 view .LVU26
 115 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 116              	.LVL8:
 117              	.LBB20:
 118              	.LBI20:
 152:lvgl/src/misc/lv_printf.c **** {
 119              		.loc 1 152 20 is_stmt 1 view .LVU27
 120              	.LBB21:
 154:lvgl/src/misc/lv_printf.c **** }
 121              		.loc 1 154 5 view .LVU28
 154:lvgl/src/misc/lv_printf.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 6


 122              		.loc 1 154 24 is_stmt 0 view .LVU29
 123 001c 303B     		subs	r3, r3, #48
 124 001e DBB2     		uxtb	r3, r3
 125              	.LVL9:
 154:lvgl/src/misc/lv_printf.c **** }
 126              		.loc 1 154 24 view .LVU30
 127              	.LBE21:
 128              	.LBE20:
 161:lvgl/src/misc/lv_printf.c ****         i = i * 10U + (unsigned int)(*((*str)++) - '0');
 129              		.loc 1 161 11 view .LVU31
 130 0020 092B     		cmp	r3, #9
 131 0022 F0D9     		bls	.L6
 163:lvgl/src/misc/lv_printf.c ****     }
 164:lvgl/src/misc/lv_printf.c ****     return i;
 132              		.loc 1 164 5 is_stmt 1 view .LVU32
 165:lvgl/src/misc/lv_printf.c **** }
 133              		.loc 1 165 1 is_stmt 0 view .LVU33
 134 0024 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE4:
 138              		.section	.text._out_rev,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	_out_rev:
 145              	.LVL10:
 146              	.LFB5:
 166:lvgl/src/misc/lv_printf.c **** 
 167:lvgl/src/misc/lv_printf.c **** // output the specified string in reverse, taking care of any zero-padding
 168:lvgl/src/misc/lv_printf.c **** static size_t _out_rev(out_fct_type out, char * buffer, size_t idx, size_t maxlen, const char * buf
 169:lvgl/src/misc/lv_printf.c ****                        unsigned int width, unsigned int flags)
 170:lvgl/src/misc/lv_printf.c **** {
 147              		.loc 1 170 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 16, pretend = 0, frame = 8
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		.loc 1 170 1 is_stmt 0 view .LVU35
 152 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 153              	.LCFI0:
 154              		.cfi_def_cfa_offset 36
 155              		.cfi_offset 4, -36
 156              		.cfi_offset 5, -32
 157              		.cfi_offset 6, -28
 158              		.cfi_offset 7, -24
 159              		.cfi_offset 8, -20
 160              		.cfi_offset 9, -16
 161              		.cfi_offset 10, -12
 162              		.cfi_offset 11, -8
 163              		.cfi_offset 14, -4
 164 0004 83B0     		sub	sp, sp, #12
 165              	.LCFI1:
 166              		.cfi_def_cfa_offset 48
 167 0006 0546     		mov	r5, r0
 168 0008 0E46     		mov	r6, r1
 169 000a 9346     		mov	fp, r2
 170 000c 1F46     		mov	r7, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 7


 171 000e DDF830A0 		ldr	r10, [sp, #48]
 172 0012 0D9C     		ldr	r4, [sp, #52]
 173 0014 DDF83890 		ldr	r9, [sp, #56]
 171:lvgl/src/misc/lv_printf.c ****     const size_t start_idx = idx;
 174              		.loc 1 171 5 is_stmt 1 view .LVU36
 175              	.LVL11:
 172:lvgl/src/misc/lv_printf.c **** 
 173:lvgl/src/misc/lv_printf.c ****     // pad spaces up to given width
 174:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 176              		.loc 1 174 5 view .LVU37
 177              		.loc 1 174 7 is_stmt 0 view .LVU38
 178 0018 0F9B     		ldr	r3, [sp, #60]
 179              	.LVL12:
 180              		.loc 1 174 7 view .LVU39
 181 001a 13F0030F 		tst	r3, #3
 182 001e 19D1     		bne	.L9
 183              	.LBB22:
 175:lvgl/src/misc/lv_printf.c ****         size_t i;
 176:lvgl/src/misc/lv_printf.c ****         for(i = len; i < width; i++) {
 184              		.loc 1 176 15 view .LVU40
 185 0020 A046     		mov	r8, r4
 186              	.LBE22:
 187 0022 0192     		str	r2, [sp, #4]
 188              	.LVL13:
 189              	.L8:
 190              	.LBB23:
 191              		.loc 1 176 24 is_stmt 1 discriminator 1 view .LVU41
 192 0024 C845     		cmp	r8, r9
 193 0026 09D2     		bcs	.L19
 177:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 194              		.loc 1 177 13 discriminator 3 view .LVU42
 195 0028 02F1010B 		add	fp, r2, #1
 196              	.LVL14:
 197              		.loc 1 177 13 is_stmt 0 discriminator 3 view .LVU43
 198 002c 3B46     		mov	r3, r7
 199 002e 3146     		mov	r1, r6
 200 0030 2020     		movs	r0, #32
 201 0032 A847     		blx	r5
 202              	.LVL15:
 176:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 203              		.loc 1 176 34 is_stmt 1 discriminator 3 view .LVU44
 204 0034 08F10108 		add	r8, r8, #1
 205              	.LVL16:
 206              		.loc 1 177 13 is_stmt 0 discriminator 3 view .LVU45
 207 0038 5A46     		mov	r2, fp
 208 003a F3E7     		b	.L8
 209              	.LVL17:
 210              	.L19:
 211              		.loc 1 177 13 discriminator 3 view .LVU46
 212 003c DDF804B0 		ldr	fp, [sp, #4]
 213 0040 08E0     		b	.L9
 214              	.LVL18:
 215              	.L12:
 216              		.loc 1 177 13 discriminator 3 view .LVU47
 217              	.LBE23:
 178:lvgl/src/misc/lv_printf.c ****         }
 179:lvgl/src/misc/lv_printf.c ****     }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 8


 180:lvgl/src/misc/lv_printf.c **** 
 181:lvgl/src/misc/lv_printf.c ****     // reverse string
 182:lvgl/src/misc/lv_printf.c ****     while(len) {
 183:lvgl/src/misc/lv_printf.c ****         out(buf[--len], buffer, idx++, maxlen);
 218              		.loc 1 183 9 is_stmt 1 view .LVU48
 219 0042 013C     		subs	r4, r4, #1
 220              	.LVL19:
 221              		.loc 1 183 9 is_stmt 0 view .LVU49
 222 0044 02F10108 		add	r8, r2, #1
 223              	.LVL20:
 224              		.loc 1 183 9 view .LVU50
 225 0048 3B46     		mov	r3, r7
 226 004a 3146     		mov	r1, r6
 227 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 228 0050 A847     		blx	r5
 229              	.LVL21:
 230 0052 4246     		mov	r2, r8
 231              	.LVL22:
 232              	.L9:
 182:lvgl/src/misc/lv_printf.c ****         out(buf[--len], buffer, idx++, maxlen);
 233              		.loc 1 182 11 is_stmt 1 view .LVU51
 234 0054 002C     		cmp	r4, #0
 235 0056 F4D1     		bne	.L12
 184:lvgl/src/misc/lv_printf.c ****     }
 185:lvgl/src/misc/lv_printf.c **** 
 186:lvgl/src/misc/lv_printf.c ****     // append pad spaces up to given width
 187:lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_LEFT) {
 236              		.loc 1 187 5 view .LVU52
 237              		.loc 1 187 7 is_stmt 0 view .LVU53
 238 0058 0F9B     		ldr	r3, [sp, #60]
 239 005a 13F0020F 		tst	r3, #2
 240 005e 03D1     		bne	.L13
 241              	.LVL23:
 242              	.L7:
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 189:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 190:lvgl/src/misc/lv_printf.c ****         }
 191:lvgl/src/misc/lv_printf.c ****     }
 192:lvgl/src/misc/lv_printf.c **** 
 193:lvgl/src/misc/lv_printf.c ****     return idx;
 194:lvgl/src/misc/lv_printf.c **** }
 243              		.loc 1 194 1 view .LVU54
 244 0060 1046     		mov	r0, r2
 245 0062 03B0     		add	sp, sp, #12
 246              	.LCFI2:
 247              		.cfi_remember_state
 248              		.cfi_def_cfa_offset 36
 249              		@ sp needed
 250 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 251              	.LVL24:
 252              	.L13:
 253              	.LCFI3:
 254              		.cfi_restore_state
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 255              		.loc 1 188 31 is_stmt 1 view .LVU55
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 256              		.loc 1 188 19 is_stmt 0 view .LVU56
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 9


 257 0068 A2EB0B03 		sub	r3, r2, fp
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 258              		.loc 1 188 31 view .LVU57
 259 006c 4B45     		cmp	r3, r9
 260 006e F7D2     		bcs	.L7
 189:lvgl/src/misc/lv_printf.c ****         }
 261              		.loc 1 189 13 is_stmt 1 view .LVU58
 262 0070 541C     		adds	r4, r2, #1
 263              	.LVL25:
 189:lvgl/src/misc/lv_printf.c ****         }
 264              		.loc 1 189 13 is_stmt 0 view .LVU59
 265 0072 3B46     		mov	r3, r7
 266 0074 3146     		mov	r1, r6
 267 0076 2020     		movs	r0, #32
 268 0078 A847     		blx	r5
 269              	.LVL26:
 270 007a 2246     		mov	r2, r4
 271 007c F4E7     		b	.L13
 272              		.cfi_endproc
 273              	.LFE5:
 275              		.section	.text._ntoa_format,"ax",%progbits
 276              		.align	1
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	_ntoa_format:
 282              	.LVL27:
 283              	.LFB6:
 195:lvgl/src/misc/lv_printf.c **** 
 196:lvgl/src/misc/lv_printf.c **** // internal itoa format
 197:lvgl/src/misc/lv_printf.c **** static size_t _ntoa_format(out_fct_type out, char * buffer, size_t idx, size_t maxlen, char * buf, 
 198:lvgl/src/misc/lv_printf.c ****                            bool negative, unsigned int base, unsigned int prec, unsigned int width,
 199:lvgl/src/misc/lv_printf.c **** {
 284              		.loc 1 199 1 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 28, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		.loc 1 199 1 is_stmt 0 view .LVU61
 289 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 290              	.LCFI4:
 291              		.cfi_def_cfa_offset 28
 292              		.cfi_offset 4, -28
 293              		.cfi_offset 5, -24
 294              		.cfi_offset 6, -20
 295              		.cfi_offset 7, -16
 296              		.cfi_offset 8, -12
 297              		.cfi_offset 9, -8
 298              		.cfi_offset 14, -4
 299 0004 85B0     		sub	sp, sp, #20
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 48
 302 0006 9946     		mov	r9, r3
 303 0008 0C9D     		ldr	r5, [sp, #48]
 304 000a 0D9C     		ldr	r4, [sp, #52]
 305 000c 9DF83880 		ldrb	r8, [sp, #56]	@ zero_extendqisi2
 306 0010 DDF840E0 		ldr	lr, [sp, #64]
 307 0014 119F     		ldr	r7, [sp, #68]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 10


 308 0016 129E     		ldr	r6, [sp, #72]
 200:lvgl/src/misc/lv_printf.c ****     // pad leading zeros
 201:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT)) {
 309              		.loc 1 201 5 is_stmt 1 view .LVU62
 310              		.loc 1 201 7 is_stmt 0 view .LVU63
 311 0018 16F0020F 		tst	r6, #2
 312 001c 21D1     		bne	.L21
 202:lvgl/src/misc/lv_printf.c ****         if(width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) 
 313              		.loc 1 202 9 is_stmt 1 view .LVU64
 314              		.loc 1 202 11 is_stmt 0 view .LVU65
 315 001e 7FB1     		cbz	r7, .L24
 316              		.loc 1 202 18 discriminator 1 view .LVU66
 317 0020 16F0010F 		tst	r6, #1
 318 0024 0CD0     		beq	.L24
 319              		.loc 1 202 45 discriminator 2 view .LVU67
 320 0026 B8F1000F 		cmp	r8, #0
 321 002a 02D1     		bne	.L23
 322              		.loc 1 202 58 discriminator 3 view .LVU68
 323 002c 16F00C0F 		tst	r6, #12
 324 0030 06D0     		beq	.L24
 325              	.L23:
 203:lvgl/src/misc/lv_printf.c ****             width--;
 326              		.loc 1 203 13 is_stmt 1 view .LVU69
 327              		.loc 1 203 18 is_stmt 0 view .LVU70
 328 0032 013F     		subs	r7, r7, #1
 329              	.LVL28:
 330              		.loc 1 203 18 view .LVU71
 331 0034 04E0     		b	.L24
 332              	.LVL29:
 333              	.L26:
 204:lvgl/src/misc/lv_printf.c ****         }
 205:lvgl/src/misc/lv_printf.c ****         while((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 206:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 334              		.loc 1 206 13 is_stmt 1 view .LVU72
 335              		.loc 1 206 24 is_stmt 0 view .LVU73
 336 0036 4FF0300C 		mov	ip, #48
 337 003a 05F804C0 		strb	ip, [r5, r4]
 338              		.loc 1 206 20 view .LVU74
 339 003e 0134     		adds	r4, r4, #1
 340              	.LVL30:
 341              	.L24:
 205:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 342              		.loc 1 205 28 is_stmt 1 view .LVU75
 343 0040 7445     		cmp	r4, lr
 344 0042 01D2     		bcs	.L27
 205:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 345              		.loc 1 205 28 is_stmt 0 discriminator 1 view .LVU76
 346 0044 1F2C     		cmp	r4, #31
 347 0046 F6D9     		bls	.L26
 348              	.L27:
 207:lvgl/src/misc/lv_printf.c ****         }
 208:lvgl/src/misc/lv_printf.c ****         while((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 349              		.loc 1 208 56 is_stmt 1 view .LVU77
 350 0048 16F0010F 		tst	r6, #1
 351 004c 09D0     		beq	.L21
 352              		.loc 1 208 39 is_stmt 0 discriminator 1 view .LVU78
 353 004e BC42     		cmp	r4, r7
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 11


 354 0050 07D2     		bcs	.L21
 355              		.loc 1 208 56 discriminator 2 view .LVU79
 356 0052 1F2C     		cmp	r4, #31
 357 0054 05D8     		bhi	.L21
 209:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 358              		.loc 1 209 13 is_stmt 1 view .LVU80
 359              	.LVL31:
 360              		.loc 1 209 24 is_stmt 0 view .LVU81
 361 0056 4FF0300C 		mov	ip, #48
 362 005a 05F804C0 		strb	ip, [r5, r4]
 363              		.loc 1 209 20 view .LVU82
 364 005e 0134     		adds	r4, r4, #1
 365              	.LVL32:
 366              		.loc 1 209 20 view .LVU83
 367 0060 F2E7     		b	.L27
 368              	.LVL33:
 369              	.L21:
 210:lvgl/src/misc/lv_printf.c ****         }
 211:lvgl/src/misc/lv_printf.c ****     }
 212:lvgl/src/misc/lv_printf.c **** 
 213:lvgl/src/misc/lv_printf.c ****     // handle hash
 214:lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_HASH) {
 370              		.loc 1 214 5 is_stmt 1 view .LVU84
 371              		.loc 1 214 7 is_stmt 0 view .LVU85
 372 0062 16F0100F 		tst	r6, #16
 373 0066 14D0     		beq	.L29
 215:lvgl/src/misc/lv_printf.c ****         if(!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 374              		.loc 1 215 9 is_stmt 1 view .LVU86
 375              		.loc 1 215 11 is_stmt 0 view .LVU87
 376 0068 16F4806F 		tst	r6, #1024
 377 006c 04D1     		bne	.L30
 378              		.loc 1 215 39 discriminator 1 view .LVU88
 379 006e 1CB1     		cbz	r4, .L30
 380              		.loc 1 215 46 discriminator 2 view .LVU89
 381 0070 7445     		cmp	r4, lr
 382 0072 22D0     		beq	.L31
 383              		.loc 1 215 64 discriminator 3 view .LVU90
 384 0074 BC42     		cmp	r4, r7
 385 0076 20D0     		beq	.L31
 386              	.LVL34:
 387              	.L30:
 216:lvgl/src/misc/lv_printf.c ****             len--;
 217:lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 218:lvgl/src/misc/lv_printf.c ****                 len--;
 219:lvgl/src/misc/lv_printf.c ****             }
 220:lvgl/src/misc/lv_printf.c ****         }
 221:lvgl/src/misc/lv_printf.c ****         if((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 388              		.loc 1 221 9 is_stmt 1 view .LVU91
 389              		.loc 1 221 11 is_stmt 0 view .LVU92
 390 0078 0F9B     		ldr	r3, [sp, #60]
 391 007a 102B     		cmp	r3, #16
 392 007c 36D0     		beq	.L41
 393              	.LVL35:
 394              	.L33:
 222:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 223:lvgl/src/misc/lv_printf.c ****         }
 224:lvgl/src/misc/lv_printf.c ****         else if((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 12


 225:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 226:lvgl/src/misc/lv_printf.c ****         }
 227:lvgl/src/misc/lv_printf.c ****         else if((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 395              		.loc 1 227 14 is_stmt 1 view .LVU93
 396              		.loc 1 227 16 is_stmt 0 view .LVU94
 397 007e 0F9B     		ldr	r3, [sp, #60]
 398 0080 022B     		cmp	r3, #2
 399 0082 3ED0     		beq	.L42
 400              	.L34:
 401              	.LVL36:
 228:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'b';
 229:lvgl/src/misc/lv_printf.c ****         }
 230:lvgl/src/misc/lv_printf.c ****         if(len < PRINTF_NTOA_BUFFER_SIZE) {
 402              		.loc 1 230 9 is_stmt 1 view .LVU95
 403              		.loc 1 230 11 is_stmt 0 view .LVU96
 404 0084 1F2C     		cmp	r4, #31
 405 0086 0ED8     		bhi	.L35
 231:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 406              		.loc 1 231 13 is_stmt 1 view .LVU97
 407              	.LVL37:
 408              		.loc 1 231 24 is_stmt 0 view .LVU98
 409 0088 4FF0300C 		mov	ip, #48
 410 008c 05F804C0 		strb	ip, [r5, r4]
 411              		.loc 1 231 20 view .LVU99
 412 0090 0134     		adds	r4, r4, #1
 413              	.LVL38:
 414              	.L29:
 232:lvgl/src/misc/lv_printf.c ****         }
 233:lvgl/src/misc/lv_printf.c ****     }
 234:lvgl/src/misc/lv_printf.c **** 
 235:lvgl/src/misc/lv_printf.c ****     if(len < PRINTF_NTOA_BUFFER_SIZE) {
 415              		.loc 1 235 5 is_stmt 1 view .LVU100
 416              		.loc 1 235 7 is_stmt 0 view .LVU101
 417 0092 1F2C     		cmp	r4, #31
 418 0094 07D8     		bhi	.L35
 236:lvgl/src/misc/lv_printf.c ****         if(negative) {
 419              		.loc 1 236 9 is_stmt 1 view .LVU102
 420              		.loc 1 236 11 is_stmt 0 view .LVU103
 421 0096 B8F1000F 		cmp	r8, #0
 422 009a 3AD0     		beq	.L36
 237:lvgl/src/misc/lv_printf.c ****             buf[len++] = '-';
 423              		.loc 1 237 13 is_stmt 1 view .LVU104
 424              	.LVL39:
 425              		.loc 1 237 24 is_stmt 0 view .LVU105
 426 009c 4FF02D0C 		mov	ip, #45
 427 00a0 05F804C0 		strb	ip, [r5, r4]
 428              		.loc 1 237 20 view .LVU106
 429 00a4 0134     		adds	r4, r4, #1
 430              	.LVL40:
 431              	.L35:
 238:lvgl/src/misc/lv_printf.c ****         }
 239:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_PLUS) {
 240:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 241:lvgl/src/misc/lv_printf.c ****         }
 242:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_SPACE) {
 243:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 244:lvgl/src/misc/lv_printf.c ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 13


 245:lvgl/src/misc/lv_printf.c ****     }
 246:lvgl/src/misc/lv_printf.c **** 
 247:lvgl/src/misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 432              		.loc 1 247 5 is_stmt 1 view .LVU107
 433              		.loc 1 247 12 is_stmt 0 view .LVU108
 434 00a6 0396     		str	r6, [sp, #12]
 435 00a8 0297     		str	r7, [sp, #8]
 436 00aa 0194     		str	r4, [sp, #4]
 437 00ac 0095     		str	r5, [sp]
 438 00ae 4B46     		mov	r3, r9
 439 00b0 FFF7FEFF 		bl	_out_rev
 440              	.LVL41:
 248:lvgl/src/misc/lv_printf.c **** }
 441              		.loc 1 248 1 view .LVU109
 442 00b4 05B0     		add	sp, sp, #20
 443              	.LCFI6:
 444              		.cfi_remember_state
 445              		.cfi_def_cfa_offset 28
 446              		@ sp needed
 447 00b6 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 448              	.LVL42:
 449              	.L31:
 450              	.LCFI7:
 451              		.cfi_restore_state
 216:lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 452              		.loc 1 216 13 is_stmt 1 view .LVU110
 217:lvgl/src/misc/lv_printf.c ****                 len--;
 453              		.loc 1 217 13 view .LVU111
 217:lvgl/src/misc/lv_printf.c ****                 len--;
 454              		.loc 1 217 15 is_stmt 0 view .LVU112
 455 00ba B4F1010C 		subs	ip, r4, #1
 456              	.LVL43:
 217:lvgl/src/misc/lv_printf.c ****                 len--;
 457              		.loc 1 217 15 view .LVU113
 458 00be 13D0     		beq	.L38
 217:lvgl/src/misc/lv_printf.c ****                 len--;
 459              		.loc 1 217 20 discriminator 1 view .LVU114
 460 00c0 0F9B     		ldr	r3, [sp, #60]
 461              	.LVL44:
 217:lvgl/src/misc/lv_printf.c ****                 len--;
 462              		.loc 1 217 20 discriminator 1 view .LVU115
 463 00c2 102B     		cmp	r3, #16
 464 00c4 0ED0     		beq	.L43
 216:lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 465              		.loc 1 216 16 view .LVU116
 466 00c6 6446     		mov	r4, ip
 467              	.LVL45:
 468              	.L32:
 224:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 469              		.loc 1 224 14 is_stmt 1 view .LVU117
 224:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 470              		.loc 1 224 16 is_stmt 0 view .LVU118
 471 00c8 0F9B     		ldr	r3, [sp, #60]
 472 00ca 102B     		cmp	r3, #16
 473 00cc D7D1     		bne	.L33
 224:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 474              		.loc 1 224 31 discriminator 1 view .LVU119
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 14


 475 00ce 16F0200F 		tst	r6, #32
 476 00d2 D4D0     		beq	.L33
 224:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 477              		.loc 1 224 60 discriminator 2 view .LVU120
 478 00d4 1F2C     		cmp	r4, #31
 479 00d6 D2D8     		bhi	.L33
 225:lvgl/src/misc/lv_printf.c ****         }
 480              		.loc 1 225 13 is_stmt 1 view .LVU121
 481              	.LVL46:
 225:lvgl/src/misc/lv_printf.c ****         }
 482              		.loc 1 225 24 is_stmt 0 view .LVU122
 483 00d8 4FF0580C 		mov	ip, #88
 484 00dc 05F804C0 		strb	ip, [r5, r4]
 225:lvgl/src/misc/lv_printf.c ****         }
 485              		.loc 1 225 20 view .LVU123
 486 00e0 0134     		adds	r4, r4, #1
 487              	.LVL47:
 225:lvgl/src/misc/lv_printf.c ****         }
 488              		.loc 1 225 24 view .LVU124
 489 00e2 CFE7     		b	.L34
 490              	.LVL48:
 491              	.L43:
 218:lvgl/src/misc/lv_printf.c ****             }
 492              		.loc 1 218 17 is_stmt 1 view .LVU125
 218:lvgl/src/misc/lv_printf.c ****             }
 493              		.loc 1 218 20 is_stmt 0 view .LVU126
 494 00e4 023C     		subs	r4, r4, #2
 495              	.LVL49:
 218:lvgl/src/misc/lv_printf.c ****             }
 496              		.loc 1 218 20 view .LVU127
 497 00e6 C7E7     		b	.L30
 498              	.LVL50:
 499              	.L38:
 216:lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 500              		.loc 1 216 16 view .LVU128
 501 00e8 6446     		mov	r4, ip
 502 00ea C5E7     		b	.L30
 503              	.LVL51:
 504              	.L41:
 221:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 505              		.loc 1 221 26 discriminator 1 view .LVU129
 506 00ec 16F0200F 		tst	r6, #32
 507 00f0 EAD1     		bne	.L32
 221:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 508              		.loc 1 221 56 discriminator 2 view .LVU130
 509 00f2 1F2C     		cmp	r4, #31
 510 00f4 E8D8     		bhi	.L32
 222:lvgl/src/misc/lv_printf.c ****         }
 511              		.loc 1 222 13 is_stmt 1 view .LVU131
 512              	.LVL52:
 222:lvgl/src/misc/lv_printf.c ****         }
 513              		.loc 1 222 24 is_stmt 0 view .LVU132
 514 00f6 4FF0780C 		mov	ip, #120
 515 00fa 05F804C0 		strb	ip, [r5, r4]
 222:lvgl/src/misc/lv_printf.c ****         }
 516              		.loc 1 222 20 view .LVU133
 517 00fe 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 15


 518              	.LVL53:
 222:lvgl/src/misc/lv_printf.c ****         }
 519              		.loc 1 222 24 view .LVU134
 520 0100 C0E7     		b	.L34
 521              	.LVL54:
 522              	.L42:
 227:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'b';
 523              		.loc 1 227 30 discriminator 1 view .LVU135
 524 0102 1F2C     		cmp	r4, #31
 525 0104 CFD8     		bhi	.L35
 228:lvgl/src/misc/lv_printf.c ****         }
 526              		.loc 1 228 13 is_stmt 1 view .LVU136
 527              	.LVL55:
 228:lvgl/src/misc/lv_printf.c ****         }
 528              		.loc 1 228 24 is_stmt 0 view .LVU137
 529 0106 4FF0620C 		mov	ip, #98
 530 010a 05F804C0 		strb	ip, [r5, r4]
 228:lvgl/src/misc/lv_printf.c ****         }
 531              		.loc 1 228 20 view .LVU138
 532 010e 0134     		adds	r4, r4, #1
 533              	.LVL56:
 228:lvgl/src/misc/lv_printf.c ****         }
 534              		.loc 1 228 20 view .LVU139
 535 0110 B8E7     		b	.L34
 536              	.L36:
 239:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 537              		.loc 1 239 14 is_stmt 1 view .LVU140
 239:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 538              		.loc 1 239 16 is_stmt 0 view .LVU141
 539 0112 16F0040F 		tst	r6, #4
 540 0116 05D0     		beq	.L37
 240:lvgl/src/misc/lv_printf.c ****         }
 541              		.loc 1 240 13 is_stmt 1 view .LVU142
 542              	.LVL57:
 240:lvgl/src/misc/lv_printf.c ****         }
 543              		.loc 1 240 24 is_stmt 0 view .LVU143
 544 0118 4FF02B0C 		mov	ip, #43
 545 011c 05F804C0 		strb	ip, [r5, r4]
 240:lvgl/src/misc/lv_printf.c ****         }
 546              		.loc 1 240 20 view .LVU144
 547 0120 0134     		adds	r4, r4, #1
 548              	.LVL58:
 240:lvgl/src/misc/lv_printf.c ****         }
 549              		.loc 1 240 20 view .LVU145
 550 0122 C0E7     		b	.L35
 551              	.L37:
 242:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 552              		.loc 1 242 14 is_stmt 1 view .LVU146
 242:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 553              		.loc 1 242 16 is_stmt 0 view .LVU147
 554 0124 16F0080F 		tst	r6, #8
 555 0128 BDD0     		beq	.L35
 243:lvgl/src/misc/lv_printf.c ****         }
 556              		.loc 1 243 13 is_stmt 1 view .LVU148
 557              	.LVL59:
 243:lvgl/src/misc/lv_printf.c ****         }
 558              		.loc 1 243 24 is_stmt 0 view .LVU149
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 16


 559 012a 4FF0200C 		mov	ip, #32
 560 012e 05F804C0 		strb	ip, [r5, r4]
 243:lvgl/src/misc/lv_printf.c ****         }
 561              		.loc 1 243 20 view .LVU150
 562 0132 0134     		adds	r4, r4, #1
 563              	.LVL60:
 243:lvgl/src/misc/lv_printf.c ****         }
 564              		.loc 1 243 20 view .LVU151
 565 0134 B7E7     		b	.L35
 566              		.cfi_endproc
 567              	.LFE6:
 569              		.section	.text._ntoa_long,"ax",%progbits
 570              		.align	1
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	_ntoa_long:
 576              	.LVL61:
 577              	.LFB7:
 249:lvgl/src/misc/lv_printf.c **** 
 250:lvgl/src/misc/lv_printf.c **** // internal itoa for 'long' type
 251:lvgl/src/misc/lv_printf.c **** static size_t _ntoa_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long 
 252:lvgl/src/misc/lv_printf.c ****                          unsigned long base, unsigned int prec, unsigned int width, unsigned int fl
 253:lvgl/src/misc/lv_printf.c **** {
 578              		.loc 1 253 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 24, pretend = 0, frame = 32
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		.loc 1 253 1 is_stmt 0 view .LVU153
 583 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 584              	.LCFI8:
 585              		.cfi_def_cfa_offset 20
 586              		.cfi_offset 4, -20
 587              		.cfi_offset 5, -16
 588              		.cfi_offset 6, -12
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 91B0     		sub	sp, sp, #68
 592              	.LCFI9:
 593              		.cfi_def_cfa_offset 88
 594 0004 169C     		ldr	r4, [sp, #88]
 595 0006 189D     		ldr	r5, [sp, #96]
 596 0008 1B9E     		ldr	r6, [sp, #108]
 254:lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_NTOA_BUFFER_SIZE];
 597              		.loc 1 254 5 is_stmt 1 view .LVU154
 255:lvgl/src/misc/lv_printf.c ****     size_t len = 0U;
 598              		.loc 1 255 5 view .LVU155
 599              	.LVL62:
 256:lvgl/src/misc/lv_printf.c **** 
 257:lvgl/src/misc/lv_printf.c ****     // no hash for 0 values
 258:lvgl/src/misc/lv_printf.c ****     if(!value) {
 600              		.loc 1 258 5 view .LVU156
 601              		.loc 1 258 7 is_stmt 0 view .LVU157
 602 000a 0CB9     		cbnz	r4, .L45
 259:lvgl/src/misc/lv_printf.c ****         flags &= ~FLAGS_HASH;
 603              		.loc 1 259 9 is_stmt 1 view .LVU158
 604              		.loc 1 259 15 is_stmt 0 view .LVU159
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 17


 605 000c 26F01006 		bic	r6, r6, #16
 606              	.LVL63:
 607              	.L45:
 260:lvgl/src/misc/lv_printf.c ****     }
 261:lvgl/src/misc/lv_printf.c **** 
 262:lvgl/src/misc/lv_printf.c ****     // write if precision != 0 and value is != 0
 263:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION) || value) {
 608              		.loc 1 263 5 is_stmt 1 view .LVU160
 609              		.loc 1 263 7 is_stmt 0 view .LVU161
 610 0010 16F4806E 		ands	lr, r6, #1024
 611 0014 16D0     		beq	.L51
 612              		.loc 1 263 35 discriminator 1 view .LVU162
 613 0016 64B3     		cbz	r4, .L52
 614 0018 4FF0000E 		mov	lr, #0
 615 001c 12E0     		b	.L51
 616              	.LVL64:
 617              	.L56:
 618              	.LBB24:
 264:lvgl/src/misc/lv_printf.c ****         do {
 265:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 266:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 619              		.loc 1 266 24 discriminator 1 view .LVU163
 620 001e 0CF1300C 		add	ip, ip, #48
 621              	.LVL65:
 622              		.loc 1 266 24 discriminator 1 view .LVU164
 623 0022 5FFA8CFC 		uxtb	ip, ip
 624              	.LVL66:
 625              	.L49:
 626              		.loc 1 266 20 discriminator 8 view .LVU165
 627 0026 0EF10107 		add	r7, lr, #1
 628              	.LVL67:
 629              		.loc 1 266 24 discriminator 8 view .LVU166
 630 002a 0EF1400E 		add	lr, lr, #64
 631 002e EE44     		add	lr, sp, lr
 632 0030 0EF820CC 		strb	ip, [lr, #-32]
 267:lvgl/src/misc/lv_printf.c ****             value /= base;
 633              		.loc 1 267 13 is_stmt 1 discriminator 8 view .LVU167
 634              		.loc 1 267 19 is_stmt 0 discriminator 8 view .LVU168
 635 0034 B4FBF5FC 		udiv	ip, r4, r5
 636              	.LVL68:
 637              		.loc 1 267 19 discriminator 8 view .LVU169
 638              	.LBE24:
 268:lvgl/src/misc/lv_printf.c ****         } while(value && (len < PRINTF_NTOA_BUFFER_SIZE));
 639              		.loc 1 268 23 is_stmt 1 discriminator 8 view .LVU170
 640 0038 AC42     		cmp	r4, r5
 641 003a 1BD3     		bcc	.L47
 642              		.loc 1 268 23 is_stmt 0 discriminator 1 view .LVU171
 643 003c 1F2F     		cmp	r7, #31
 644 003e 19D8     		bhi	.L47
 645              	.LBB25:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 646              		.loc 1 266 20 view .LVU172
 647 0040 BE46     		mov	lr, r7
 267:lvgl/src/misc/lv_printf.c ****             value /= base;
 648              		.loc 1 267 19 view .LVU173
 649 0042 6446     		mov	r4, ip
 650              	.LVL69:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 18


 651              	.L51:
 267:lvgl/src/misc/lv_printf.c ****             value /= base;
 652              		.loc 1 267 19 view .LVU174
 653              	.LBE25:
 264:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 654              		.loc 1 264 9 is_stmt 1 view .LVU175
 655              	.LBB26:
 265:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 656              		.loc 1 265 13 view .LVU176
 265:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 657              		.loc 1 265 45 is_stmt 0 view .LVU177
 658 0044 B4FBF5FC 		udiv	ip, r4, r5
 659 0048 05FB1C4C 		mls	ip, r5, ip, r4
 265:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 660              		.loc 1 265 24 view .LVU178
 661 004c 5FFA8CFC 		uxtb	ip, ip
 662              	.LVL70:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 663              		.loc 1 266 13 is_stmt 1 view .LVU179
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 664              		.loc 1 266 24 is_stmt 0 view .LVU180
 665 0050 BCF1090F 		cmp	ip, #9
 666 0054 E3D9     		bls	.L56
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 667              		.loc 1 266 91 discriminator 2 view .LVU181
 668 0056 16F0200F 		tst	r6, #32
 669 005a 08D0     		beq	.L53
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 670              		.loc 1 266 91 view .LVU182
 671 005c 4127     		movs	r7, #65
 672              	.L50:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 673              		.loc 1 266 91 discriminator 7 view .LVU183
 674 005e BC44     		add	ip, ip, r7
 675              	.LVL71:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 676              		.loc 1 266 91 discriminator 7 view .LVU184
 677 0060 5FFA8CFC 		uxtb	ip, ip
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 678              		.loc 1 266 24 discriminator 7 view .LVU185
 679 0064 ACF10A0C 		sub	ip, ip, #10
 680 0068 5FFA8CFC 		uxtb	ip, ip
 681 006c DBE7     		b	.L49
 682              	.LVL72:
 683              	.L53:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 684              		.loc 1 266 91 view .LVU186
 685 006e 6127     		movs	r7, #97
 686 0070 F5E7     		b	.L50
 687              	.LVL73:
 688              	.L52:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 689              		.loc 1 266 91 view .LVU187
 690              	.LBE26:
 255:lvgl/src/misc/lv_printf.c **** 
 691              		.loc 1 255 12 view .LVU188
 692 0072 2746     		mov	r7, r4
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 19


 693              	.LVL74:
 694              	.L47:
 269:lvgl/src/misc/lv_printf.c ****     }
 270:lvgl/src/misc/lv_printf.c **** 
 271:lvgl/src/misc/lv_printf.c ****     return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, wid
 695              		.loc 1 271 5 is_stmt 1 view .LVU189
 696              		.loc 1 271 12 is_stmt 0 view .LVU190
 697 0074 0696     		str	r6, [sp, #24]
 698 0076 1A9C     		ldr	r4, [sp, #104]
 699 0078 0594     		str	r4, [sp, #20]
 700 007a 199C     		ldr	r4, [sp, #100]
 701 007c 0494     		str	r4, [sp, #16]
 702 007e 0395     		str	r5, [sp, #12]
 703 0080 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 704 0084 0294     		str	r4, [sp, #8]
 705 0086 0197     		str	r7, [sp, #4]
 706 0088 08AC     		add	r4, sp, #32
 707 008a 0094     		str	r4, [sp]
 708 008c FFF7FEFF 		bl	_ntoa_format
 709              	.LVL75:
 272:lvgl/src/misc/lv_printf.c **** }
 710              		.loc 1 272 1 view .LVU191
 711 0090 11B0     		add	sp, sp, #68
 712              	.LCFI10:
 713              		.cfi_def_cfa_offset 20
 714              		@ sp needed
 715 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 716              		.loc 1 272 1 view .LVU192
 717              		.cfi_endproc
 718              	.LFE7:
 720              		.global	__aeabi_uldivmod
 721              		.section	.text._ntoa_long_long,"ax",%progbits
 722              		.align	1
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 727              	_ntoa_long_long:
 728              	.LVL76:
 729              	.LFB8:
 273:lvgl/src/misc/lv_printf.c **** 
 274:lvgl/src/misc/lv_printf.c **** // internal itoa for 'long long' type
 275:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 276:lvgl/src/misc/lv_printf.c **** static size_t _ntoa_long_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned 
 277:lvgl/src/misc/lv_printf.c ****                               bool negative, unsigned long long base, unsigned int prec, unsigned i
 278:lvgl/src/misc/lv_printf.c **** {
 730              		.loc 1 278 1 is_stmt 1 view -0
 731              		.cfi_startproc
 732              		@ args = 36, pretend = 0, frame = 48
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		.loc 1 278 1 is_stmt 0 view .LVU194
 735 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 736              	.LCFI11:
 737              		.cfi_def_cfa_offset 36
 738              		.cfi_offset 4, -36
 739              		.cfi_offset 5, -32
 740              		.cfi_offset 6, -28
 741              		.cfi_offset 7, -24
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 20


 742              		.cfi_offset 8, -20
 743              		.cfi_offset 9, -16
 744              		.cfi_offset 10, -12
 745              		.cfi_offset 11, -8
 746              		.cfi_offset 14, -4
 747 0004 95B0     		sub	sp, sp, #84
 748              	.LCFI12:
 749              		.cfi_def_cfa_offset 120
 750 0006 0990     		str	r0, [sp, #36]
 751 0008 0A91     		str	r1, [sp, #40]
 752 000a 0B92     		str	r2, [sp, #44]
 753 000c 9846     		mov	r8, r3
 754 000e DDF878B0 		ldr	fp, [sp, #120]
 755 0012 DDF87C90 		ldr	r9, [sp, #124]
 756 0016 229D     		ldr	r5, [sp, #136]
 757 0018 239F     		ldr	r7, [sp, #140]
 758 001a 269E     		ldr	r6, [sp, #152]
 279:lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_NTOA_BUFFER_SIZE];
 759              		.loc 1 279 5 is_stmt 1 view .LVU195
 280:lvgl/src/misc/lv_printf.c ****     size_t len = 0U;
 760              		.loc 1 280 5 view .LVU196
 761              	.LVL77:
 281:lvgl/src/misc/lv_printf.c **** 
 282:lvgl/src/misc/lv_printf.c ****     // no hash for 0 values
 283:lvgl/src/misc/lv_printf.c ****     if(!value) {
 762              		.loc 1 283 5 view .LVU197
 763              		.loc 1 283 7 is_stmt 0 view .LVU198
 764 001c 5BEA0902 		orrs	r2, fp, r9
 765              	.LVL78:
 766              		.loc 1 283 7 view .LVU199
 767 0020 01D1     		bne	.L58
 284:lvgl/src/misc/lv_printf.c ****         flags &= ~FLAGS_HASH;
 768              		.loc 1 284 9 is_stmt 1 view .LVU200
 769              		.loc 1 284 15 is_stmt 0 view .LVU201
 770 0022 26F01006 		bic	r6, r6, #16
 771              	.LVL79:
 772              	.L58:
 285:lvgl/src/misc/lv_printf.c ****     }
 286:lvgl/src/misc/lv_printf.c **** 
 287:lvgl/src/misc/lv_printf.c ****     // write if precision != 0 and value is != 0
 288:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION) || value) {
 773              		.loc 1 288 5 is_stmt 1 view .LVU202
 774              		.loc 1 288 7 is_stmt 0 view .LVU203
 775 0026 16F48064 		ands	r4, r6, #1024
 776 002a 1ED0     		beq	.L64
 777              		.loc 1 288 35 discriminator 1 view .LVU204
 778 002c 5BEA0902 		orrs	r2, fp, r9
 779 0030 2FD0     		beq	.L65
 780 0032 0024     		movs	r4, #0
 781 0034 19E0     		b	.L64
 782              	.LVL80:
 783              	.L71:
 784              	.LBB27:
 289:lvgl/src/misc/lv_printf.c ****         do {
 290:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 291:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 785              		.loc 1 291 24 discriminator 1 view .LVU205
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 21


 786 0036 3032     		adds	r2, r2, #48
 787              	.LVL81:
 788              		.loc 1 291 24 discriminator 1 view .LVU206
 789 0038 D3B2     		uxtb	r3, r2
 790              	.LVL82:
 791              	.L62:
 792              		.loc 1 291 20 discriminator 8 view .LVU207
 793 003a 04F1010A 		add	r10, r4, #1
 794              	.LVL83:
 795              		.loc 1 291 24 discriminator 8 view .LVU208
 796 003e 04F15002 		add	r2, r4, #80
 797 0042 0DEB0204 		add	r4, sp, r2
 798 0046 04F8203C 		strb	r3, [r4, #-32]
 292:lvgl/src/misc/lv_printf.c ****             value /= base;
 799              		.loc 1 292 13 is_stmt 1 discriminator 8 view .LVU209
 800              		.loc 1 292 19 is_stmt 0 discriminator 8 view .LVU210
 801 004a 2A46     		mov	r2, r5
 802 004c 3B46     		mov	r3, r7
 803 004e 5846     		mov	r0, fp
 804 0050 4946     		mov	r1, r9
 805 0052 FFF7FEFF 		bl	__aeabi_uldivmod
 806              	.LVL84:
 807              		.loc 1 292 19 discriminator 8 view .LVU211
 808              	.LBE27:
 293:lvgl/src/misc/lv_printf.c ****         } while(value && (len < PRINTF_NTOA_BUFFER_SIZE));
 809              		.loc 1 293 23 is_stmt 1 discriminator 8 view .LVU212
 810 0056 AB45     		cmp	fp, r5
 811 0058 79EB0709 		sbcs	r9, r9, r7
 812 005c 1BD3     		bcc	.L60
 813              		.loc 1 293 23 is_stmt 0 discriminator 1 view .LVU213
 814 005e BAF11F0F 		cmp	r10, #31
 815 0062 18D8     		bhi	.L60
 816              	.LBB28:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 817              		.loc 1 291 20 view .LVU214
 818 0064 5446     		mov	r4, r10
 292:lvgl/src/misc/lv_printf.c ****             value /= base;
 819              		.loc 1 292 19 view .LVU215
 820 0066 8346     		mov	fp, r0
 821 0068 8946     		mov	r9, r1
 822              	.LVL85:
 823              	.L64:
 292:lvgl/src/misc/lv_printf.c ****             value /= base;
 824              		.loc 1 292 19 view .LVU216
 825              	.LBE28:
 289:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 826              		.loc 1 289 9 is_stmt 1 view .LVU217
 827              	.LBB29:
 290:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 828              		.loc 1 290 13 view .LVU218
 290:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 829              		.loc 1 290 45 is_stmt 0 view .LVU219
 830 006a 2A46     		mov	r2, r5
 831 006c 3B46     		mov	r3, r7
 832 006e 5846     		mov	r0, fp
 833 0070 4946     		mov	r1, r9
 834 0072 FFF7FEFF 		bl	__aeabi_uldivmod
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 22


 835              	.LVL86:
 290:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 836              		.loc 1 290 24 view .LVU220
 837 0076 D2B2     		uxtb	r2, r2
 838              	.LVL87:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 839              		.loc 1 291 13 is_stmt 1 view .LVU221
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 840              		.loc 1 291 24 is_stmt 0 view .LVU222
 841 0078 092A     		cmp	r2, #9
 842 007a DCD9     		bls	.L71
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 843              		.loc 1 291 91 discriminator 2 view .LVU223
 844 007c 16F0200F 		tst	r6, #32
 845 0080 05D0     		beq	.L66
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 846              		.loc 1 291 91 view .LVU224
 847 0082 4123     		movs	r3, #65
 848              	.L63:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 849              		.loc 1 291 91 discriminator 7 view .LVU225
 850 0084 1344     		add	r3, r3, r2
 851 0086 DBB2     		uxtb	r3, r3
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 852              		.loc 1 291 24 discriminator 7 view .LVU226
 853 0088 0A3B     		subs	r3, r3, #10
 854 008a DBB2     		uxtb	r3, r3
 855 008c D5E7     		b	.L62
 856              	.L66:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 857              		.loc 1 291 91 view .LVU227
 858 008e 6123     		movs	r3, #97
 859 0090 F8E7     		b	.L63
 860              	.LVL88:
 861              	.L65:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 862              		.loc 1 291 91 view .LVU228
 863              	.LBE29:
 280:lvgl/src/misc/lv_printf.c **** 
 864              		.loc 1 280 12 view .LVU229
 865 0092 4FF0000A 		mov	r10, #0
 866              	.LVL89:
 867              	.L60:
 294:lvgl/src/misc/lv_printf.c ****     }
 295:lvgl/src/misc/lv_printf.c **** 
 296:lvgl/src/misc/lv_printf.c ****     return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, wid
 868              		.loc 1 296 5 is_stmt 1 view .LVU230
 869              		.loc 1 296 12 is_stmt 0 view .LVU231
 870 0096 0696     		str	r6, [sp, #24]
 871 0098 259B     		ldr	r3, [sp, #148]
 872 009a 0593     		str	r3, [sp, #20]
 873 009c 249B     		ldr	r3, [sp, #144]
 874 009e 0493     		str	r3, [sp, #16]
 875 00a0 0395     		str	r5, [sp, #12]
 876 00a2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 877 00a6 0293     		str	r3, [sp, #8]
 878 00a8 CDF804A0 		str	r10, [sp, #4]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 23


 879 00ac 0CAB     		add	r3, sp, #48
 880 00ae 0093     		str	r3, [sp]
 881 00b0 4346     		mov	r3, r8
 882 00b2 0B9A     		ldr	r2, [sp, #44]
 883 00b4 0A99     		ldr	r1, [sp, #40]
 884 00b6 0998     		ldr	r0, [sp, #36]
 885 00b8 FFF7FEFF 		bl	_ntoa_format
 886              	.LVL90:
 297:lvgl/src/misc/lv_printf.c **** }
 887              		.loc 1 297 1 view .LVU232
 888 00bc 15B0     		add	sp, sp, #84
 889              	.LCFI13:
 890              		.cfi_def_cfa_offset 36
 891              		@ sp needed
 892 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 893              		.loc 1 297 1 view .LVU233
 894              		.cfi_endproc
 895              	.LFE8:
 897              		.section	.text._vsnprintf,"ax",%progbits
 898              		.align	1
 899              		.syntax unified
 900              		.thumb
 901              		.thumb_func
 903              	_vsnprintf:
 904              	.LVL91:
 905              	.LFB9:
 298:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 299:lvgl/src/misc/lv_printf.c **** 
 300:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 301:lvgl/src/misc/lv_printf.c **** 
 302:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 303:lvgl/src/misc/lv_printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 304:lvgl/src/misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 305:lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags);
 306:lvgl/src/misc/lv_printf.c **** #endif
 307:lvgl/src/misc/lv_printf.c **** 
 308:lvgl/src/misc/lv_printf.c **** // internal ftoa for fixed decimal floating point
 309:lvgl/src/misc/lv_printf.c **** static size_t _ftoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 310:lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags)
 311:lvgl/src/misc/lv_printf.c **** {
 312:lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_FTOA_BUFFER_SIZE];
 313:lvgl/src/misc/lv_printf.c ****     size_t len  = 0U;
 314:lvgl/src/misc/lv_printf.c ****     double diff = 0.0;
 315:lvgl/src/misc/lv_printf.c **** 
 316:lvgl/src/misc/lv_printf.c ****     // powers of 10
 317:lvgl/src/misc/lv_printf.c ****     static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 
 318:lvgl/src/misc/lv_printf.c **** 
 319:lvgl/src/misc/lv_printf.c ****     // test for special values
 320:lvgl/src/misc/lv_printf.c ****     if(value != value)
 321:lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 322:lvgl/src/misc/lv_printf.c ****     if(value < -DBL_MAX)
 323:lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 324:lvgl/src/misc/lv_printf.c ****     if(value > DBL_MAX)
 325:lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & F
 326:lvgl/src/misc/lv_printf.c ****                         flags);
 327:lvgl/src/misc/lv_printf.c **** 
 328:lvgl/src/misc/lv_printf.c ****     // test for very large values
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 24


 329:lvgl/src/misc/lv_printf.c ****     // standard printf behavior is to print EVERY whole number digit -- which could be 100s of char
 330:lvgl/src/misc/lv_printf.c ****     if((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 331:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 332:lvgl/src/misc/lv_printf.c ****         return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 333:lvgl/src/misc/lv_printf.c **** #else
 334:lvgl/src/misc/lv_printf.c ****         return 0U;
 335:lvgl/src/misc/lv_printf.c **** #endif
 336:lvgl/src/misc/lv_printf.c ****     }
 337:lvgl/src/misc/lv_printf.c **** 
 338:lvgl/src/misc/lv_printf.c ****     // test for negative
 339:lvgl/src/misc/lv_printf.c ****     bool negative = false;
 340:lvgl/src/misc/lv_printf.c ****     if(value < 0) {
 341:lvgl/src/misc/lv_printf.c ****         negative = true;
 342:lvgl/src/misc/lv_printf.c ****         value = 0 - value;
 343:lvgl/src/misc/lv_printf.c ****     }
 344:lvgl/src/misc/lv_printf.c **** 
 345:lvgl/src/misc/lv_printf.c ****     // set default precision, if not set explicitly
 346:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION)) {
 347:lvgl/src/misc/lv_printf.c ****         prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 348:lvgl/src/misc/lv_printf.c ****     }
 349:lvgl/src/misc/lv_printf.c ****     // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 350:lvgl/src/misc/lv_printf.c ****     while((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 351:lvgl/src/misc/lv_printf.c ****         buf[len++] = '0';
 352:lvgl/src/misc/lv_printf.c ****         prec--;
 353:lvgl/src/misc/lv_printf.c ****     }
 354:lvgl/src/misc/lv_printf.c **** 
 355:lvgl/src/misc/lv_printf.c ****     int whole = (int)value;
 356:lvgl/src/misc/lv_printf.c ****     double tmp = (value - whole) * pow10[prec];
 357:lvgl/src/misc/lv_printf.c ****     unsigned long frac = (unsigned long)tmp;
 358:lvgl/src/misc/lv_printf.c ****     diff = tmp - frac;
 359:lvgl/src/misc/lv_printf.c **** 
 360:lvgl/src/misc/lv_printf.c ****     if(diff > 0.5) {
 361:lvgl/src/misc/lv_printf.c ****         ++frac;
 362:lvgl/src/misc/lv_printf.c ****         // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 363:lvgl/src/misc/lv_printf.c ****         if(frac >= pow10[prec]) {
 364:lvgl/src/misc/lv_printf.c ****             frac = 0;
 365:lvgl/src/misc/lv_printf.c ****             ++whole;
 366:lvgl/src/misc/lv_printf.c ****         }
 367:lvgl/src/misc/lv_printf.c ****     }
 368:lvgl/src/misc/lv_printf.c ****     else if(diff < 0.5) {
 369:lvgl/src/misc/lv_printf.c ****     }
 370:lvgl/src/misc/lv_printf.c ****     else if((frac == 0U) || (frac & 1U)) {
 371:lvgl/src/misc/lv_printf.c ****         // if halfway, round up if odd OR if last digit is 0
 372:lvgl/src/misc/lv_printf.c ****         ++frac;
 373:lvgl/src/misc/lv_printf.c ****     }
 374:lvgl/src/misc/lv_printf.c **** 
 375:lvgl/src/misc/lv_printf.c ****     if(prec == 0U) {
 376:lvgl/src/misc/lv_printf.c ****         diff = value - (double)whole;
 377:lvgl/src/misc/lv_printf.c ****         if((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 378:lvgl/src/misc/lv_printf.c ****             // exactly 0.5 and ODD, then round up
 379:lvgl/src/misc/lv_printf.c ****             // 1.5 -> 2, but 2.5 -> 2
 380:lvgl/src/misc/lv_printf.c ****             ++whole;
 381:lvgl/src/misc/lv_printf.c ****         }
 382:lvgl/src/misc/lv_printf.c ****     }
 383:lvgl/src/misc/lv_printf.c ****     else {
 384:lvgl/src/misc/lv_printf.c ****         unsigned int count = prec;
 385:lvgl/src/misc/lv_printf.c ****         // now do fractional part, as an unsigned number
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 25


 386:lvgl/src/misc/lv_printf.c ****         while(len < PRINTF_FTOA_BUFFER_SIZE) {
 387:lvgl/src/misc/lv_printf.c ****             --count;
 388:lvgl/src/misc/lv_printf.c ****             buf[len++] = (char)(48U + (frac % 10U));
 389:lvgl/src/misc/lv_printf.c ****             if(!(frac /= 10U)) {
 390:lvgl/src/misc/lv_printf.c ****                 break;
 391:lvgl/src/misc/lv_printf.c ****             }
 392:lvgl/src/misc/lv_printf.c ****         }
 393:lvgl/src/misc/lv_printf.c ****         // add extra 0s
 394:lvgl/src/misc/lv_printf.c ****         while((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 395:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 396:lvgl/src/misc/lv_printf.c ****         }
 397:lvgl/src/misc/lv_printf.c ****         if(len < PRINTF_FTOA_BUFFER_SIZE) {
 398:lvgl/src/misc/lv_printf.c ****             // add decimal
 399:lvgl/src/misc/lv_printf.c ****             buf[len++] = '.';
 400:lvgl/src/misc/lv_printf.c ****         }
 401:lvgl/src/misc/lv_printf.c ****     }
 402:lvgl/src/misc/lv_printf.c **** 
 403:lvgl/src/misc/lv_printf.c ****     // do whole part, number is reversed
 404:lvgl/src/misc/lv_printf.c ****     while(len < PRINTF_FTOA_BUFFER_SIZE) {
 405:lvgl/src/misc/lv_printf.c ****         buf[len++] = (char)(48 + (whole % 10));
 406:lvgl/src/misc/lv_printf.c ****         if(!(whole /= 10)) {
 407:lvgl/src/misc/lv_printf.c ****             break;
 408:lvgl/src/misc/lv_printf.c ****         }
 409:lvgl/src/misc/lv_printf.c ****     }
 410:lvgl/src/misc/lv_printf.c **** 
 411:lvgl/src/misc/lv_printf.c ****     // pad leading zeros
 412:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 413:lvgl/src/misc/lv_printf.c ****         if(width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 414:lvgl/src/misc/lv_printf.c ****             width--;
 415:lvgl/src/misc/lv_printf.c ****         }
 416:lvgl/src/misc/lv_printf.c ****         while((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 417:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 418:lvgl/src/misc/lv_printf.c ****         }
 419:lvgl/src/misc/lv_printf.c ****     }
 420:lvgl/src/misc/lv_printf.c **** 
 421:lvgl/src/misc/lv_printf.c ****     if(len < PRINTF_FTOA_BUFFER_SIZE) {
 422:lvgl/src/misc/lv_printf.c ****         if(negative) {
 423:lvgl/src/misc/lv_printf.c ****             buf[len++] = '-';
 424:lvgl/src/misc/lv_printf.c ****         }
 425:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_PLUS) {
 426:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 427:lvgl/src/misc/lv_printf.c ****         }
 428:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_SPACE) {
 429:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 430:lvgl/src/misc/lv_printf.c ****         }
 431:lvgl/src/misc/lv_printf.c ****     }
 432:lvgl/src/misc/lv_printf.c **** 
 433:lvgl/src/misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 434:lvgl/src/misc/lv_printf.c **** }
 435:lvgl/src/misc/lv_printf.c **** 
 436:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 437:lvgl/src/misc/lv_printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 438:lvgl/src/misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 439:lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags)
 440:lvgl/src/misc/lv_printf.c **** {
 441:lvgl/src/misc/lv_printf.c ****     // check for NaN and special values
 442:lvgl/src/misc/lv_printf.c ****     if((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 26


 443:lvgl/src/misc/lv_printf.c ****         return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 444:lvgl/src/misc/lv_printf.c ****     }
 445:lvgl/src/misc/lv_printf.c **** 
 446:lvgl/src/misc/lv_printf.c ****     // determine the sign
 447:lvgl/src/misc/lv_printf.c ****     const bool negative = value < 0;
 448:lvgl/src/misc/lv_printf.c ****     if(negative) {
 449:lvgl/src/misc/lv_printf.c ****         value = -value;
 450:lvgl/src/misc/lv_printf.c ****     }
 451:lvgl/src/misc/lv_printf.c **** 
 452:lvgl/src/misc/lv_printf.c ****     // default precision
 453:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION)) {
 454:lvgl/src/misc/lv_printf.c ****         prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 455:lvgl/src/misc/lv_printf.c ****     }
 456:lvgl/src/misc/lv_printf.c **** 
 457:lvgl/src/misc/lv_printf.c ****     // determine the decimal exponent
 458:lvgl/src/misc/lv_printf.c ****     // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 459:lvgl/src/misc/lv_printf.c ****     union {
 460:lvgl/src/misc/lv_printf.c ****         uint64_t U;
 461:lvgl/src/misc/lv_printf.c ****         double   F;
 462:lvgl/src/misc/lv_printf.c ****     } conv;
 463:lvgl/src/misc/lv_printf.c **** 
 464:lvgl/src/misc/lv_printf.c ****     conv.F = value;
 465:lvgl/src/misc/lv_printf.c ****     int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
 466:lvgl/src/misc/lv_printf.c ****     conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is
 467:lvgl/src/misc/lv_printf.c ****     // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 468:lvgl/src/misc/lv_printf.c ****     int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602
 469:lvgl/src/misc/lv_printf.c ****     // now we want to compute 10^expval but we want to be sure it won't overflow
 470:lvgl/src/misc/lv_printf.c ****     exp2 = (int)(expval * 3.321928094887362 + 0.5);
 471:lvgl/src/misc/lv_printf.c ****     const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 472:lvgl/src/misc/lv_printf.c ****     const double z2 = z * z;
 473:lvgl/src/misc/lv_printf.c ****     conv.U = (uint64_t)(exp2 + 1023) << 52U;
 474:lvgl/src/misc/lv_printf.c ****     // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_func
 475:lvgl/src/misc/lv_printf.c ****     conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 476:lvgl/src/misc/lv_printf.c ****     // correct for rounding errors
 477:lvgl/src/misc/lv_printf.c ****     if(value < conv.F) {
 478:lvgl/src/misc/lv_printf.c ****         expval--;
 479:lvgl/src/misc/lv_printf.c ****         conv.F /= 10;
 480:lvgl/src/misc/lv_printf.c ****     }
 481:lvgl/src/misc/lv_printf.c **** 
 482:lvgl/src/misc/lv_printf.c ****     // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 483:lvgl/src/misc/lv_printf.c ****     unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 484:lvgl/src/misc/lv_printf.c **** 
 485:lvgl/src/misc/lv_printf.c ****     // in "%g" mode, "prec" is the number of *significant figures* not decimals
 486:lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_ADAPT_EXP) {
 487:lvgl/src/misc/lv_printf.c ****         // do we want to fall-back to "%f" mode?
 488:lvgl/src/misc/lv_printf.c ****         if((value >= 1e-4) && (value < 1e6)) {
 489:lvgl/src/misc/lv_printf.c ****             if((int)prec > expval) {
 490:lvgl/src/misc/lv_printf.c ****                 prec = (unsigned)((int)prec - expval - 1);
 491:lvgl/src/misc/lv_printf.c ****             }
 492:lvgl/src/misc/lv_printf.c ****             else {
 493:lvgl/src/misc/lv_printf.c ****                 prec = 0;
 494:lvgl/src/misc/lv_printf.c ****             }
 495:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 496:lvgl/src/misc/lv_printf.c ****             // no characters in exponent
 497:lvgl/src/misc/lv_printf.c ****             minwidth = 0U;
 498:lvgl/src/misc/lv_printf.c ****             expval   = 0;
 499:lvgl/src/misc/lv_printf.c ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 27


 500:lvgl/src/misc/lv_printf.c ****         else {
 501:lvgl/src/misc/lv_printf.c ****             // we use one sigfig for the whole part
 502:lvgl/src/misc/lv_printf.c ****             if((prec > 0) && (flags & FLAGS_PRECISION)) {
 503:lvgl/src/misc/lv_printf.c ****                 --prec;
 504:lvgl/src/misc/lv_printf.c ****             }
 505:lvgl/src/misc/lv_printf.c ****         }
 506:lvgl/src/misc/lv_printf.c ****     }
 507:lvgl/src/misc/lv_printf.c **** 
 508:lvgl/src/misc/lv_printf.c ****     // will everything fit?
 509:lvgl/src/misc/lv_printf.c ****     unsigned int fwidth = width;
 510:lvgl/src/misc/lv_printf.c ****     if(width > minwidth) {
 511:lvgl/src/misc/lv_printf.c ****         // we didn't fall-back so subtract the characters required for the exponent
 512:lvgl/src/misc/lv_printf.c ****         fwidth -= minwidth;
 513:lvgl/src/misc/lv_printf.c ****     }
 514:lvgl/src/misc/lv_printf.c ****     else {
 515:lvgl/src/misc/lv_printf.c ****         // not enough characters, so go back to default sizing
 516:lvgl/src/misc/lv_printf.c ****         fwidth = 0U;
 517:lvgl/src/misc/lv_printf.c ****     }
 518:lvgl/src/misc/lv_printf.c ****     if((flags & FLAGS_LEFT) && minwidth) {
 519:lvgl/src/misc/lv_printf.c ****         // if we're padding on the right, DON'T pad the floating part
 520:lvgl/src/misc/lv_printf.c ****         fwidth = 0U;
 521:lvgl/src/misc/lv_printf.c ****     }
 522:lvgl/src/misc/lv_printf.c **** 
 523:lvgl/src/misc/lv_printf.c ****     // rescale the float value
 524:lvgl/src/misc/lv_printf.c ****     if(expval) {
 525:lvgl/src/misc/lv_printf.c ****         value /= conv.F;
 526:lvgl/src/misc/lv_printf.c ****     }
 527:lvgl/src/misc/lv_printf.c **** 
 528:lvgl/src/misc/lv_printf.c ****     // output the floating part
 529:lvgl/src/misc/lv_printf.c ****     const size_t start_idx = idx;
 530:lvgl/src/misc/lv_printf.c ****     idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_A
 531:lvgl/src/misc/lv_printf.c **** 
 532:lvgl/src/misc/lv_printf.c ****     // output the exponent part
 533:lvgl/src/misc/lv_printf.c ****     if(minwidth) {
 534:lvgl/src/misc/lv_printf.c ****         // output the exponential symbol
 535:lvgl/src/misc/lv_printf.c ****         out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 536:lvgl/src/misc/lv_printf.c ****         // output the exponent value
 537:lvgl/src/misc/lv_printf.c ****         idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10,
 538:lvgl/src/misc/lv_printf.c ****                          FLAGS_ZEROPAD | FLAGS_PLUS);
 539:lvgl/src/misc/lv_printf.c ****         // might need to right-pad spaces
 540:lvgl/src/misc/lv_printf.c ****         if(flags & FLAGS_LEFT) {
 541:lvgl/src/misc/lv_printf.c ****             while(idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 542:lvgl/src/misc/lv_printf.c ****         }
 543:lvgl/src/misc/lv_printf.c ****     }
 544:lvgl/src/misc/lv_printf.c ****     return idx;
 545:lvgl/src/misc/lv_printf.c **** }
 546:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 547:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 548:lvgl/src/misc/lv_printf.c **** 
 549:lvgl/src/misc/lv_printf.c **** // internal vsnprintf
 550:lvgl/src/misc/lv_printf.c **** static int _vsnprintf(out_fct_type out, char * buffer, const size_t maxlen, const char * format, va
 551:lvgl/src/misc/lv_printf.c **** {
 906              		.loc 1 551 1 is_stmt 1 view -0
 907              		.cfi_startproc
 908              		@ args = 4, pretend = 0, frame = 32
 909              		@ frame_needed = 0, uses_anonymous_args = 0
 910              		.loc 1 551 1 is_stmt 0 view .LVU235
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 28


 911 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 912              	.LCFI14:
 913              		.cfi_def_cfa_offset 36
 914              		.cfi_offset 4, -36
 915              		.cfi_offset 5, -32
 916              		.cfi_offset 6, -28
 917              		.cfi_offset 7, -24
 918              		.cfi_offset 8, -20
 919              		.cfi_offset 9, -16
 920              		.cfi_offset 10, -12
 921              		.cfi_offset 11, -8
 922              		.cfi_offset 14, -4
 923 0004 93B0     		sub	sp, sp, #76
 924              	.LCFI15:
 925              		.cfi_def_cfa_offset 112
 926 0006 8046     		mov	r8, r0
 927 0008 1746     		mov	r7, r2
 928 000a 0F93     		str	r3, [sp, #60]
 552:lvgl/src/misc/lv_printf.c ****     unsigned int flags, width, precision, n;
 929              		.loc 1 552 5 is_stmt 1 view .LVU236
 553:lvgl/src/misc/lv_printf.c ****     size_t idx = 0U;
 930              		.loc 1 553 5 view .LVU237
 931              	.LVL92:
 554:lvgl/src/misc/lv_printf.c **** 
 555:lvgl/src/misc/lv_printf.c ****     if(!buffer) {
 932              		.loc 1 555 5 view .LVU238
 933              		.loc 1 555 7 is_stmt 0 view .LVU239
 934 000c 8B46     		mov	fp, r1
 935 000e 0029     		cmp	r1, #0
 936 0010 00F0CF82 		beq	.L167
 937              	.L73:
 938              	.LVL93:
 556:lvgl/src/misc/lv_printf.c ****         // use null output function
 557:lvgl/src/misc/lv_printf.c ****         out = _out_null;
 558:lvgl/src/misc/lv_printf.c ****     }
 559:lvgl/src/misc/lv_printf.c **** 
 560:lvgl/src/misc/lv_printf.c ****     while(*format) {
 561:lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 562:lvgl/src/misc/lv_printf.c ****         if(*format != '%') {
 563:lvgl/src/misc/lv_printf.c ****             // no
 564:lvgl/src/misc/lv_printf.c ****             out(*format, buffer, idx++, maxlen);
 565:lvgl/src/misc/lv_printf.c ****             format++;
 566:lvgl/src/misc/lv_printf.c ****             continue;
 567:lvgl/src/misc/lv_printf.c ****         }
 568:lvgl/src/misc/lv_printf.c ****         else {
 569:lvgl/src/misc/lv_printf.c ****             // yes, evaluate it
 570:lvgl/src/misc/lv_printf.c ****             format++;
 571:lvgl/src/misc/lv_printf.c ****         }
 572:lvgl/src/misc/lv_printf.c **** 
 573:lvgl/src/misc/lv_printf.c ****         // evaluate flags
 574:lvgl/src/misc/lv_printf.c ****         flags = 0U;
 575:lvgl/src/misc/lv_printf.c ****         do {
 576:lvgl/src/misc/lv_printf.c ****             switch(*format) {
 577:lvgl/src/misc/lv_printf.c ****                 case '0':
 578:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_ZEROPAD;
 579:lvgl/src/misc/lv_printf.c ****                     format++;
 580:lvgl/src/misc/lv_printf.c ****                     n = 1U;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 29


 581:lvgl/src/misc/lv_printf.c ****                     break;
 582:lvgl/src/misc/lv_printf.c ****                 case '-':
 583:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LEFT;
 584:lvgl/src/misc/lv_printf.c ****                     format++;
 585:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 586:lvgl/src/misc/lv_printf.c ****                     break;
 587:lvgl/src/misc/lv_printf.c ****                 case '+':
 588:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_PLUS;
 589:lvgl/src/misc/lv_printf.c ****                     format++;
 590:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 591:lvgl/src/misc/lv_printf.c ****                     break;
 592:lvgl/src/misc/lv_printf.c ****                 case ' ':
 593:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_SPACE;
 594:lvgl/src/misc/lv_printf.c ****                     format++;
 595:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 596:lvgl/src/misc/lv_printf.c ****                     break;
 597:lvgl/src/misc/lv_printf.c ****                 case '#':
 598:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_HASH;
 599:lvgl/src/misc/lv_printf.c ****                     format++;
 600:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 601:lvgl/src/misc/lv_printf.c ****                     break;
 602:lvgl/src/misc/lv_printf.c ****                 default :
 603:lvgl/src/misc/lv_printf.c ****                     n = 0U;
 604:lvgl/src/misc/lv_printf.c ****                     break;
 605:lvgl/src/misc/lv_printf.c ****             }
 606:lvgl/src/misc/lv_printf.c ****         } while(n);
 607:lvgl/src/misc/lv_printf.c **** 
 608:lvgl/src/misc/lv_printf.c ****         // evaluate width field
 609:lvgl/src/misc/lv_printf.c ****         width = 0U;
 610:lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 611:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 612:lvgl/src/misc/lv_printf.c ****         }
 613:lvgl/src/misc/lv_printf.c ****         else if(*format == '*') {
 614:lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 615:lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 616:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 617:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 618:lvgl/src/misc/lv_printf.c ****             }
 619:lvgl/src/misc/lv_printf.c ****             else {
 620:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int)w;
 621:lvgl/src/misc/lv_printf.c ****             }
 622:lvgl/src/misc/lv_printf.c ****             format++;
 623:lvgl/src/misc/lv_printf.c ****         }
 624:lvgl/src/misc/lv_printf.c **** 
 625:lvgl/src/misc/lv_printf.c ****         // evaluate precision field
 626:lvgl/src/misc/lv_printf.c ****         precision = 0U;
 627:lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 628:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 629:lvgl/src/misc/lv_printf.c ****             format++;
 630:lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 631:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 632:lvgl/src/misc/lv_printf.c ****             }
 633:lvgl/src/misc/lv_printf.c ****             else if(*format == '*') {
 634:lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 635:lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 636:lvgl/src/misc/lv_printf.c ****                 format++;
 637:lvgl/src/misc/lv_printf.c ****             }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 30


 638:lvgl/src/misc/lv_printf.c ****         }
 639:lvgl/src/misc/lv_printf.c **** 
 640:lvgl/src/misc/lv_printf.c ****         // evaluate length field
 641:lvgl/src/misc/lv_printf.c ****         switch(*format) {
 642:lvgl/src/misc/lv_printf.c ****             case 'l' :
 643:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LONG;
 644:lvgl/src/misc/lv_printf.c ****                 format++;
 645:lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 646:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 647:lvgl/src/misc/lv_printf.c ****                     format++;
 648:lvgl/src/misc/lv_printf.c ****                 }
 649:lvgl/src/misc/lv_printf.c ****                 break;
 650:lvgl/src/misc/lv_printf.c ****             case 'h' :
 651:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_SHORT;
 652:lvgl/src/misc/lv_printf.c ****                 format++;
 653:lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 654:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 655:lvgl/src/misc/lv_printf.c ****                     format++;
 656:lvgl/src/misc/lv_printf.c ****                 }
 657:lvgl/src/misc/lv_printf.c ****                 break;
 658:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 659:lvgl/src/misc/lv_printf.c ****             case 't' :
 660:lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 661:lvgl/src/misc/lv_printf.c ****                 format++;
 662:lvgl/src/misc/lv_printf.c ****                 break;
 663:lvgl/src/misc/lv_printf.c **** #endif
 664:lvgl/src/misc/lv_printf.c ****             case 'j' :
 665:lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 666:lvgl/src/misc/lv_printf.c ****                 format++;
 667:lvgl/src/misc/lv_printf.c ****                 break;
 668:lvgl/src/misc/lv_printf.c ****             case 'z' :
 669:lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 670:lvgl/src/misc/lv_printf.c ****                 format++;
 671:lvgl/src/misc/lv_printf.c ****                 break;
 672:lvgl/src/misc/lv_printf.c ****             default :
 673:lvgl/src/misc/lv_printf.c ****                 break;
 674:lvgl/src/misc/lv_printf.c ****         }
 675:lvgl/src/misc/lv_printf.c **** 
 676:lvgl/src/misc/lv_printf.c ****         // evaluate specifier
 677:lvgl/src/misc/lv_printf.c ****         switch(*format) {
 678:lvgl/src/misc/lv_printf.c ****             case 'd' :
 679:lvgl/src/misc/lv_printf.c ****             case 'i' :
 680:lvgl/src/misc/lv_printf.c ****             case 'u' :
 681:lvgl/src/misc/lv_printf.c ****             case 'x' :
 682:lvgl/src/misc/lv_printf.c ****             case 'X' :
 683:lvgl/src/misc/lv_printf.c ****             case 'p' :
 684:lvgl/src/misc/lv_printf.c ****             case 'P' :
 685:lvgl/src/misc/lv_printf.c ****             case 'o' :
 686:lvgl/src/misc/lv_printf.c ****             case 'b' : {
 687:lvgl/src/misc/lv_printf.c ****                     // set the base
 688:lvgl/src/misc/lv_printf.c ****                     unsigned int base;
 689:lvgl/src/misc/lv_printf.c ****                     if(*format == 'x' || *format == 'X') {
 690:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 691:lvgl/src/misc/lv_printf.c ****                     }
 692:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'p' || *format == 'P') {
 693:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 694:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 31


 695:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 696:lvgl/src/misc/lv_printf.c ****                         if(sizeof(uintptr_t) == sizeof(long long))
 697:lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG_LONG;
 698:lvgl/src/misc/lv_printf.c ****                         else
 699:lvgl/src/misc/lv_printf.c **** #endif
 700:lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG;
 701:lvgl/src/misc/lv_printf.c **** 
 702:lvgl/src/misc/lv_printf.c ****                         if(*(format + 1) == 'V')
 703:lvgl/src/misc/lv_printf.c ****                             format++;
 704:lvgl/src/misc/lv_printf.c ****                     }
 705:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'o') {
 706:lvgl/src/misc/lv_printf.c ****                         base =  8U;
 707:lvgl/src/misc/lv_printf.c ****                     }
 708:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'b') {
 709:lvgl/src/misc/lv_printf.c ****                         base =  2U;
 710:lvgl/src/misc/lv_printf.c ****                     }
 711:lvgl/src/misc/lv_printf.c ****                     else {
 712:lvgl/src/misc/lv_printf.c ****                         base = 10U;
 713:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 714:lvgl/src/misc/lv_printf.c ****                     }
 715:lvgl/src/misc/lv_printf.c ****                     // uppercase
 716:lvgl/src/misc/lv_printf.c ****                     if(*format == 'X' || *format == 'P') {
 717:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 718:lvgl/src/misc/lv_printf.c ****                     }
 719:lvgl/src/misc/lv_printf.c **** 
 720:lvgl/src/misc/lv_printf.c ****                     // no plus or space flag for u, x, X, o, b
 721:lvgl/src/misc/lv_printf.c ****                     if((*format != 'i') && (*format != 'd')) {
 722:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 723:lvgl/src/misc/lv_printf.c ****                     }
 724:lvgl/src/misc/lv_printf.c **** 
 725:lvgl/src/misc/lv_printf.c ****                     // ignore '0' flag when precision is given
 726:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_PRECISION) {
 727:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 728:lvgl/src/misc/lv_printf.c ****                     }
 729:lvgl/src/misc/lv_printf.c **** 
 730:lvgl/src/misc/lv_printf.c ****                     // convert the integer
 731:lvgl/src/misc/lv_printf.c ****                     if((*format == 'i') || (*format == 'd')) {
 732:lvgl/src/misc/lv_printf.c ****                         // signed
 733:lvgl/src/misc/lv_printf.c ****                         if(flags & FLAGS_LONG_LONG) {
 734:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 735:lvgl/src/misc/lv_printf.c ****                             const long long value = va_arg(va, long long);
 736:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 737:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 738:lvgl/src/misc/lv_printf.c **** #endif
 739:lvgl/src/misc/lv_printf.c ****                         }
 740:lvgl/src/misc/lv_printf.c ****                         else if(flags & FLAGS_LONG) {
 741:lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 742:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 743:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 744:lvgl/src/misc/lv_printf.c ****                         }
 745:lvgl/src/misc/lv_printf.c ****                         else {
 746:lvgl/src/misc/lv_printf.c ****                             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags
 747:lvgl/src/misc/lv_printf.c ****                                                                                                    
 748:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 749:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 750:lvgl/src/misc/lv_printf.c ****                         }
 751:lvgl/src/misc/lv_printf.c ****                     }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 32


 752:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'V') {
 753:lvgl/src/misc/lv_printf.c ****                         lv_vaformat_t * vaf = va_arg(va, lv_vaformat_t *);
 754:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 755:lvgl/src/misc/lv_printf.c **** 
 756:lvgl/src/misc/lv_printf.c ****                         va_copy(copy, *vaf->va);
 757:lvgl/src/misc/lv_printf.c ****                         idx += _vsnprintf(out, buffer + idx, maxlen - idx, vaf->fmt, copy);
 758:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 759:lvgl/src/misc/lv_printf.c ****                     }
 760:lvgl/src/misc/lv_printf.c ****                     else {
 761:lvgl/src/misc/lv_printf.c ****                         // unsigned
 762:lvgl/src/misc/lv_printf.c ****                         if(flags & FLAGS_LONG_LONG) {
 763:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 764:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned lon
 765:lvgl/src/misc/lv_printf.c **** #endif
 766:lvgl/src/misc/lv_printf.c ****                         }
 767:lvgl/src/misc/lv_printf.c ****                         else if(flags & FLAGS_LONG) {
 768:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 769:lvgl/src/misc/lv_printf.c ****                         }
 770:lvgl/src/misc/lv_printf.c ****                         else {
 771:lvgl/src/misc/lv_printf.c ****                             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg
 772:lvgl/src/misc/lv_printf.c ****                                                                                                    
 773:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 774:lvgl/src/misc/lv_printf.c ****                         }
 775:lvgl/src/misc/lv_printf.c ****                     }
 776:lvgl/src/misc/lv_printf.c ****                     format++;
 777:lvgl/src/misc/lv_printf.c ****                     break;
 778:lvgl/src/misc/lv_printf.c ****                 }
 779:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 780:lvgl/src/misc/lv_printf.c ****             case 'f' :
 781:lvgl/src/misc/lv_printf.c ****             case 'F' :
 782:lvgl/src/misc/lv_printf.c ****                 if(*format == 'F') flags |= FLAGS_UPPERCASE;
 783:lvgl/src/misc/lv_printf.c ****                 idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 784:lvgl/src/misc/lv_printf.c ****                 format++;
 785:lvgl/src/misc/lv_printf.c ****                 break;
 786:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 787:lvgl/src/misc/lv_printf.c ****             case 'e':
 788:lvgl/src/misc/lv_printf.c ****             case 'E':
 789:lvgl/src/misc/lv_printf.c ****             case 'g':
 790:lvgl/src/misc/lv_printf.c ****             case 'G':
 791:lvgl/src/misc/lv_printf.c ****                 if((*format == 'g') || (*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 792:lvgl/src/misc/lv_printf.c ****                 if((*format == 'E') || (*format == 'G')) flags |= FLAGS_UPPERCASE;
 793:lvgl/src/misc/lv_printf.c ****                 idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 794:lvgl/src/misc/lv_printf.c ****                 format++;
 795:lvgl/src/misc/lv_printf.c ****                 break;
 796:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 797:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 798:lvgl/src/misc/lv_printf.c ****             case 'c' : {
 799:lvgl/src/misc/lv_printf.c ****                     unsigned int l = 1U;
 800:lvgl/src/misc/lv_printf.c ****                     // pre padding
 801:lvgl/src/misc/lv_printf.c ****                     if(!(flags & FLAGS_LEFT)) {
 802:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 803:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 804:lvgl/src/misc/lv_printf.c ****                         }
 805:lvgl/src/misc/lv_printf.c ****                     }
 806:lvgl/src/misc/lv_printf.c ****                     // char output
 807:lvgl/src/misc/lv_printf.c ****                     out((char)va_arg(va, int), buffer, idx++, maxlen);
 808:lvgl/src/misc/lv_printf.c ****                     // post padding
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 33


 809:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_LEFT) {
 810:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 811:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 812:lvgl/src/misc/lv_printf.c ****                         }
 813:lvgl/src/misc/lv_printf.c ****                     }
 814:lvgl/src/misc/lv_printf.c ****                     format++;
 815:lvgl/src/misc/lv_printf.c ****                     break;
 816:lvgl/src/misc/lv_printf.c ****                 }
 817:lvgl/src/misc/lv_printf.c **** 
 818:lvgl/src/misc/lv_printf.c ****             case 's' : {
 819:lvgl/src/misc/lv_printf.c ****                     const char * p = va_arg(va, char *);
 820:lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 821:lvgl/src/misc/lv_printf.c ****                     // pre padding
 822:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_PRECISION) {
 823:lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 824:lvgl/src/misc/lv_printf.c ****                     }
 825:lvgl/src/misc/lv_printf.c ****                     if(!(flags & FLAGS_LEFT)) {
 826:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 827:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 828:lvgl/src/misc/lv_printf.c ****                         }
 829:lvgl/src/misc/lv_printf.c ****                     }
 830:lvgl/src/misc/lv_printf.c ****                     // string output
 831:lvgl/src/misc/lv_printf.c ****                     while((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 832:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 833:lvgl/src/misc/lv_printf.c ****                     }
 834:lvgl/src/misc/lv_printf.c ****                     // post padding
 835:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_LEFT) {
 836:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 837:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 838:lvgl/src/misc/lv_printf.c ****                         }
 839:lvgl/src/misc/lv_printf.c ****                     }
 840:lvgl/src/misc/lv_printf.c ****                     format++;
 841:lvgl/src/misc/lv_printf.c ****                     break;
 842:lvgl/src/misc/lv_printf.c ****                 }
 843:lvgl/src/misc/lv_printf.c **** 
 844:lvgl/src/misc/lv_printf.c ****             case '%' :
 845:lvgl/src/misc/lv_printf.c ****                 out('%', buffer, idx++, maxlen);
 939              		.loc 1 845 17 view .LVU240
 940 0014 0025     		movs	r5, #0
 941              	.LVL94:
 942              	.L150:
 560:lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 943              		.loc 1 560 11 is_stmt 1 view .LVU241
 944 0016 0F9B     		ldr	r3, [sp, #60]
 945 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 946 001a 0028     		cmp	r0, #0
 947 001c 00F0CC82 		beq	.L168
 562:lvgl/src/misc/lv_printf.c ****             // no
 948              		.loc 1 562 9 view .LVU242
 562:lvgl/src/misc/lv_printf.c ****             // no
 949              		.loc 1 562 11 is_stmt 0 view .LVU243
 950 0020 2528     		cmp	r0, #37
 951 0022 09D0     		beq	.L75
 564:lvgl/src/misc/lv_printf.c ****             format++;
 952              		.loc 1 564 13 is_stmt 1 discriminator 1 view .LVU244
 953 0024 6C1C     		adds	r4, r5, #1
 954              	.LVL95:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 34


 564:lvgl/src/misc/lv_printf.c ****             format++;
 955              		.loc 1 564 13 is_stmt 0 discriminator 1 view .LVU245
 956 0026 3B46     		mov	r3, r7
 957 0028 2A46     		mov	r2, r5
 958 002a 5946     		mov	r1, fp
 959 002c C047     		blx	r8
 960              	.LVL96:
 565:lvgl/src/misc/lv_printf.c ****             continue;
 961              		.loc 1 565 13 is_stmt 1 discriminator 1 view .LVU246
 565:lvgl/src/misc/lv_printf.c ****             continue;
 962              		.loc 1 565 19 is_stmt 0 discriminator 1 view .LVU247
 963 002e 0F9B     		ldr	r3, [sp, #60]
 964 0030 0133     		adds	r3, r3, #1
 965 0032 0F93     		str	r3, [sp, #60]
 566:lvgl/src/misc/lv_printf.c ****         }
 966              		.loc 1 566 13 is_stmt 1 discriminator 1 view .LVU248
 564:lvgl/src/misc/lv_printf.c ****             format++;
 967              		.loc 1 564 13 is_stmt 0 discriminator 1 view .LVU249
 968 0034 2546     		mov	r5, r4
 566:lvgl/src/misc/lv_printf.c ****         }
 969              		.loc 1 566 13 discriminator 1 view .LVU250
 970 0036 EEE7     		b	.L150
 971              	.LVL97:
 972              	.L75:
 570:lvgl/src/misc/lv_printf.c ****         }
 973              		.loc 1 570 13 is_stmt 1 view .LVU251
 570:lvgl/src/misc/lv_printf.c ****         }
 974              		.loc 1 570 19 is_stmt 0 view .LVU252
 975 0038 0133     		adds	r3, r3, #1
 976 003a 0F93     		str	r3, [sp, #60]
 574:lvgl/src/misc/lv_printf.c ****         do {
 977              		.loc 1 574 9 is_stmt 1 view .LVU253
 978              	.LVL98:
 574:lvgl/src/misc/lv_printf.c ****         do {
 979              		.loc 1 574 15 is_stmt 0 view .LVU254
 980 003c 0026     		movs	r6, #0
 981 003e 1FE0     		b	.L84
 982              	.LVL99:
 983              	.L78:
 578:lvgl/src/misc/lv_printf.c ****                     format++;
 984              		.loc 1 578 21 is_stmt 1 view .LVU255
 578:lvgl/src/misc/lv_printf.c ****                     format++;
 985              		.loc 1 578 27 is_stmt 0 view .LVU256
 986 0040 46F00106 		orr	r6, r6, #1
 987              	.LVL100:
 579:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 988              		.loc 1 579 21 is_stmt 1 view .LVU257
 579:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 989              		.loc 1 579 27 is_stmt 0 view .LVU258
 990 0044 0132     		adds	r2, r2, #1
 991 0046 0F92     		str	r2, [sp, #60]
 580:lvgl/src/misc/lv_printf.c ****                     break;
 992              		.loc 1 580 21 is_stmt 1 view .LVU259
 993              	.LVL101:
 581:lvgl/src/misc/lv_printf.c ****                 case '-':
 994              		.loc 1 581 21 view .LVU260
 580:lvgl/src/misc/lv_printf.c ****                     break;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 35


 995              		.loc 1 580 23 is_stmt 0 view .LVU261
 996 0048 0123     		movs	r3, #1
 581:lvgl/src/misc/lv_printf.c ****                 case '-':
 997              		.loc 1 581 21 view .LVU262
 998 004a 18E0     		b	.L77
 999              	.LVL102:
 1000              	.L80:
 583:lvgl/src/misc/lv_printf.c ****                     format++;
 1001              		.loc 1 583 21 is_stmt 1 view .LVU263
 583:lvgl/src/misc/lv_printf.c ****                     format++;
 1002              		.loc 1 583 27 is_stmt 0 view .LVU264
 1003 004c 46F00206 		orr	r6, r6, #2
 1004              	.LVL103:
 584:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1005              		.loc 1 584 21 is_stmt 1 view .LVU265
 584:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1006              		.loc 1 584 27 is_stmt 0 view .LVU266
 1007 0050 0132     		adds	r2, r2, #1
 1008 0052 0F92     		str	r2, [sp, #60]
 585:lvgl/src/misc/lv_printf.c ****                     break;
 1009              		.loc 1 585 21 is_stmt 1 view .LVU267
 1010              	.LVL104:
 586:lvgl/src/misc/lv_printf.c ****                 case '+':
 1011              		.loc 1 586 21 view .LVU268
 585:lvgl/src/misc/lv_printf.c ****                     break;
 1012              		.loc 1 585 23 is_stmt 0 view .LVU269
 1013 0054 0123     		movs	r3, #1
 586:lvgl/src/misc/lv_printf.c ****                 case '+':
 1014              		.loc 1 586 21 view .LVU270
 1015 0056 12E0     		b	.L77
 1016              	.LVL105:
 1017              	.L81:
 588:lvgl/src/misc/lv_printf.c ****                     format++;
 1018              		.loc 1 588 21 is_stmt 1 view .LVU271
 588:lvgl/src/misc/lv_printf.c ****                     format++;
 1019              		.loc 1 588 27 is_stmt 0 view .LVU272
 1020 0058 46F00406 		orr	r6, r6, #4
 1021              	.LVL106:
 589:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1022              		.loc 1 589 21 is_stmt 1 view .LVU273
 589:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1023              		.loc 1 589 27 is_stmt 0 view .LVU274
 1024 005c 0132     		adds	r2, r2, #1
 1025 005e 0F92     		str	r2, [sp, #60]
 590:lvgl/src/misc/lv_printf.c ****                     break;
 1026              		.loc 1 590 21 is_stmt 1 view .LVU275
 1027              	.LVL107:
 591:lvgl/src/misc/lv_printf.c ****                 case ' ':
 1028              		.loc 1 591 21 view .LVU276
 590:lvgl/src/misc/lv_printf.c ****                     break;
 1029              		.loc 1 590 23 is_stmt 0 view .LVU277
 1030 0060 0123     		movs	r3, #1
 591:lvgl/src/misc/lv_printf.c ****                 case ' ':
 1031              		.loc 1 591 21 view .LVU278
 1032 0062 0CE0     		b	.L77
 1033              	.LVL108:
 1034              	.L83:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 36


 593:lvgl/src/misc/lv_printf.c ****                     format++;
 1035              		.loc 1 593 21 is_stmt 1 view .LVU279
 593:lvgl/src/misc/lv_printf.c ****                     format++;
 1036              		.loc 1 593 27 is_stmt 0 view .LVU280
 1037 0064 46F00806 		orr	r6, r6, #8
 1038              	.LVL109:
 594:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1039              		.loc 1 594 21 is_stmt 1 view .LVU281
 594:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1040              		.loc 1 594 27 is_stmt 0 view .LVU282
 1041 0068 0132     		adds	r2, r2, #1
 1042 006a 0F92     		str	r2, [sp, #60]
 595:lvgl/src/misc/lv_printf.c ****                     break;
 1043              		.loc 1 595 21 is_stmt 1 view .LVU283
 1044              	.LVL110:
 596:lvgl/src/misc/lv_printf.c ****                 case '#':
 1045              		.loc 1 596 21 view .LVU284
 595:lvgl/src/misc/lv_printf.c ****                     break;
 1046              		.loc 1 595 23 is_stmt 0 view .LVU285
 1047 006c 0123     		movs	r3, #1
 596:lvgl/src/misc/lv_printf.c ****                 case '#':
 1048              		.loc 1 596 21 view .LVU286
 1049 006e 06E0     		b	.L77
 1050              	.LVL111:
 1051              	.L82:
 598:lvgl/src/misc/lv_printf.c ****                     format++;
 1052              		.loc 1 598 21 is_stmt 1 view .LVU287
 598:lvgl/src/misc/lv_printf.c ****                     format++;
 1053              		.loc 1 598 27 is_stmt 0 view .LVU288
 1054 0070 46F01006 		orr	r6, r6, #16
 1055              	.LVL112:
 599:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1056              		.loc 1 599 21 is_stmt 1 view .LVU289
 599:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1057              		.loc 1 599 27 is_stmt 0 view .LVU290
 1058 0074 0132     		adds	r2, r2, #1
 1059 0076 0F92     		str	r2, [sp, #60]
 600:lvgl/src/misc/lv_printf.c ****                     break;
 1060              		.loc 1 600 21 is_stmt 1 view .LVU291
 1061              	.LVL113:
 601:lvgl/src/misc/lv_printf.c ****                 default :
 1062              		.loc 1 601 21 view .LVU292
 600:lvgl/src/misc/lv_printf.c ****                     break;
 1063              		.loc 1 600 23 is_stmt 0 view .LVU293
 1064 0078 0123     		movs	r3, #1
 601:lvgl/src/misc/lv_printf.c ****                 default :
 1065              		.loc 1 601 21 view .LVU294
 1066 007a 00E0     		b	.L77
 1067              	.LVL114:
 1068              	.L154:
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 1069              		.loc 1 576 13 view .LVU295
 1070 007c 0023     		movs	r3, #0
 1071              	.L77:
 1072              	.LVL115:
 606:lvgl/src/misc/lv_printf.c **** 
 1073              		.loc 1 606 17 is_stmt 1 view .LVU296
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 37


 1074 007e 4BB3     		cbz	r3, .L169
 1075              	.LVL116:
 1076              	.L84:
 575:lvgl/src/misc/lv_printf.c ****             switch(*format) {
 1077              		.loc 1 575 9 view .LVU297
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 1078              		.loc 1 576 13 view .LVU298
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 1079              		.loc 1 576 20 is_stmt 0 view .LVU299
 1080 0080 0F9A     		ldr	r2, [sp, #60]
 1081 0082 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 1082              		.loc 1 576 13 view .LVU300
 1083 0084 203B     		subs	r3, r3, #32
 1084 0086 102B     		cmp	r3, #16
 1085 0088 F8D8     		bhi	.L154
 1086 008a 01A1     		adr	r1, .L79
 1087 008c 51F823F0 		ldr	pc, [r1, r3, lsl #2]
 1088              		.p2align 2
 1089              	.L79:
 1090 0090 65000000 		.word	.L83+1
 1091 0094 7D000000 		.word	.L154+1
 1092 0098 7D000000 		.word	.L154+1
 1093 009c 71000000 		.word	.L82+1
 1094 00a0 7D000000 		.word	.L154+1
 1095 00a4 7D000000 		.word	.L154+1
 1096 00a8 7D000000 		.word	.L154+1
 1097 00ac 7D000000 		.word	.L154+1
 1098 00b0 7D000000 		.word	.L154+1
 1099 00b4 7D000000 		.word	.L154+1
 1100 00b8 7D000000 		.word	.L154+1
 1101 00bc 59000000 		.word	.L81+1
 1102 00c0 7D000000 		.word	.L154+1
 1103 00c4 4D000000 		.word	.L80+1
 1104 00c8 7D000000 		.word	.L154+1
 1105 00cc 7D000000 		.word	.L154+1
 1106 00d0 41000000 		.word	.L78+1
 1107              	.LVL117:
 1108              		.p2align 1
 1109              	.L169:
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1110              		.loc 1 610 12 view .LVU301
 1111 00d4 0B93     		str	r3, [sp, #44]
 609:lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 1112              		.loc 1 609 9 is_stmt 1 view .LVU302
 1113              	.LVL118:
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1114              		.loc 1 610 9 view .LVU303
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1115              		.loc 1 610 12 is_stmt 0 view .LVU304
 1116 00d6 0F9B     		ldr	r3, [sp, #60]
 1117              	.LVL119:
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1118              		.loc 1 610 12 view .LVU305
 1119 00d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1120              	.LVL120:
 1121              	.LBB30:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 38


 1122              	.LBI30:
 152:lvgl/src/misc/lv_printf.c **** {
 1123              		.loc 1 152 20 is_stmt 1 view .LVU306
 1124              	.LBB31:
 154:lvgl/src/misc/lv_printf.c **** }
 1125              		.loc 1 154 5 view .LVU307
 154:lvgl/src/misc/lv_printf.c **** }
 1126              		.loc 1 154 24 is_stmt 0 view .LVU308
 1127 00da A2F13003 		sub	r3, r2, #48
 1128 00de DBB2     		uxtb	r3, r3
 1129              	.LVL121:
 154:lvgl/src/misc/lv_printf.c **** }
 1130              		.loc 1 154 24 view .LVU309
 1131              	.LBE31:
 1132              	.LBE30:
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1133              		.loc 1 610 11 view .LVU310
 1134 00e0 092B     		cmp	r3, #9
 1135 00e2 18D9     		bls	.L170
 613:lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 1136              		.loc 1 613 14 is_stmt 1 view .LVU311
 613:lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 1137              		.loc 1 613 16 is_stmt 0 view .LVU312
 1138 00e4 2A2A     		cmp	r2, #42
 1139 00e6 1BD0     		beq	.L171
 609:lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 1140              		.loc 1 609 15 view .LVU313
 1141 00e8 DDF82CA0 		ldr	r10, [sp, #44]
 1142              	.LVL122:
 1143              	.L86:
 626:lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1144              		.loc 1 626 9 is_stmt 1 view .LVU314
 627:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1145              		.loc 1 627 9 view .LVU315
 627:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1146              		.loc 1 627 12 is_stmt 0 view .LVU316
 1147 00ec 0F9B     		ldr	r3, [sp, #60]
 1148 00ee 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 627:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1149              		.loc 1 627 11 view .LVU317
 1150 00f0 2E2A     		cmp	r2, #46
 1151 00f2 25D0     		beq	.L172
 1152              	.LVL123:
 1153              	.L89:
 641:lvgl/src/misc/lv_printf.c ****             case 'l' :
 1154              		.loc 1 641 9 is_stmt 1 view .LVU318
 641:lvgl/src/misc/lv_printf.c ****             case 'l' :
 1155              		.loc 1 641 16 is_stmt 0 view .LVU319
 1156 00f4 0F9A     		ldr	r2, [sp, #60]
 1157 00f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 641:lvgl/src/misc/lv_printf.c ****             case 'l' :
 1158              		.loc 1 641 9 view .LVU320
 1159 00f8 683B     		subs	r3, r3, #104
 1160 00fa 122B     		cmp	r3, #18
 1161 00fc 5CD8     		bhi	.L91
 1162 00fe DFE803F0 		tbb	[pc, r3]
 1163              	.L93:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 39


 1164 0102 49       		.byte	(.L97-.L93)/2
 1165 0103 5B       		.byte	(.L91-.L93)/2
 1166 0104 7B       		.byte	(.L96-.L93)/2
 1167 0105 5B       		.byte	(.L91-.L93)/2
 1168 0106 3B       		.byte	(.L95-.L93)/2
 1169 0107 5B       		.byte	(.L91-.L93)/2
 1170 0108 5B       		.byte	(.L91-.L93)/2
 1171 0109 5B       		.byte	(.L91-.L93)/2
 1172 010a 5B       		.byte	(.L91-.L93)/2
 1173 010b 5B       		.byte	(.L91-.L93)/2
 1174 010c 5B       		.byte	(.L91-.L93)/2
 1175 010d 5B       		.byte	(.L91-.L93)/2
 1176 010e 57       		.byte	(.L94-.L93)/2
 1177 010f 5B       		.byte	(.L91-.L93)/2
 1178 0110 5B       		.byte	(.L91-.L93)/2
 1179 0111 5B       		.byte	(.L91-.L93)/2
 1180 0112 5B       		.byte	(.L91-.L93)/2
 1181 0113 5B       		.byte	(.L91-.L93)/2
 1182 0114 80       		.byte	(.L92-.L93)/2
 1183              	.LVL124:
 1184 0115 00       		.p2align 1
 1185              	.L170:
 611:lvgl/src/misc/lv_printf.c ****         }
 1186              		.loc 1 611 13 is_stmt 1 view .LVU321
 611:lvgl/src/misc/lv_printf.c ****         }
 1187              		.loc 1 611 21 is_stmt 0 view .LVU322
 1188 0116 0FA8     		add	r0, sp, #60
 1189 0118 FFF7FEFF 		bl	_atoi
 1190              	.LVL125:
 1191 011c 8246     		mov	r10, r0
 1192              	.LVL126:
 611:lvgl/src/misc/lv_printf.c ****         }
 1193              		.loc 1 611 21 view .LVU323
 1194 011e E5E7     		b	.L86
 1195              	.LVL127:
 1196              	.L171:
 1197              	.LBB32:
 614:lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 1198              		.loc 1 614 13 is_stmt 1 view .LVU324
 614:lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 1199              		.loc 1 614 23 is_stmt 0 view .LVU325
 1200 0120 1C9B     		ldr	r3, [sp, #112]
 1201 0122 1A1D     		adds	r2, r3, #4
 1202 0124 1C92     		str	r2, [sp, #112]
 1203 0126 1B68     		ldr	r3, [r3]
 615:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 1204              		.loc 1 615 13 is_stmt 1 view .LVU326
 615:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 1205              		.loc 1 615 15 is_stmt 0 view .LVU327
 1206 0128 002B     		cmp	r3, #0
 1207 012a 04DB     		blt	.L173
 620:lvgl/src/misc/lv_printf.c ****             }
 1208              		.loc 1 620 17 is_stmt 1 view .LVU328
 620:lvgl/src/misc/lv_printf.c ****             }
 1209              		.loc 1 620 23 is_stmt 0 view .LVU329
 1210 012c 9A46     		mov	r10, r3
 1211              	.LVL128:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 40


 1212              	.L88:
 622:lvgl/src/misc/lv_printf.c ****         }
 1213              		.loc 1 622 13 is_stmt 1 view .LVU330
 622:lvgl/src/misc/lv_printf.c ****         }
 1214              		.loc 1 622 19 is_stmt 0 view .LVU331
 1215 012e 0F9B     		ldr	r3, [sp, #60]
 1216 0130 0133     		adds	r3, r3, #1
 1217 0132 0F93     		str	r3, [sp, #60]
 1218 0134 DAE7     		b	.L86
 1219              	.LVL129:
 1220              	.L173:
 616:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 1221              		.loc 1 616 17 is_stmt 1 view .LVU332
 616:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 1222              		.loc 1 616 23 is_stmt 0 view .LVU333
 1223 0136 46F00206 		orr	r6, r6, #2
 1224              	.LVL130:
 617:lvgl/src/misc/lv_printf.c ****             }
 1225              		.loc 1 617 17 is_stmt 1 view .LVU334
 617:lvgl/src/misc/lv_printf.c ****             }
 1226              		.loc 1 617 40 is_stmt 0 view .LVU335
 1227 013a C3F1000A 		rsb	r10, r3, #0
 1228              	.LVL131:
 617:lvgl/src/misc/lv_printf.c ****             }
 1229              		.loc 1 617 40 view .LVU336
 1230 013e F6E7     		b	.L88
 1231              	.LVL132:
 1232              	.L172:
 617:lvgl/src/misc/lv_printf.c ****             }
 1233              		.loc 1 617 40 view .LVU337
 1234              	.LBE32:
 628:lvgl/src/misc/lv_printf.c ****             format++;
 1235              		.loc 1 628 13 is_stmt 1 view .LVU338
 628:lvgl/src/misc/lv_printf.c ****             format++;
 1236              		.loc 1 628 19 is_stmt 0 view .LVU339
 1237 0140 46F48066 		orr	r6, r6, #1024
 1238              	.LVL133:
 629:lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 1239              		.loc 1 629 13 is_stmt 1 view .LVU340
 629:lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 1240              		.loc 1 629 19 is_stmt 0 view .LVU341
 1241 0144 5A1C     		adds	r2, r3, #1
 1242 0146 0F92     		str	r2, [sp, #60]
 630:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1243              		.loc 1 630 13 is_stmt 1 view .LVU342
 630:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1244              		.loc 1 630 16 is_stmt 0 view .LVU343
 1245 0148 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1246              	.LVL134:
 1247              	.LBB33:
 1248              	.LBI33:
 152:lvgl/src/misc/lv_printf.c **** {
 1249              		.loc 1 152 20 is_stmt 1 view .LVU344
 1250              	.LBB34:
 154:lvgl/src/misc/lv_printf.c **** }
 1251              		.loc 1 154 5 view .LVU345
 154:lvgl/src/misc/lv_printf.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 41


 1252              		.loc 1 154 24 is_stmt 0 view .LVU346
 1253 014a A2F13003 		sub	r3, r2, #48
 1254 014e DBB2     		uxtb	r3, r3
 1255              	.LVL135:
 154:lvgl/src/misc/lv_printf.c **** }
 1256              		.loc 1 154 24 view .LVU347
 1257              	.LBE34:
 1258              	.LBE33:
 630:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1259              		.loc 1 630 15 view .LVU348
 1260 0150 092B     		cmp	r3, #9
 1261 0152 0CD9     		bls	.L174
 633:lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 1262              		.loc 1 633 18 is_stmt 1 view .LVU349
 633:lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 1263              		.loc 1 633 20 is_stmt 0 view .LVU350
 1264 0154 2A2A     		cmp	r2, #42
 1265 0156 CDD1     		bne	.L89
 1266              	.LBB35:
 634:lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 1267              		.loc 1 634 17 is_stmt 1 view .LVU351
 634:lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 1268              		.loc 1 634 27 is_stmt 0 view .LVU352
 1269 0158 1C9B     		ldr	r3, [sp, #112]
 1270 015a 1A1D     		adds	r2, r3, #4
 1271 015c 1C92     		str	r2, [sp, #112]
 1272 015e 1C68     		ldr	r4, [r3]
 635:lvgl/src/misc/lv_printf.c ****                 format++;
 1273              		.loc 1 635 17 is_stmt 1 view .LVU353
 635:lvgl/src/misc/lv_printf.c ****                 format++;
 1274              		.loc 1 635 59 is_stmt 0 view .LVU354
 1275 0160 24EAE473 		bic	r3, r4, r4, asr #31
 1276 0164 0B93     		str	r3, [sp, #44]
 1277              	.LVL136:
 636:lvgl/src/misc/lv_printf.c ****             }
 1278              		.loc 1 636 17 is_stmt 1 view .LVU355
 636:lvgl/src/misc/lv_printf.c ****             }
 1279              		.loc 1 636 23 is_stmt 0 view .LVU356
 1280 0166 0F9B     		ldr	r3, [sp, #60]
 1281              	.LVL137:
 636:lvgl/src/misc/lv_printf.c ****             }
 1282              		.loc 1 636 23 view .LVU357
 1283 0168 0133     		adds	r3, r3, #1
 1284 016a 0F93     		str	r3, [sp, #60]
 1285 016c C2E7     		b	.L89
 1286              	.LVL138:
 1287              	.L174:
 636:lvgl/src/misc/lv_printf.c ****             }
 1288              		.loc 1 636 23 view .LVU358
 1289              	.LBE35:
 631:lvgl/src/misc/lv_printf.c ****             }
 1290              		.loc 1 631 17 is_stmt 1 view .LVU359
 631:lvgl/src/misc/lv_printf.c ****             }
 1291              		.loc 1 631 29 is_stmt 0 view .LVU360
 1292 016e 0FA8     		add	r0, sp, #60
 1293 0170 FFF7FEFF 		bl	_atoi
 1294              	.LVL139:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 42


 1295 0174 0B90     		str	r0, [sp, #44]
 1296              	.LVL140:
 631:lvgl/src/misc/lv_printf.c ****             }
 1297              		.loc 1 631 29 view .LVU361
 1298 0176 BDE7     		b	.L89
 1299              	.LVL141:
 1300              	.L95:
 643:lvgl/src/misc/lv_printf.c ****                 format++;
 1301              		.loc 1 643 17 is_stmt 1 view .LVU362
 643:lvgl/src/misc/lv_printf.c ****                 format++;
 1302              		.loc 1 643 23 is_stmt 0 view .LVU363
 1303 0178 46F48071 		orr	r1, r6, #256
 1304              	.LVL142:
 644:lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 1305              		.loc 1 644 17 is_stmt 1 view .LVU364
 644:lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 1306              		.loc 1 644 23 is_stmt 0 view .LVU365
 1307 017c 531C     		adds	r3, r2, #1
 1308 017e 0F93     		str	r3, [sp, #60]
 645:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1309              		.loc 1 645 17 is_stmt 1 view .LVU366
 645:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1310              		.loc 1 645 20 is_stmt 0 view .LVU367
 1311 0180 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 645:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1312              		.loc 1 645 19 view .LVU368
 1313 0182 6C2B     		cmp	r3, #108
 1314 0184 01D0     		beq	.L175
 643:lvgl/src/misc/lv_printf.c ****                 format++;
 1315              		.loc 1 643 23 view .LVU369
 1316 0186 0E46     		mov	r6, r1
 1317 0188 16E0     		b	.L91
 1318              	.L175:
 646:lvgl/src/misc/lv_printf.c ****                     format++;
 1319              		.loc 1 646 21 is_stmt 1 view .LVU370
 646:lvgl/src/misc/lv_printf.c ****                     format++;
 1320              		.loc 1 646 27 is_stmt 0 view .LVU371
 1321 018a 46F44076 		orr	r6, r6, #768
 1322              	.LVL143:
 647:lvgl/src/misc/lv_printf.c ****                 }
 1323              		.loc 1 647 21 is_stmt 1 view .LVU372
 647:lvgl/src/misc/lv_printf.c ****                 }
 1324              		.loc 1 647 27 is_stmt 0 view .LVU373
 1325 018e 0232     		adds	r2, r2, #2
 1326 0190 0F92     		str	r2, [sp, #60]
 1327 0192 11E0     		b	.L91
 1328              	.L97:
 651:lvgl/src/misc/lv_printf.c ****                 format++;
 1329              		.loc 1 651 17 is_stmt 1 view .LVU374
 651:lvgl/src/misc/lv_printf.c ****                 format++;
 1330              		.loc 1 651 23 is_stmt 0 view .LVU375
 1331 0194 46F08001 		orr	r1, r6, #128
 1332              	.LVL144:
 652:lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 1333              		.loc 1 652 17 is_stmt 1 view .LVU376
 652:lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 1334              		.loc 1 652 23 is_stmt 0 view .LVU377
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 43


 1335 0198 531C     		adds	r3, r2, #1
 1336 019a 0F93     		str	r3, [sp, #60]
 653:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1337              		.loc 1 653 17 is_stmt 1 view .LVU378
 653:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1338              		.loc 1 653 20 is_stmt 0 view .LVU379
 1339 019c 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 653:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1340              		.loc 1 653 19 view .LVU380
 1341 019e 682B     		cmp	r3, #104
 1342 01a0 01D0     		beq	.L176
 651:lvgl/src/misc/lv_printf.c ****                 format++;
 1343              		.loc 1 651 23 view .LVU381
 1344 01a2 0E46     		mov	r6, r1
 1345 01a4 08E0     		b	.L91
 1346              	.L176:
 654:lvgl/src/misc/lv_printf.c ****                     format++;
 1347              		.loc 1 654 21 is_stmt 1 view .LVU382
 654:lvgl/src/misc/lv_printf.c ****                     format++;
 1348              		.loc 1 654 27 is_stmt 0 view .LVU383
 1349 01a6 46F0C006 		orr	r6, r6, #192
 1350              	.LVL145:
 655:lvgl/src/misc/lv_printf.c ****                 }
 1351              		.loc 1 655 21 is_stmt 1 view .LVU384
 655:lvgl/src/misc/lv_printf.c ****                 }
 1352              		.loc 1 655 27 is_stmt 0 view .LVU385
 1353 01aa 0232     		adds	r2, r2, #2
 1354 01ac 0F92     		str	r2, [sp, #60]
 1355 01ae 03E0     		b	.L91
 1356              	.L94:
 660:lvgl/src/misc/lv_printf.c ****                 format++;
 1357              		.loc 1 660 17 is_stmt 1 view .LVU386
 660:lvgl/src/misc/lv_printf.c ****                 format++;
 1358              		.loc 1 660 23 is_stmt 0 view .LVU387
 1359 01b0 46F48076 		orr	r6, r6, #256
 1360              	.LVL146:
 661:lvgl/src/misc/lv_printf.c ****                 break;
 1361              		.loc 1 661 17 is_stmt 1 view .LVU388
 661:lvgl/src/misc/lv_printf.c ****                 break;
 1362              		.loc 1 661 23 is_stmt 0 view .LVU389
 1363 01b4 0132     		adds	r2, r2, #1
 1364 01b6 0F92     		str	r2, [sp, #60]
 662:lvgl/src/misc/lv_printf.c **** #endif
 1365              		.loc 1 662 17 is_stmt 1 view .LVU390
 1366              	.L91:
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1367              		.loc 1 677 9 view .LVU391
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1368              		.loc 1 677 16 is_stmt 0 view .LVU392
 1369 01b8 0F99     		ldr	r1, [sp, #60]
 1370 01ba 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1371              		.loc 1 677 9 view .LVU393
 1372 01bc 7828     		cmp	r0, #120
 1373 01be 11D8     		bhi	.L98
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1374              		.loc 1 677 9 view .LVU394
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 44


 1375 01c0 6228     		cmp	r0, #98
 1376 01c2 23D3     		bcc	.L177
 1377 01c4 A0F16202 		sub	r2, r0, #98
 1378 01c8 D2B2     		uxtb	r2, r2
 1379 01ca 0123     		movs	r3, #1
 1380 01cc 9340     		lsls	r3, r3, r2
 1381 01ce 9B4A     		ldr	r2, .L189
 1382 01d0 1A40     		ands	r2, r2, r3
 1383 01d2 6ABB     		cbnz	r2, .L101
 1384 01d4 13F4003F 		tst	r3, #131072
 1385 01d8 40F08681 		bne	.L102
 1386 01dc 13F0020F 		tst	r3, #2
 1387 01e0 40F05081 		bne	.L178
 1388              	.L98:
 846:lvgl/src/misc/lv_printf.c ****                 format++;
 847:lvgl/src/misc/lv_printf.c ****                 break;
 848:lvgl/src/misc/lv_printf.c **** 
 849:lvgl/src/misc/lv_printf.c ****             default :
 850:lvgl/src/misc/lv_printf.c ****                 out(*format, buffer, idx++, maxlen);
 1389              		.loc 1 850 17 is_stmt 1 view .LVU395
 1390 01e4 6C1C     		adds	r4, r5, #1
 1391              	.LVL147:
 1392              		.loc 1 850 17 is_stmt 0 view .LVU396
 1393 01e6 3B46     		mov	r3, r7
 1394 01e8 2A46     		mov	r2, r5
 1395 01ea 5946     		mov	r1, fp
 1396 01ec C047     		blx	r8
 1397              	.LVL148:
 851:lvgl/src/misc/lv_printf.c ****                 format++;
 1398              		.loc 1 851 17 is_stmt 1 view .LVU397
 1399              		.loc 1 851 23 is_stmt 0 view .LVU398
 1400 01ee 0F9B     		ldr	r3, [sp, #60]
 1401 01f0 0133     		adds	r3, r3, #1
 1402 01f2 0F93     		str	r3, [sp, #60]
 852:lvgl/src/misc/lv_printf.c ****                 break;
 1403              		.loc 1 852 17 is_stmt 1 view .LVU399
 850:lvgl/src/misc/lv_printf.c ****                 format++;
 1404              		.loc 1 850 17 is_stmt 0 view .LVU400
 1405 01f4 2546     		mov	r5, r4
 1406              		.loc 1 852 17 view .LVU401
 1407 01f6 0EE7     		b	.L150
 1408              	.LVL149:
 1409              	.L96:
 665:lvgl/src/misc/lv_printf.c ****                 format++;
 1410              		.loc 1 665 17 is_stmt 1 view .LVU402
 665:lvgl/src/misc/lv_printf.c ****                 format++;
 1411              		.loc 1 665 23 is_stmt 0 view .LVU403
 1412 01f8 46F40076 		orr	r6, r6, #512
 1413              	.LVL150:
 666:lvgl/src/misc/lv_printf.c ****                 break;
 1414              		.loc 1 666 17 is_stmt 1 view .LVU404
 666:lvgl/src/misc/lv_printf.c ****                 break;
 1415              		.loc 1 666 23 is_stmt 0 view .LVU405
 1416 01fc 0132     		adds	r2, r2, #1
 1417 01fe 0F92     		str	r2, [sp, #60]
 667:lvgl/src/misc/lv_printf.c ****             case 'z' :
 1418              		.loc 1 667 17 is_stmt 1 view .LVU406
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 45


 1419 0200 DAE7     		b	.L91
 1420              	.L92:
 669:lvgl/src/misc/lv_printf.c ****                 format++;
 1421              		.loc 1 669 17 view .LVU407
 669:lvgl/src/misc/lv_printf.c ****                 format++;
 1422              		.loc 1 669 23 is_stmt 0 view .LVU408
 1423 0202 46F48076 		orr	r6, r6, #256
 1424              	.LVL151:
 670:lvgl/src/misc/lv_printf.c ****                 break;
 1425              		.loc 1 670 17 is_stmt 1 view .LVU409
 670:lvgl/src/misc/lv_printf.c ****                 break;
 1426              		.loc 1 670 23 is_stmt 0 view .LVU410
 1427 0206 0132     		adds	r2, r2, #1
 1428 0208 0F92     		str	r2, [sp, #60]
 671:lvgl/src/misc/lv_printf.c ****             default :
 1429              		.loc 1 671 17 is_stmt 1 view .LVU411
 1430 020a D5E7     		b	.L91
 1431              	.L177:
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1432              		.loc 1 677 9 is_stmt 0 view .LVU412
 1433 020c 2528     		cmp	r0, #37
 1434 020e 0AD1     		bne	.L179
 845:lvgl/src/misc/lv_printf.c ****                 format++;
 1435              		.loc 1 845 17 is_stmt 1 view .LVU413
 1436 0210 6C1C     		adds	r4, r5, #1
 1437              	.LVL152:
 845:lvgl/src/misc/lv_printf.c ****                 format++;
 1438              		.loc 1 845 17 is_stmt 0 view .LVU414
 1439 0212 3B46     		mov	r3, r7
 1440 0214 2A46     		mov	r2, r5
 1441 0216 5946     		mov	r1, fp
 1442 0218 2520     		movs	r0, #37
 1443 021a C047     		blx	r8
 1444              	.LVL153:
 846:lvgl/src/misc/lv_printf.c ****                 break;
 1445              		.loc 1 846 17 is_stmt 1 view .LVU415
 846:lvgl/src/misc/lv_printf.c ****                 break;
 1446              		.loc 1 846 23 is_stmt 0 view .LVU416
 1447 021c 0F9B     		ldr	r3, [sp, #60]
 1448 021e 0133     		adds	r3, r3, #1
 1449 0220 0F93     		str	r3, [sp, #60]
 847:lvgl/src/misc/lv_printf.c **** 
 1450              		.loc 1 847 17 is_stmt 1 view .LVU417
 845:lvgl/src/misc/lv_printf.c ****                 format++;
 1451              		.loc 1 845 17 is_stmt 0 view .LVU418
 1452 0222 2546     		mov	r5, r4
 847:lvgl/src/misc/lv_printf.c **** 
 1453              		.loc 1 847 17 view .LVU419
 1454 0224 F7E6     		b	.L150
 1455              	.LVL154:
 1456              	.L179:
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1457              		.loc 1 677 9 view .LVU420
 1458 0226 DDD3     		bcc	.L98
 1459 0228 5028     		cmp	r0, #80
 1460 022a 01D0     		beq	.L101
 1461 022c 5828     		cmp	r0, #88
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 46


 1462 022e D9D1     		bne	.L98
 1463              	.L101:
 1464              	.LBB36:
 688:lvgl/src/misc/lv_printf.c ****                     if(*format == 'x' || *format == 'X') {
 1465              		.loc 1 688 21 is_stmt 1 view .LVU421
 689:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1466              		.loc 1 689 21 view .LVU422
 689:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1467              		.loc 1 689 23 is_stmt 0 view .LVU423
 1468 0230 7828     		cmp	r0, #120
 1469 0232 28D0     		beq	.L158
 1470 0234 5038     		subs	r0, r0, #80
 1471 0236 2028     		cmp	r0, #32
 1472 0238 21D8     		bhi	.L105
 1473 023a DFE800F0 		tbb	[pc, r0]
 1474              	.L107:
 1475 023e 13       		.byte	(.L106-.L107)/2
 1476 023f 20       		.byte	(.L105-.L107)/2
 1477 0240 20       		.byte	(.L105-.L107)/2
 1478 0241 20       		.byte	(.L105-.L107)/2
 1479 0242 20       		.byte	(.L105-.L107)/2
 1480 0243 20       		.byte	(.L105-.L107)/2
 1481 0244 20       		.byte	(.L105-.L107)/2
 1482 0245 20       		.byte	(.L105-.L107)/2
 1483 0246 11       		.byte	(.L109-.L107)/2
 1484 0247 20       		.byte	(.L105-.L107)/2
 1485 0248 20       		.byte	(.L105-.L107)/2
 1486 0249 20       		.byte	(.L105-.L107)/2
 1487 024a 20       		.byte	(.L105-.L107)/2
 1488 024b 20       		.byte	(.L105-.L107)/2
 1489 024c 20       		.byte	(.L105-.L107)/2
 1490 024d 20       		.byte	(.L105-.L107)/2
 1491 024e 20       		.byte	(.L105-.L107)/2
 1492 024f 20       		.byte	(.L105-.L107)/2
 1493 0250 1E       		.byte	(.L108-.L107)/2
 1494 0251 20       		.byte	(.L105-.L107)/2
 1495 0252 20       		.byte	(.L105-.L107)/2
 1496 0253 20       		.byte	(.L105-.L107)/2
 1497 0254 20       		.byte	(.L105-.L107)/2
 1498 0255 20       		.byte	(.L105-.L107)/2
 1499 0256 20       		.byte	(.L105-.L107)/2
 1500 0257 20       		.byte	(.L105-.L107)/2
 1501 0258 20       		.byte	(.L105-.L107)/2
 1502 0259 20       		.byte	(.L105-.L107)/2
 1503 025a 20       		.byte	(.L105-.L107)/2
 1504 025b 20       		.byte	(.L105-.L107)/2
 1505 025c 20       		.byte	(.L105-.L107)/2
 1506 025d 60       		.byte	(.L159-.L107)/2
 1507 025e 13       		.byte	(.L106-.L107)/2
 1508 025f 00       		.p2align 1
 1509              	.L109:
 1510 0260 1022     		movs	r2, #16
 1511 0262 11E0     		b	.L104
 1512              	.L106:
 693:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1513              		.loc 1 693 25 is_stmt 1 view .LVU424
 1514              	.LVL155:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 47


 694:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1515              		.loc 1 694 25 view .LVU425
 696:lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG_LONG;
 1516              		.loc 1 696 25 view .LVU426
 700:lvgl/src/misc/lv_printf.c **** 
 1517              		.loc 1 700 29 view .LVU427
 700:lvgl/src/misc/lv_printf.c **** 
 1518              		.loc 1 700 35 is_stmt 0 view .LVU428
 1519 0264 46F48876 		orr	r6, r6, #272
 1520              	.LVL156:
 702:lvgl/src/misc/lv_printf.c ****                             format++;
 1521              		.loc 1 702 25 is_stmt 1 view .LVU429
 702:lvgl/src/misc/lv_printf.c ****                             format++;
 1522              		.loc 1 702 28 is_stmt 0 view .LVU430
 1523 0268 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 702:lvgl/src/misc/lv_printf.c ****                             format++;
 1524              		.loc 1 702 27 view .LVU431
 1525 026a 562B     		cmp	r3, #86
 1526 026c 01D0     		beq	.L180
 693:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1527              		.loc 1 693 30 view .LVU432
 1528 026e 1022     		movs	r2, #16
 1529 0270 0AE0     		b	.L104
 1530              	.L180:
 703:lvgl/src/misc/lv_printf.c ****                     }
 1531              		.loc 1 703 29 is_stmt 1 view .LVU433
 703:lvgl/src/misc/lv_printf.c ****                     }
 1532              		.loc 1 703 35 is_stmt 0 view .LVU434
 1533 0272 0131     		adds	r1, r1, #1
 1534 0274 0F91     		str	r1, [sp, #60]
 693:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1535              		.loc 1 693 30 view .LVU435
 1536 0276 1022     		movs	r2, #16
 1537 0278 06E0     		b	.L104
 1538              	.LVL157:
 1539              	.L108:
 689:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1540              		.loc 1 689 23 view .LVU436
 1541 027a 0222     		movs	r2, #2
 1542 027c 04E0     		b	.L104
 1543              	.L105:
 712:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 1544              		.loc 1 712 25 is_stmt 1 view .LVU437
 1545              	.LVL158:
 713:lvgl/src/misc/lv_printf.c ****                     }
 1546              		.loc 1 713 25 view .LVU438
 713:lvgl/src/misc/lv_printf.c ****                     }
 1547              		.loc 1 713 31 is_stmt 0 view .LVU439
 1548 027e 26F01006 		bic	r6, r6, #16
 1549              	.LVL159:
 712:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 1550              		.loc 1 712 30 view .LVU440
 1551 0282 0A22     		movs	r2, #10
 1552 0284 00E0     		b	.L104
 1553              	.LVL160:
 1554              	.L158:
 690:lvgl/src/misc/lv_printf.c ****                     }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 48


 1555              		.loc 1 690 30 view .LVU441
 1556 0286 1022     		movs	r2, #16
 1557              	.L104:
 1558              	.LVL161:
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1559              		.loc 1 716 21 is_stmt 1 view .LVU442
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1560              		.loc 1 716 24 is_stmt 0 view .LVU443
 1561 0288 0F9B     		ldr	r3, [sp, #60]
 1562 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1563              		.loc 1 716 23 view .LVU444
 1564 028c 582B     		cmp	r3, #88
 1565 028e 01D0     		beq	.L110
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1566              		.loc 1 716 39 discriminator 1 view .LVU445
 1567 0290 502B     		cmp	r3, #80
 1568 0292 01D1     		bne	.L111
 1569              	.L110:
 717:lvgl/src/misc/lv_printf.c ****                     }
 1570              		.loc 1 717 25 is_stmt 1 view .LVU446
 717:lvgl/src/misc/lv_printf.c ****                     }
 1571              		.loc 1 717 31 is_stmt 0 view .LVU447
 1572 0294 46F02006 		orr	r6, r6, #32
 1573              	.LVL162:
 1574              	.L111:
 721:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1575              		.loc 1 721 21 is_stmt 1 view .LVU448
 721:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1576              		.loc 1 721 23 is_stmt 0 view .LVU449
 1577 0298 692B     		cmp	r3, #105
 1578 029a 03D0     		beq	.L112
 721:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1579              		.loc 1 721 41 discriminator 1 view .LVU450
 1580 029c 642B     		cmp	r3, #100
 1581 029e 01D0     		beq	.L112
 722:lvgl/src/misc/lv_printf.c ****                     }
 1582              		.loc 1 722 25 is_stmt 1 view .LVU451
 722:lvgl/src/misc/lv_printf.c ****                     }
 1583              		.loc 1 722 31 is_stmt 0 view .LVU452
 1584 02a0 26F00C06 		bic	r6, r6, #12
 1585              	.LVL163:
 1586              	.L112:
 726:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 1587              		.loc 1 726 21 is_stmt 1 view .LVU453
 726:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 1588              		.loc 1 726 23 is_stmt 0 view .LVU454
 1589 02a4 16F4806F 		tst	r6, #1024
 1590 02a8 01D0     		beq	.L113
 727:lvgl/src/misc/lv_printf.c ****                     }
 1591              		.loc 1 727 25 is_stmt 1 view .LVU455
 727:lvgl/src/misc/lv_printf.c ****                     }
 1592              		.loc 1 727 31 is_stmt 0 view .LVU456
 1593 02aa 26F00106 		bic	r6, r6, #1
 1594              	.LVL164:
 1595              	.L113:
 731:lvgl/src/misc/lv_printf.c ****                         // signed
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 49


 1596              		.loc 1 731 21 is_stmt 1 view .LVU457
 731:lvgl/src/misc/lv_printf.c ****                         // signed
 1597              		.loc 1 731 23 is_stmt 0 view .LVU458
 1598 02ae 692B     		cmp	r3, #105
 1599 02b0 27D0     		beq	.L114
 731:lvgl/src/misc/lv_printf.c ****                         // signed
 1600              		.loc 1 731 41 discriminator 1 view .LVU459
 1601 02b2 642B     		cmp	r3, #100
 1602 02b4 25D0     		beq	.L114
 752:lvgl/src/misc/lv_printf.c ****                         lv_vaformat_t * vaf = va_arg(va, lv_vaformat_t *);
 1603              		.loc 1 752 26 is_stmt 1 view .LVU460
 752:lvgl/src/misc/lv_printf.c ****                         lv_vaformat_t * vaf = va_arg(va, lv_vaformat_t *);
 1604              		.loc 1 752 28 is_stmt 0 view .LVU461
 1605 02b6 562B     		cmp	r3, #86
 1606 02b8 00F09380 		beq	.L181
 762:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1607              		.loc 1 762 25 is_stmt 1 view .LVU462
 762:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1608              		.loc 1 762 27 is_stmt 0 view .LVU463
 1609 02bc 16F4007F 		tst	r6, #512
 1610 02c0 40F0A080 		bne	.L182
 767:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 1611              		.loc 1 767 30 is_stmt 1 view .LVU464
 767:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 1612              		.loc 1 767 32 is_stmt 0 view .LVU465
 1613 02c4 16F4807F 		tst	r6, #256
 1614 02c8 40F0BA80 		bne	.L183
 1615              	.LBB37:
 771:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1616              		.loc 1 771 29 is_stmt 1 view .LVU466
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1617              		.loc 1 772 115 is_stmt 0 view .LVU467
 1618 02cc 16F0400F 		tst	r6, #64
 1619 02d0 00F0CB80 		beq	.L126
 771:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1620              		.loc 1 771 94 view .LVU468
 1621 02d4 1C9B     		ldr	r3, [sp, #112]
 1622 02d6 191D     		adds	r1, r3, #4
 1623 02d8 1C91     		str	r1, [sp, #112]
 1624 02da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1625              	.L127:
 1626              	.LVL165:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1627              		.loc 1 773 29 is_stmt 1 view .LVU469
 773:lvgl/src/misc/lv_printf.c ****                         }
 1628              		.loc 1 773 35 is_stmt 0 view .LVU470
 1629 02dc 0596     		str	r6, [sp, #20]
 1630 02de CDF810A0 		str	r10, [sp, #16]
 1631 02e2 0B99     		ldr	r1, [sp, #44]
 1632 02e4 0391     		str	r1, [sp, #12]
 1633 02e6 0292     		str	r2, [sp, #8]
 1634 02e8 0022     		movs	r2, #0
 1635              	.LVL166:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1636              		.loc 1 773 35 view .LVU471
 1637 02ea 0192     		str	r2, [sp, #4]
 1638 02ec 0093     		str	r3, [sp]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 50


 1639 02ee 3B46     		mov	r3, r7
 1640              	.LVL167:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1641              		.loc 1 773 35 view .LVU472
 1642 02f0 2A46     		mov	r2, r5
 1643 02f2 5946     		mov	r1, fp
 1644 02f4 4046     		mov	r0, r8
 1645 02f6 FFF7FEFF 		bl	_ntoa_long
 1646              	.LVL168:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1647              		.loc 1 773 35 view .LVU473
 1648 02fa 0546     		mov	r5, r0
 1649              	.LVL169:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1650              		.loc 1 773 35 view .LVU474
 1651 02fc 22E0     		b	.L118
 1652              	.LVL170:
 1653              	.L159:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1654              		.loc 1 773 35 view .LVU475
 1655              	.LBE37:
 689:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1656              		.loc 1 689 23 view .LVU476
 1657 02fe 0822     		movs	r2, #8
 1658 0300 C2E7     		b	.L104
 1659              	.LVL171:
 1660              	.L114:
 733:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1661              		.loc 1 733 25 is_stmt 1 view .LVU477
 733:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1662              		.loc 1 733 27 is_stmt 0 view .LVU478
 1663 0302 16F4007F 		tst	r6, #512
 1664 0306 21D1     		bne	.L184
 740:lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 1665              		.loc 1 740 30 is_stmt 1 view .LVU479
 740:lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 1666              		.loc 1 740 32 is_stmt 0 view .LVU480
 1667 0308 16F4807F 		tst	r6, #256
 1668 030c 42D1     		bne	.L185
 1669              	.LBB38:
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1670              		.loc 1 746 29 is_stmt 1 view .LVU481
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1671              		.loc 1 746 92 is_stmt 0 view .LVU482
 1672 030e 16F0400F 		tst	r6, #64
 1673 0312 58D0     		beq	.L120
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1674              		.loc 1 746 76 view .LVU483
 1675 0314 1C9B     		ldr	r3, [sp, #112]
 1676 0316 191D     		adds	r1, r3, #4
 1677 0318 1C91     		str	r1, [sp, #112]
 1678 031a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679              	.L121:
 1680              	.LVL172:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1681              		.loc 1 748 29 is_stmt 1 discriminator 3 view .LVU484
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 51


 1682              		.loc 1 748 72 is_stmt 0 discriminator 3 view .LVU485
 1683 031c 83EAE371 		eor	r1, r3, r3, asr #31
 1684 0320 A1EBE371 		sub	r1, r1, r3, asr #31
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1685              		.loc 1 748 35 discriminator 3 view .LVU486
 1686 0324 0596     		str	r6, [sp, #20]
 1687 0326 CDF810A0 		str	r10, [sp, #16]
 1688 032a 0B98     		ldr	r0, [sp, #44]
 1689 032c 0390     		str	r0, [sp, #12]
 1690 032e 0292     		str	r2, [sp, #8]
 1691 0330 DB0F     		lsrs	r3, r3, #31
 1692              	.LVL173:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1693              		.loc 1 748 35 discriminator 3 view .LVU487
 1694 0332 0193     		str	r3, [sp, #4]
 1695 0334 0091     		str	r1, [sp]
 1696 0336 3B46     		mov	r3, r7
 1697 0338 2A46     		mov	r2, r5
 1698              	.LVL174:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1699              		.loc 1 748 35 discriminator 3 view .LVU488
 1700 033a 5946     		mov	r1, fp
 1701 033c 4046     		mov	r0, r8
 1702 033e FFF7FEFF 		bl	_ntoa_long
 1703              	.LVL175:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1704              		.loc 1 748 35 discriminator 3 view .LVU489
 1705 0342 0546     		mov	r5, r0
 1706              	.LVL176:
 1707              	.L118:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1708              		.loc 1 748 35 discriminator 3 view .LVU490
 1709              	.LBE38:
 776:lvgl/src/misc/lv_printf.c ****                     break;
 1710              		.loc 1 776 21 is_stmt 1 view .LVU491
 776:lvgl/src/misc/lv_printf.c ****                     break;
 1711              		.loc 1 776 27 is_stmt 0 view .LVU492
 1712 0344 0F9B     		ldr	r3, [sp, #60]
 1713 0346 0133     		adds	r3, r3, #1
 1714 0348 0F93     		str	r3, [sp, #60]
 777:lvgl/src/misc/lv_printf.c ****                 }
 1715              		.loc 1 777 21 is_stmt 1 view .LVU493
 1716 034a 64E6     		b	.L150
 1717              	.LVL177:
 1718              	.L184:
 1719              	.LBB39:
 735:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 1720              		.loc 1 735 29 view .LVU494
 735:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 1721              		.loc 1 735 45 is_stmt 0 view .LVU495
 1722 034c 1C9B     		ldr	r3, [sp, #112]
 1723 034e 0733     		adds	r3, r3, #7
 1724 0350 23F00703 		bic	r3, r3, #7
 1725 0354 03F10801 		add	r1, r3, #8
 1726 0358 1C91     		str	r1, [sp, #112]
 1727 035a 5968     		ldr	r1, [r3, #4]
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 52


 1728              		.loc 1 736 29 is_stmt 1 view .LVU496
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1729              		.loc 1 736 77 is_stmt 0 view .LVU497
 1730 035c 1B68     		ldr	r3, [r3]
 1731 035e 0846     		mov	r0, r1
 1732 0360 0029     		cmp	r1, #0
 1733 0362 13DB     		blt	.L186
 1734              	.L117:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1735              		.loc 1 736 35 view .LVU498
 1736 0364 0896     		str	r6, [sp, #32]
 1737 0366 CDF81CA0 		str	r10, [sp, #28]
 1738 036a 0B9C     		ldr	r4, [sp, #44]
 1739 036c 0694     		str	r4, [sp, #24]
 1740 036e 0492     		str	r2, [sp, #16]
 1741 0370 0022     		movs	r2, #0
 1742              	.LVL178:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1743              		.loc 1 736 35 view .LVU499
 1744 0372 0592     		str	r2, [sp, #20]
 1745 0374 C90F     		lsrs	r1, r1, #31
 1746 0376 0291     		str	r1, [sp, #8]
 1747 0378 0093     		str	r3, [sp]
 1748 037a 0190     		str	r0, [sp, #4]
 1749 037c 3B46     		mov	r3, r7
 1750 037e 2A46     		mov	r2, r5
 1751 0380 5946     		mov	r1, fp
 1752 0382 4046     		mov	r0, r8
 1753 0384 FFF7FEFF 		bl	_ntoa_long_long
 1754              	.LVL179:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1755              		.loc 1 736 35 view .LVU500
 1756 0388 0546     		mov	r5, r0
 1757              	.LVL180:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1758              		.loc 1 736 35 view .LVU501
 1759              	.LBE39:
 1760 038a DBE7     		b	.L118
 1761              	.LVL181:
 1762              	.L186:
 1763              	.LBB40:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1764              		.loc 1 736 77 view .LVU502
 1765 038c 5B42     		negs	r3, r3
 1766 038e 61EB4100 		sbc	r0, r1, r1, lsl #1
 1767 0392 E7E7     		b	.L117
 1768              	.L185:
 1769              	.LBE40:
 1770              	.LBB41:
 741:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 1771              		.loc 1 741 29 is_stmt 1 view .LVU503
 741:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 1772              		.loc 1 741 40 is_stmt 0 view .LVU504
 1773 0394 1C9B     		ldr	r3, [sp, #112]
 1774 0396 191D     		adds	r1, r3, #4
 1775 0398 1C91     		str	r1, [sp, #112]
 1776 039a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 53


 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1777              		.loc 1 742 29 is_stmt 1 view .LVU505
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1778              		.loc 1 742 72 is_stmt 0 view .LVU506
 1779 039c 83EAE371 		eor	r1, r3, r3, asr #31
 1780 03a0 A1EBE371 		sub	r1, r1, r3, asr #31
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1781              		.loc 1 742 35 view .LVU507
 1782 03a4 0596     		str	r6, [sp, #20]
 1783 03a6 CDF810A0 		str	r10, [sp, #16]
 1784 03aa 0B98     		ldr	r0, [sp, #44]
 1785 03ac 0390     		str	r0, [sp, #12]
 1786 03ae 0292     		str	r2, [sp, #8]
 1787 03b0 DB0F     		lsrs	r3, r3, #31
 1788 03b2 0193     		str	r3, [sp, #4]
 1789 03b4 0091     		str	r1, [sp]
 1790 03b6 3B46     		mov	r3, r7
 1791 03b8 2A46     		mov	r2, r5
 1792              	.LVL182:
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1793              		.loc 1 742 35 view .LVU508
 1794 03ba 5946     		mov	r1, fp
 1795 03bc 4046     		mov	r0, r8
 1796 03be FFF7FEFF 		bl	_ntoa_long
 1797              	.LVL183:
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1798              		.loc 1 742 35 view .LVU509
 1799 03c2 0546     		mov	r5, r0
 1800              	.LVL184:
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1801              		.loc 1 742 35 view .LVU510
 1802              	.LBE41:
 1803 03c4 BEE7     		b	.L118
 1804              	.LVL185:
 1805              	.L120:
 1806              	.LBB42:
 747:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1807              		.loc 1 747 141 discriminator 2 view .LVU511
 1808 03c6 16F0800F 		tst	r6, #128
 1809 03ca 05D0     		beq	.L122
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1810              		.loc 1 746 129 view .LVU512
 1811 03cc 1C9B     		ldr	r3, [sp, #112]
 1812 03ce 191D     		adds	r1, r3, #4
 1813 03d0 1C91     		str	r1, [sp, #112]
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1814              		.loc 1 746 118 view .LVU513
 1815 03d2 B3F90030 		ldrsh	r3, [r3]
 1816 03d6 A1E7     		b	.L121
 1817              	.L122:
 747:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1818              		.loc 1 747 141 view .LVU514
 1819 03d8 1C9B     		ldr	r3, [sp, #112]
 1820 03da 191D     		adds	r1, r3, #4
 1821 03dc 1C91     		str	r1, [sp, #112]
 1822 03de 1B68     		ldr	r3, [r3]
 1823 03e0 9CE7     		b	.L121
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 54


 1824              	.L181:
 747:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1825              		.loc 1 747 141 view .LVU515
 1826              	.LBE42:
 1827              	.LBB43:
 753:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 1828              		.loc 1 753 25 is_stmt 1 view .LVU516
 753:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 1829              		.loc 1 753 41 is_stmt 0 view .LVU517
 1830 03e2 1C9B     		ldr	r3, [sp, #112]
 1831 03e4 1A1D     		adds	r2, r3, #4
 1832              	.LVL186:
 753:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 1833              		.loc 1 753 41 view .LVU518
 1834 03e6 1C92     		str	r2, [sp, #112]
 1835 03e8 1B68     		ldr	r3, [r3]
 754:lvgl/src/misc/lv_printf.c **** 
 1836              		.loc 1 754 25 is_stmt 1 view .LVU519
 756:lvgl/src/misc/lv_printf.c ****                         idx += _vsnprintf(out, buffer + idx, maxlen - idx, vaf->fmt, copy);
 1837              		.loc 1 756 25 view .LVU520
 1838 03ea 5A68     		ldr	r2, [r3, #4]
 1839 03ec 1268     		ldr	r2, [r2]
 1840 03ee 1192     		str	r2, [sp, #68]
 757:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 1841              		.loc 1 757 25 view .LVU521
 757:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 1842              		.loc 1 757 32 is_stmt 0 view .LVU522
 1843 03f0 1B68     		ldr	r3, [r3]
 1844 03f2 0092     		str	r2, [sp]
 1845 03f4 7A1B     		subs	r2, r7, r5
 1846 03f6 0BEB0501 		add	r1, fp, r5
 1847 03fa 4046     		mov	r0, r8
 1848 03fc FFF700FE 		bl	_vsnprintf
 1849              	.LVL187:
 757:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 1850              		.loc 1 757 29 view .LVU523
 1851 0400 0544     		add	r5, r5, r0
 1852              	.LVL188:
 758:lvgl/src/misc/lv_printf.c ****                     }
 1853              		.loc 1 758 25 is_stmt 1 view .LVU524
 1854              	.LBE43:
 1855 0402 9FE7     		b	.L118
 1856              	.LVL189:
 1857              	.L182:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1858              		.loc 1 764 29 view .LVU525
 764:lvgl/src/misc/lv_printf.c **** #endif
 1859              		.loc 1 764 35 is_stmt 0 view .LVU526
 1860 0404 1C9B     		ldr	r3, [sp, #112]
 1861 0406 0733     		adds	r3, r3, #7
 1862 0408 23F00703 		bic	r3, r3, #7
 1863 040c 03F10801 		add	r1, r3, #8
 1864 0410 1C91     		str	r1, [sp, #112]
 1865 0412 0896     		str	r6, [sp, #32]
 1866 0414 CDF81CA0 		str	r10, [sp, #28]
 1867 0418 0B99     		ldr	r1, [sp, #44]
 1868 041a 0691     		str	r1, [sp, #24]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 55


 1869 041c 0021     		movs	r1, #0
 1870 041e 0492     		str	r2, [sp, #16]
 1871 0420 0591     		str	r1, [sp, #20]
 1872 0422 0291     		str	r1, [sp, #8]
 1873 0424 D3E90023 		ldrd	r2, [r3]
 1874              	.LVL190:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1875              		.loc 1 764 35 view .LVU527
 1876 0428 CDE90023 		strd	r2, [sp]
 1877 042c 3B46     		mov	r3, r7
 1878 042e 2A46     		mov	r2, r5
 1879 0430 5946     		mov	r1, fp
 1880 0432 4046     		mov	r0, r8
 1881 0434 FFF7FEFF 		bl	_ntoa_long_long
 1882              	.LVL191:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1883              		.loc 1 764 35 view .LVU528
 1884 0438 0546     		mov	r5, r0
 1885              	.LVL192:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1886              		.loc 1 764 35 view .LVU529
 1887 043a 83E7     		b	.L118
 1888              	.L190:
 1889              		.align	2
 1890              	.L189:
 1891 043c 85604800 		.word	4743301
 1892              	.LVL193:
 1893              	.L183:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1894              		.loc 1 768 29 is_stmt 1 view .LVU530
 768:lvgl/src/misc/lv_printf.c ****                         }
 1895              		.loc 1 768 35 is_stmt 0 view .LVU531
 1896 0440 1C9B     		ldr	r3, [sp, #112]
 1897 0442 191D     		adds	r1, r3, #4
 1898 0444 1C91     		str	r1, [sp, #112]
 1899 0446 0596     		str	r6, [sp, #20]
 1900 0448 CDF810A0 		str	r10, [sp, #16]
 1901 044c 0B99     		ldr	r1, [sp, #44]
 1902 044e 0391     		str	r1, [sp, #12]
 1903 0450 0292     		str	r2, [sp, #8]
 1904 0452 0022     		movs	r2, #0
 1905              	.LVL194:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1906              		.loc 1 768 35 view .LVU532
 1907 0454 0192     		str	r2, [sp, #4]
 1908 0456 1B68     		ldr	r3, [r3]
 1909 0458 0093     		str	r3, [sp]
 1910 045a 3B46     		mov	r3, r7
 1911 045c 2A46     		mov	r2, r5
 1912 045e 5946     		mov	r1, fp
 1913 0460 4046     		mov	r0, r8
 1914 0462 FFF7FEFF 		bl	_ntoa_long
 1915              	.LVL195:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1916              		.loc 1 768 35 view .LVU533
 1917 0466 0546     		mov	r5, r0
 1918              	.LVL196:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 56


 768:lvgl/src/misc/lv_printf.c ****                         }
 1919              		.loc 1 768 35 view .LVU534
 1920 0468 6CE7     		b	.L118
 1921              	.LVL197:
 1922              	.L126:
 1923              	.LBB44:
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1924              		.loc 1 772 186 discriminator 2 view .LVU535
 1925 046a 16F0800F 		tst	r6, #128
 1926 046e 04D0     		beq	.L128
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1927              		.loc 1 772 161 view .LVU536
 1928 0470 1C9B     		ldr	r3, [sp, #112]
 1929 0472 191D     		adds	r1, r3, #4
 1930 0474 1C91     		str	r1, [sp, #112]
 1931 0476 1B88     		ldrh	r3, [r3]
 1932 0478 30E7     		b	.L127
 1933              	.L128:
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1934              		.loc 1 772 186 view .LVU537
 1935 047a 1C9B     		ldr	r3, [sp, #112]
 1936 047c 191D     		adds	r1, r3, #4
 1937 047e 1C91     		str	r1, [sp, #112]
 1938 0480 1B68     		ldr	r3, [r3]
 1939 0482 2BE7     		b	.L127
 1940              	.LVL198:
 1941              	.L178:
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1942              		.loc 1 772 186 view .LVU538
 1943              	.LBE44:
 1944              	.LBE36:
 1945              	.LBB45:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1946              		.loc 1 799 21 is_stmt 1 view .LVU539
 801:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1947              		.loc 1 801 21 view .LVU540
 801:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1948              		.loc 1 801 23 is_stmt 0 view .LVU541
 1949 0484 16F00206 		ands	r6, r6, #2
 1950              	.LVL199:
 801:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1951              		.loc 1 801 23 view .LVU542
 1952 0488 1DD0     		beq	.L161
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1953              		.loc 1 799 34 view .LVU543
 1954 048a 0124     		movs	r4, #1
 1955              	.LVL200:
 1956              	.L130:
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1957              		.loc 1 807 21 is_stmt 1 view .LVU544
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1958              		.loc 1 807 31 is_stmt 0 view .LVU545
 1959 048c 1C98     		ldr	r0, [sp, #112]
 1960 048e 031D     		adds	r3, r0, #4
 1961 0490 1C93     		str	r3, [sp, #112]
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1962              		.loc 1 807 21 view .LVU546
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 57


 1963 0492 05F10109 		add	r9, r5, #1
 1964              	.LVL201:
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1965              		.loc 1 807 21 view .LVU547
 1966 0496 3B46     		mov	r3, r7
 1967 0498 2A46     		mov	r2, r5
 1968 049a 5946     		mov	r1, fp
 1969 049c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1970 049e C047     		blx	r8
 1971              	.LVL202:
 809:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1972              		.loc 1 809 21 is_stmt 1 view .LVU548
 809:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1973              		.loc 1 809 23 is_stmt 0 view .LVU549
 1974 04a0 A6B9     		cbnz	r6, .L187
 1975              	.LVL203:
 1976              	.L133:
 814:lvgl/src/misc/lv_printf.c ****                     break;
 1977              		.loc 1 814 21 is_stmt 1 view .LVU550
 814:lvgl/src/misc/lv_printf.c ****                     break;
 1978              		.loc 1 814 27 is_stmt 0 view .LVU551
 1979 04a2 0F9B     		ldr	r3, [sp, #60]
 1980 04a4 0133     		adds	r3, r3, #1
 1981 04a6 0F93     		str	r3, [sp, #60]
 815:lvgl/src/misc/lv_printf.c ****                 }
 1982              		.loc 1 815 21 is_stmt 1 view .LVU552
 1983 04a8 4D46     		mov	r5, r9
 1984 04aa B4E5     		b	.L150
 1985              	.LVL204:
 1986              	.L131:
 803:lvgl/src/misc/lv_printf.c ****                         }
 1987              		.loc 1 803 29 view .LVU553
 1988 04ac 02F10109 		add	r9, r2, #1
 1989              	.LVL205:
 803:lvgl/src/misc/lv_printf.c ****                         }
 1990              		.loc 1 803 29 is_stmt 0 view .LVU554
 1991 04b0 3B46     		mov	r3, r7
 1992 04b2 5946     		mov	r1, fp
 1993 04b4 2020     		movs	r0, #32
 1994 04b6 C047     		blx	r8
 1995              	.LVL206:
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1996              		.loc 1 802 32 view .LVU555
 1997 04b8 2346     		mov	r3, r4
 803:lvgl/src/misc/lv_printf.c ****                         }
 1998              		.loc 1 803 29 view .LVU556
 1999 04ba 4A46     		mov	r2, r9
 2000              	.LVL207:
 2001              	.L129:
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2002              		.loc 1 802 35 is_stmt 1 view .LVU557
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2003              		.loc 1 802 32 is_stmt 0 view .LVU558
 2004 04bc 5C1C     		adds	r4, r3, #1
 2005              	.LVL208:
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2006              		.loc 1 802 35 view .LVU559
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 58


 2007 04be 9A45     		cmp	r10, r3
 2008 04c0 F4D8     		bhi	.L131
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2009              		.loc 1 802 35 view .LVU560
 2010 04c2 1546     		mov	r5, r2
 2011 04c4 E2E7     		b	.L130
 2012              	.LVL209:
 2013              	.L161:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2014              		.loc 1 799 34 view .LVU561
 2015 04c6 0123     		movs	r3, #1
 2016 04c8 2A46     		mov	r2, r5
 2017 04ca F7E7     		b	.L129
 2018              	.LVL210:
 2019              	.L187:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2020              		.loc 1 799 34 view .LVU562
 2021 04cc 4A46     		mov	r2, r9
 2022 04ce 06E0     		b	.L132
 2023              	.LVL211:
 2024              	.L134:
 811:lvgl/src/misc/lv_printf.c ****                         }
 2025              		.loc 1 811 29 is_stmt 1 view .LVU563
 2026 04d0 561C     		adds	r6, r2, #1
 2027              	.LVL212:
 811:lvgl/src/misc/lv_printf.c ****                         }
 2028              		.loc 1 811 29 is_stmt 0 view .LVU564
 2029 04d2 3B46     		mov	r3, r7
 2030 04d4 5946     		mov	r1, fp
 2031 04d6 2020     		movs	r0, #32
 2032 04d8 C047     		blx	r8
 2033              	.LVL213:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2034              		.loc 1 810 32 view .LVU565
 2035 04da 2C46     		mov	r4, r5
 811:lvgl/src/misc/lv_printf.c ****                         }
 2036              		.loc 1 811 29 view .LVU566
 2037 04dc 3246     		mov	r2, r6
 2038              	.LVL214:
 2039              	.L132:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2040              		.loc 1 810 35 is_stmt 1 view .LVU567
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2041              		.loc 1 810 32 is_stmt 0 view .LVU568
 2042 04de 651C     		adds	r5, r4, #1
 2043              	.LVL215:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2044              		.loc 1 810 35 view .LVU569
 2045 04e0 A245     		cmp	r10, r4
 2046 04e2 F5D8     		bhi	.L134
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2047              		.loc 1 810 35 view .LVU570
 2048 04e4 9146     		mov	r9, r2
 2049 04e6 DCE7     		b	.L133
 2050              	.LVL216:
 2051              	.L102:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 59


 2052              		.loc 1 810 35 view .LVU571
 2053              	.LBE45:
 2054              	.LBB46:
 819:lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 2055              		.loc 1 819 21 is_stmt 1 view .LVU572
 819:lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 2056              		.loc 1 819 34 is_stmt 0 view .LVU573
 2057 04e8 1C9B     		ldr	r3, [sp, #112]
 2058 04ea 1A1D     		adds	r2, r3, #4
 2059 04ec 1C92     		str	r2, [sp, #112]
 2060 04ee D3F80090 		ldr	r9, [r3]
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2061              		.loc 1 820 21 is_stmt 1 view .LVU574
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2062              		.loc 1 820 38 is_stmt 0 view .LVU575
 2063 04f2 0B9B     		ldr	r3, [sp, #44]
 2064 04f4 FBB9     		cbnz	r3, .L135
 2065 04f6 4FF0FF32 		mov	r2, #-1
 2066              	.L136:
 2067 04fa 4B46     		mov	r3, r9
 2068 04fc 01E0     		b	.L137
 2069              	.LVL217:
 2070              	.L139:
 2071              	.LBB47:
 2072              	.LBB48:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2073              		.loc 1 146 35 is_stmt 1 view .LVU576
 2074 04fe 0133     		adds	r3, r3, #1
 2075              	.LVL218:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2076              		.loc 1 146 31 is_stmt 0 view .LVU577
 2077 0500 0A46     		mov	r2, r1
 2078              	.LVL219:
 2079              	.L137:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2080              		.loc 1 146 21 is_stmt 1 view .LVU578
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2081              		.loc 1 146 18 is_stmt 0 view .LVU579
 2082 0502 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2083              		.loc 1 146 21 view .LVU580
 2084 0504 11B1     		cbz	r1, .L138
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2085              		.loc 1 146 31 view .LVU581
 2086 0506 511E     		subs	r1, r2, #1
 2087              	.LVL220:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2088              		.loc 1 146 21 view .LVU582
 2089 0508 002A     		cmp	r2, #0
 2090 050a F8D1     		bne	.L139
 2091              	.LVL221:
 2092              	.L138:
 147:lvgl/src/misc/lv_printf.c **** }
 2093              		.loc 1 147 5 is_stmt 1 view .LVU583
 147:lvgl/src/misc/lv_printf.c **** }
 2094              		.loc 1 147 29 is_stmt 0 view .LVU584
 2095 050c A3EB0903 		sub	r3, r3, r9
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 60


 2096              	.LVL222:
 147:lvgl/src/misc/lv_printf.c **** }
 2097              		.loc 1 147 29 view .LVU585
 2098              	.LBE48:
 2099              	.LBE47:
 822:lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 2100              		.loc 1 822 21 is_stmt 1 view .LVU586
 822:lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 2101              		.loc 1 822 23 is_stmt 0 view .LVU587
 2102 0510 16F48062 		ands	r2, r6, #1024
 2103 0514 0C92     		str	r2, [sp, #48]
 2104 0516 03D0     		beq	.L140
 823:lvgl/src/misc/lv_printf.c ****                     }
 2105              		.loc 1 823 25 is_stmt 1 view .LVU588
 823:lvgl/src/misc/lv_printf.c ****                     }
 2106              		.loc 1 823 27 is_stmt 0 view .LVU589
 2107 0518 0B9A     		ldr	r2, [sp, #44]
 2108 051a 9342     		cmp	r3, r2
 2109 051c 28BF     		it	cs
 2110 051e 1346     		movcs	r3, r2
 2111              	.LVL223:
 2112              	.L140:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2113              		.loc 1 825 21 is_stmt 1 view .LVU590
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2114              		.loc 1 825 23 is_stmt 0 view .LVU591
 2115 0520 16F00204 		ands	r4, r6, #2
 2116 0524 09D0     		beq	.L188
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2117              		.loc 1 825 23 view .LVU592
 2118 0526 0D94     		str	r4, [sp, #52]
 2119 0528 CDF838A0 		str	r10, [sp, #56]
 2120 052c 0B9E     		ldr	r6, [sp, #44]
 2121              	.LVL224:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2122              		.loc 1 825 23 view .LVU593
 2123 052e 2A46     		mov	r2, r5
 2124 0530 0C9D     		ldr	r5, [sp, #48]
 2125              	.LVL225:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2126              		.loc 1 825 23 view .LVU594
 2127 0532 9A46     		mov	r10, r3
 2128              	.LVL226:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2129              		.loc 1 825 23 view .LVU595
 2130 0534 1FE0     		b	.L144
 2131              	.LVL227:
 2132              	.L135:
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2133              		.loc 1 820 38 view .LVU596
 2134 0536 0B9A     		ldr	r2, [sp, #44]
 2135 0538 DFE7     		b	.L136
 2136              	.LVL228:
 2137              	.L188:
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2138              		.loc 1 820 38 view .LVU597
 2139 053a 2A46     		mov	r2, r5
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 61


 2140 053c 2546     		mov	r5, r4
 2141              	.LVL229:
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2142              		.loc 1 820 38 view .LVU598
 2143 053e 06E0     		b	.L141
 2144              	.LVL230:
 2145              	.L143:
 827:lvgl/src/misc/lv_printf.c ****                         }
 2146              		.loc 1 827 29 is_stmt 1 view .LVU599
 2147 0540 541C     		adds	r4, r2, #1
 2148              	.LVL231:
 827:lvgl/src/misc/lv_printf.c ****                         }
 2149              		.loc 1 827 29 is_stmt 0 view .LVU600
 2150 0542 3B46     		mov	r3, r7
 2151 0544 5946     		mov	r1, fp
 2152 0546 2020     		movs	r0, #32
 2153 0548 C047     		blx	r8
 2154              	.LVL232:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2155              		.loc 1 826 32 view .LVU601
 2156 054a 3346     		mov	r3, r6
 827:lvgl/src/misc/lv_printf.c ****                         }
 2157              		.loc 1 827 29 view .LVU602
 2158 054c 2246     		mov	r2, r4
 2159              	.LVL233:
 2160              	.L141:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2161              		.loc 1 826 35 is_stmt 1 view .LVU603
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2162              		.loc 1 826 32 is_stmt 0 view .LVU604
 2163 054e 5E1C     		adds	r6, r3, #1
 2164              	.LVL234:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2165              		.loc 1 826 35 view .LVU605
 2166 0550 9A45     		cmp	r10, r3
 2167 0552 F5D8     		bhi	.L143
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2168              		.loc 1 826 32 view .LVU606
 2169 0554 2C46     		mov	r4, r5
 2170 0556 3346     		mov	r3, r6
 2171 0558 0D94     		str	r4, [sp, #52]
 2172 055a CDF838A0 		str	r10, [sp, #56]
 2173 055e 0B9E     		ldr	r6, [sp, #44]
 2174              	.LVL235:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2175              		.loc 1 826 32 view .LVU607
 2176 0560 0C9D     		ldr	r5, [sp, #48]
 2177 0562 9A46     		mov	r10, r3
 2178              	.LVL236:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2179              		.loc 1 826 32 view .LVU608
 2180 0564 07E0     		b	.L144
 2181              	.LVL237:
 2182              	.L162:
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2183              		.loc 1 831 80 view .LVU609
 2184 0566 1E46     		mov	r6, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 62


 2185              	.LVL238:
 2186              	.L146:
 832:lvgl/src/misc/lv_printf.c ****                     }
 2187              		.loc 1 832 25 is_stmt 1 view .LVU610
 832:lvgl/src/misc/lv_printf.c ****                     }
 2188              		.loc 1 832 32 is_stmt 0 view .LVU611
 2189 0568 09F10109 		add	r9, r9, #1
 2190              	.LVL239:
 832:lvgl/src/misc/lv_printf.c ****                     }
 2191              		.loc 1 832 25 view .LVU612
 2192 056c 541C     		adds	r4, r2, #1
 2193              	.LVL240:
 832:lvgl/src/misc/lv_printf.c ****                     }
 2194              		.loc 1 832 25 view .LVU613
 2195 056e 3B46     		mov	r3, r7
 2196 0570 5946     		mov	r1, fp
 2197 0572 C047     		blx	r8
 2198              	.LVL241:
 2199 0574 2246     		mov	r2, r4
 2200              	.LVL242:
 2201              	.L144:
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2202              		.loc 1 831 37 is_stmt 1 view .LVU614
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2203              		.loc 1 831 28 is_stmt 0 view .LVU615
 2204 0576 99F80000 		ldrb	r0, [r9]	@ zero_extendqisi2
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2205              		.loc 1 831 37 view .LVU616
 2206 057a 20B1     		cbz	r0, .L145
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2207              		.loc 1 831 37 discriminator 1 view .LVU617
 2208 057c 002D     		cmp	r5, #0
 2209 057e F3D0     		beq	.L146
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2210              		.loc 1 831 80 discriminator 2 view .LVU618
 2211 0580 731E     		subs	r3, r6, #1
 2212              	.LVL243:
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2213              		.loc 1 831 68 discriminator 2 view .LVU619
 2214 0582 002E     		cmp	r6, #0
 2215 0584 EFD1     		bne	.L162
 2216              	.LVL244:
 2217              	.L145:
 835:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2218              		.loc 1 835 23 view .LVU620
 2219 0586 0D9C     		ldr	r4, [sp, #52]
 2220 0588 1546     		mov	r5, r2
 2221 058a 5346     		mov	r3, r10
 2222 058c DDF838A0 		ldr	r10, [sp, #56]
 2223              	.LVL245:
 835:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2224              		.loc 1 835 21 is_stmt 1 view .LVU621
 835:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2225              		.loc 1 835 23 is_stmt 0 view .LVU622
 2226 0590 54B9     		cbnz	r4, .L147
 2227              	.LVL246:
 2228              	.L148:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 63


 840:lvgl/src/misc/lv_printf.c ****                     break;
 2229              		.loc 1 840 21 is_stmt 1 view .LVU623
 840:lvgl/src/misc/lv_printf.c ****                     break;
 2230              		.loc 1 840 27 is_stmt 0 view .LVU624
 2231 0592 0F9B     		ldr	r3, [sp, #60]
 2232 0594 0133     		adds	r3, r3, #1
 2233 0596 0F93     		str	r3, [sp, #60]
 841:lvgl/src/misc/lv_printf.c ****                 }
 2234              		.loc 1 841 21 is_stmt 1 view .LVU625
 2235 0598 3DE5     		b	.L150
 2236              	.LVL247:
 2237              	.L149:
 837:lvgl/src/misc/lv_printf.c ****                         }
 2238              		.loc 1 837 29 view .LVU626
 2239 059a 551C     		adds	r5, r2, #1
 2240              	.LVL248:
 837:lvgl/src/misc/lv_printf.c ****                         }
 2241              		.loc 1 837 29 is_stmt 0 view .LVU627
 2242 059c 3B46     		mov	r3, r7
 2243 059e 5946     		mov	r1, fp
 2244 05a0 2020     		movs	r0, #32
 2245 05a2 C047     		blx	r8
 2246              	.LVL249:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2247              		.loc 1 836 32 view .LVU628
 2248 05a4 2346     		mov	r3, r4
 837:lvgl/src/misc/lv_printf.c ****                         }
 2249              		.loc 1 837 29 view .LVU629
 2250 05a6 2A46     		mov	r2, r5
 2251              	.LVL250:
 2252              	.L147:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2253              		.loc 1 836 35 is_stmt 1 view .LVU630
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2254              		.loc 1 836 32 is_stmt 0 view .LVU631
 2255 05a8 5C1C     		adds	r4, r3, #1
 2256              	.LVL251:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2257              		.loc 1 836 35 view .LVU632
 2258 05aa 9A45     		cmp	r10, r3
 2259 05ac F5D8     		bhi	.L149
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2260              		.loc 1 836 35 view .LVU633
 2261 05ae 1546     		mov	r5, r2
 2262 05b0 EFE7     		b	.L148
 2263              	.LVL252:
 2264              	.L167:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2265              		.loc 1 836 35 view .LVU634
 2266              	.LBE46:
 557:lvgl/src/misc/lv_printf.c ****     }
 2267              		.loc 1 557 13 view .LVU635
 2268 05b2 DFF82080 		ldr	r8, .L191
 2269 05b6 2DE5     		b	.L73
 2270              	.LVL253:
 2271              	.L168:
 853:lvgl/src/misc/lv_printf.c ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 64


 854:lvgl/src/misc/lv_printf.c ****     }
 855:lvgl/src/misc/lv_printf.c **** 
 856:lvgl/src/misc/lv_printf.c ****     // termination
 857:lvgl/src/misc/lv_printf.c ****     out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 2272              		.loc 1 857 5 is_stmt 1 view .LVU636
 2273 05b8 BD42     		cmp	r5, r7
 2274 05ba 08D3     		bcc	.L163
 2275              		.loc 1 857 5 is_stmt 0 discriminator 1 view .LVU637
 2276 05bc 7A1E     		subs	r2, r7, #1
 2277              	.L152:
 2278              		.loc 1 857 5 discriminator 4 view .LVU638
 2279 05be 3B46     		mov	r3, r7
 2280 05c0 5946     		mov	r1, fp
 2281 05c2 0020     		movs	r0, #0
 2282 05c4 C047     		blx	r8
 2283              	.LVL254:
 858:lvgl/src/misc/lv_printf.c **** 
 859:lvgl/src/misc/lv_printf.c ****     // return written chars without terminating \0
 860:lvgl/src/misc/lv_printf.c ****     return (int)idx;
 2284              		.loc 1 860 5 is_stmt 1 discriminator 4 view .LVU639
 861:lvgl/src/misc/lv_printf.c **** }
 2285              		.loc 1 861 1 is_stmt 0 discriminator 4 view .LVU640
 2286 05c6 2846     		mov	r0, r5
 2287 05c8 13B0     		add	sp, sp, #76
 2288              	.LCFI16:
 2289              		.cfi_remember_state
 2290              		.cfi_def_cfa_offset 36
 2291              		@ sp needed
 2292 05ca BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2293              	.LVL255:
 2294              	.L163:
 2295              	.LCFI17:
 2296              		.cfi_restore_state
 857:lvgl/src/misc/lv_printf.c **** 
 2297              		.loc 1 857 5 view .LVU641
 2298 05ce 2A46     		mov	r2, r5
 2299 05d0 F5E7     		b	.L152
 2300              	.L192:
 2301 05d2 00BF     		.align	2
 2302              	.L191:
 2303 05d4 00000000 		.word	_out_null
 2304              		.cfi_endproc
 2305              	.LFE9:
 2307              		.section	.text.lv_snprintf,"ax",%progbits
 2308              		.align	1
 2309              		.global	lv_snprintf
 2310              		.syntax unified
 2311              		.thumb
 2312              		.thumb_func
 2314              	lv_snprintf:
 2315              	.LVL256:
 2316              	.LFB10:
 862:lvgl/src/misc/lv_printf.c **** 
 863:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
 864:lvgl/src/misc/lv_printf.c **** 
 865:lvgl/src/misc/lv_printf.c **** int lv_snprintf(char * buffer, size_t count, const char * format, ...)
 866:lvgl/src/misc/lv_printf.c **** {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 65


 2317              		.loc 1 866 1 is_stmt 1 view -0
 2318              		.cfi_startproc
 2319              		@ args = 4, pretend = 8, frame = 8
 2320              		@ frame_needed = 0, uses_anonymous_args = 1
 2321              		.loc 1 866 1 is_stmt 0 view .LVU643
 2322 0000 0CB4     		push	{r2, r3}
 2323              	.LCFI18:
 2324              		.cfi_def_cfa_offset 8
 2325              		.cfi_offset 2, -8
 2326              		.cfi_offset 3, -4
 2327 0002 10B5     		push	{r4, lr}
 2328              	.LCFI19:
 2329              		.cfi_def_cfa_offset 16
 2330              		.cfi_offset 4, -16
 2331              		.cfi_offset 14, -12
 2332 0004 84B0     		sub	sp, sp, #16
 2333              	.LCFI20:
 2334              		.cfi_def_cfa_offset 32
 2335 0006 0A46     		mov	r2, r1
 2336 0008 06AC     		add	r4, sp, #24
 2337 000a 54F8043B 		ldr	r3, [r4], #4
 867:lvgl/src/misc/lv_printf.c ****     va_list va;
 2338              		.loc 1 867 5 is_stmt 1 view .LVU644
 868:lvgl/src/misc/lv_printf.c ****     va_start(va, format);
 2339              		.loc 1 868 5 view .LVU645
 2340 000e 0394     		str	r4, [sp, #12]
 869:lvgl/src/misc/lv_printf.c ****     const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 2341              		.loc 1 869 5 view .LVU646
 2342              		.loc 1 869 21 is_stmt 0 view .LVU647
 2343 0010 0094     		str	r4, [sp]
 2344 0012 0146     		mov	r1, r0
 2345              	.LVL257:
 2346              		.loc 1 869 21 view .LVU648
 2347 0014 0348     		ldr	r0, .L195
 2348              	.LVL258:
 2349              		.loc 1 869 21 view .LVU649
 2350 0016 FFF7FEFF 		bl	_vsnprintf
 2351              	.LVL259:
 870:lvgl/src/misc/lv_printf.c ****     va_end(va);
 2352              		.loc 1 870 5 is_stmt 1 view .LVU650
 871:lvgl/src/misc/lv_printf.c ****     return ret;
 2353              		.loc 1 871 5 view .LVU651
 872:lvgl/src/misc/lv_printf.c **** }
 2354              		.loc 1 872 1 is_stmt 0 view .LVU652
 2355 001a 04B0     		add	sp, sp, #16
 2356              	.LCFI21:
 2357              		.cfi_def_cfa_offset 16
 2358              		@ sp needed
 2359 001c BDE81040 		pop	{r4, lr}
 2360              	.LCFI22:
 2361              		.cfi_restore 14
 2362              		.cfi_restore 4
 2363              		.cfi_def_cfa_offset 8
 2364 0020 02B0     		add	sp, sp, #8
 2365              	.LCFI23:
 2366              		.cfi_restore 3
 2367              		.cfi_restore 2
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 66


 2368              		.cfi_def_cfa_offset 0
 2369 0022 7047     		bx	lr
 2370              	.L196:
 2371              		.align	2
 2372              	.L195:
 2373 0024 00000000 		.word	_out_buffer
 2374              		.cfi_endproc
 2375              	.LFE10:
 2377              		.section	.text.lv_vsnprintf,"ax",%progbits
 2378              		.align	1
 2379              		.global	lv_vsnprintf
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2384              	lv_vsnprintf:
 2385              	.LVL260:
 2386              	.LFB11:
 873:lvgl/src/misc/lv_printf.c **** 
 874:lvgl/src/misc/lv_printf.c **** int lv_vsnprintf(char * buffer, size_t count, const char * format, va_list va)
 875:lvgl/src/misc/lv_printf.c **** {
 2387              		.loc 1 875 1 is_stmt 1 view -0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391              		.loc 1 875 1 is_stmt 0 view .LVU654
 2392 0000 00B5     		push	{lr}
 2393              	.LCFI24:
 2394              		.cfi_def_cfa_offset 4
 2395              		.cfi_offset 14, -4
 2396 0002 83B0     		sub	sp, sp, #12
 2397              	.LCFI25:
 2398              		.cfi_def_cfa_offset 16
 876:lvgl/src/misc/lv_printf.c ****     return _vsnprintf(_out_buffer, buffer, count, format, va);
 2399              		.loc 1 876 5 is_stmt 1 view .LVU655
 2400              		.loc 1 876 12 is_stmt 0 view .LVU656
 2401 0004 0093     		str	r3, [sp]
 2402 0006 1346     		mov	r3, r2
 2403              	.LVL261:
 2404              		.loc 1 876 12 view .LVU657
 2405 0008 0A46     		mov	r2, r1
 2406              	.LVL262:
 2407              		.loc 1 876 12 view .LVU658
 2408 000a 0146     		mov	r1, r0
 2409              	.LVL263:
 2410              		.loc 1 876 12 view .LVU659
 2411 000c 0248     		ldr	r0, .L199
 2412              	.LVL264:
 2413              		.loc 1 876 12 view .LVU660
 2414 000e FFF7FEFF 		bl	_vsnprintf
 2415              	.LVL265:
 877:lvgl/src/misc/lv_printf.c **** }
 2416              		.loc 1 877 1 view .LVU661
 2417 0012 03B0     		add	sp, sp, #12
 2418              	.LCFI26:
 2419              		.cfi_def_cfa_offset 4
 2420              		@ sp needed
 2421 0014 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 67


 2422              	.L200:
 2423              		.align	2
 2424              	.L199:
 2425 0018 00000000 		.word	_out_buffer
 2426              		.cfi_endproc
 2427              	.LFE11:
 2429              		.text
 2430              	.Letext0:
 2431              		.file 2 "/usr/local/include/arm/_types.h"
 2432              		.file 3 "/Applications/ArmGNUToolchain/12.2.mpacbti-rel1/arm-none-eabi/lib/gcc/arm-none-eabi/12.2.
 2433              		.file 4 "/usr/local/include/sys/_types/_size_t.h"
 2434              		.file 5 "lvgl/src/misc/lv_printf.h"
 2435              		.file 6 "<built-in>"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 lv_printf.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:21     .text._out_buffer:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:26     .text._out_buffer:00000000 _out_buffer
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:48     .text._out_null:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:53     .text._out_null:00000000 _out_null
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:71     .text._atoi:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:76     .text._atoi:00000000 _atoi
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:139    .text._out_rev:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:144    .text._out_rev:00000000 _out_rev
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:276    .text._ntoa_format:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:281    .text._ntoa_format:00000000 _ntoa_format
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:570    .text._ntoa_long:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:575    .text._ntoa_long:00000000 _ntoa_long
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:722    .text._ntoa_long_long:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:727    .text._ntoa_long_long:00000000 _ntoa_long_long
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:898    .text._vsnprintf:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:903    .text._vsnprintf:00000000 _vsnprintf
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1090   .text._vsnprintf:00000090 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1108   .text._vsnprintf:000000d4 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1164   .text._vsnprintf:00000102 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1475   .text._vsnprintf:0000023e $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1891   .text._vsnprintf:0000043c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1896   .text._vsnprintf:00000440 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2303   .text._vsnprintf:000005d4 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2308   .text.lv_snprintf:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2314   .text.lv_snprintf:00000000 lv_snprintf
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2373   .text.lv_snprintf:00000024 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2378   .text.lv_vsnprintf:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2384   .text.lv_vsnprintf:00000000 lv_vsnprintf
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:2425   .text.lv_vsnprintf:00000018 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1184   .text._vsnprintf:00000115 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1184   .text._vsnprintf:00000116 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1508   .text._vsnprintf:0000025f $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccO4WBnm.s:1508   .text._vsnprintf:00000260 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
