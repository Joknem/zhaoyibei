ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_style.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/misc/lv_style.c"
  20              		.section	.text.lv_style_set_prop_helper,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_style_set_prop_helper:
  27              	.LVL0:
  28              	.LFB69:
   1:lvgl/src/misc/lv_style.c **** /**
   2:lvgl/src/misc/lv_style.c ****  * @file lv_style.c
   3:lvgl/src/misc/lv_style.c ****  *
   4:lvgl/src/misc/lv_style.c ****  */
   5:lvgl/src/misc/lv_style.c **** 
   6:lvgl/src/misc/lv_style.c **** /*********************
   7:lvgl/src/misc/lv_style.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_style.c ****  *********************/
   9:lvgl/src/misc/lv_style.c **** #include "lv_style.h"
  10:lvgl/src/misc/lv_style.c **** #include "../misc/lv_gc.h"
  11:lvgl/src/misc/lv_style.c **** #include "../misc/lv_mem.h"
  12:lvgl/src/misc/lv_style.c **** #include "lv_assert.h"
  13:lvgl/src/misc/lv_style.c **** #include "lv_types.h"
  14:lvgl/src/misc/lv_style.c **** 
  15:lvgl/src/misc/lv_style.c **** /*********************
  16:lvgl/src/misc/lv_style.c ****  *      DEFINES
  17:lvgl/src/misc/lv_style.c ****  *********************/
  18:lvgl/src/misc/lv_style.c **** 
  19:lvgl/src/misc/lv_style.c **** /**********************
  20:lvgl/src/misc/lv_style.c ****  *      TYPEDEFS
  21:lvgl/src/misc/lv_style.c ****  **********************/
  22:lvgl/src/misc/lv_style.c **** 
  23:lvgl/src/misc/lv_style.c **** /**********************
  24:lvgl/src/misc/lv_style.c ****  *  STATIC PROTOTYPES
  25:lvgl/src/misc/lv_style.c ****  **********************/
  26:lvgl/src/misc/lv_style.c **** 
  27:lvgl/src/misc/lv_style.c **** static void lv_style_set_prop_internal(lv_style_t * style, lv_style_prop_t prop_and_meta, lv_style_
  28:lvgl/src/misc/lv_style.c ****                                        void (*value_adjustment_helper)(lv_style_prop_t, lv_style_va
  29:lvgl/src/misc/lv_style.c **** static void lv_style_set_prop_helper(lv_style_prop_t prop, lv_style_value_t value, uint16_t * prop_
  30:lvgl/src/misc/lv_style.c ****                                      lv_style_value_t * value_storage);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 2


  31:lvgl/src/misc/lv_style.c **** static void lv_style_set_prop_meta_helper(lv_style_prop_t prop, lv_style_value_t value, uint16_t * 
  32:lvgl/src/misc/lv_style.c ****                                           lv_style_value_t * value_storage);
  33:lvgl/src/misc/lv_style.c **** 
  34:lvgl/src/misc/lv_style.c **** /**********************
  35:lvgl/src/misc/lv_style.c ****  *  GLOBAL VARIABLES
  36:lvgl/src/misc/lv_style.c ****  **********************/
  37:lvgl/src/misc/lv_style.c **** 
  38:lvgl/src/misc/lv_style.c **** const uint8_t _lv_style_builtin_prop_flag_lookup_table[_LV_STYLE_NUM_BUILT_IN_PROPS] = {
  39:lvgl/src/misc/lv_style.c ****     [LV_STYLE_WIDTH] =                    LV_STYLE_PROP_LAYOUT_REFR,
  40:lvgl/src/misc/lv_style.c ****     [LV_STYLE_MIN_WIDTH] =                LV_STYLE_PROP_LAYOUT_REFR,
  41:lvgl/src/misc/lv_style.c ****     [LV_STYLE_MAX_WIDTH] =                LV_STYLE_PROP_LAYOUT_REFR,
  42:lvgl/src/misc/lv_style.c ****     [LV_STYLE_HEIGHT] =                   LV_STYLE_PROP_LAYOUT_REFR,
  43:lvgl/src/misc/lv_style.c ****     [LV_STYLE_MIN_HEIGHT] =               LV_STYLE_PROP_LAYOUT_REFR,
  44:lvgl/src/misc/lv_style.c ****     [LV_STYLE_MAX_HEIGHT] =               LV_STYLE_PROP_LAYOUT_REFR,
  45:lvgl/src/misc/lv_style.c ****     [LV_STYLE_X] =                        LV_STYLE_PROP_LAYOUT_REFR,
  46:lvgl/src/misc/lv_style.c ****     [LV_STYLE_Y] =                        LV_STYLE_PROP_LAYOUT_REFR,
  47:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ALIGN] =                    LV_STYLE_PROP_LAYOUT_REFR,
  48:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSFORM_WIDTH] =           LV_STYLE_PROP_EXT_DRAW,
  49:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSFORM_HEIGHT] =          LV_STYLE_PROP_EXT_DRAW,
  50:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSLATE_X] =               LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_
  51:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSLATE_Y] =               LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT_
  52:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSFORM_ZOOM] =            LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYER_REFR,
  53:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSFORM_ANGLE] =           LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYER_REFR,
  54:lvgl/src/misc/lv_style.c **** 
  55:lvgl/src/misc/lv_style.c ****     [LV_STYLE_PAD_TOP] =                   LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
  56:lvgl/src/misc/lv_style.c ****     [LV_STYLE_PAD_BOTTOM] =                LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
  57:lvgl/src/misc/lv_style.c ****     [LV_STYLE_PAD_LEFT] =                  LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
  58:lvgl/src/misc/lv_style.c ****     [LV_STYLE_PAD_RIGHT] =                 LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
  59:lvgl/src/misc/lv_style.c ****     [LV_STYLE_PAD_ROW] =                   LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
  60:lvgl/src/misc/lv_style.c ****     [LV_STYLE_PAD_COLUMN] =                LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
  61:lvgl/src/misc/lv_style.c **** 
  62:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_COLOR] = 0,
  63:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_OPA] = 0,
  64:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_GRAD_COLOR] = 0,
  65:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_GRAD_DIR] = 0,
  66:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_MAIN_STOP] = 0,
  67:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_GRAD_STOP] = 0,
  68:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_GRAD] = 0,
  69:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_DITHER_MODE] = 0,
  70:lvgl/src/misc/lv_style.c **** 
  71:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_IMG_SRC] =                LV_STYLE_PROP_EXT_DRAW,
  72:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_IMG_OPA] = 0,
  73:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_IMG_RECOLOR] = 0,
  74:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_IMG_RECOLOR_OPA] = 0,
  75:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BG_IMG_TILED] = 0,
  76:lvgl/src/misc/lv_style.c **** 
  77:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BORDER_COLOR] = 0,
  78:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BORDER_OPA] = 0,
  79:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BORDER_WIDTH] =              LV_STYLE_PROP_LAYOUT_REFR,
  80:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BORDER_SIDE] = 0,
  81:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BORDER_POST] = 0,
  82:lvgl/src/misc/lv_style.c **** 
  83:lvgl/src/misc/lv_style.c ****     [LV_STYLE_OUTLINE_WIDTH] =             LV_STYLE_PROP_EXT_DRAW,
  84:lvgl/src/misc/lv_style.c ****     [LV_STYLE_OUTLINE_COLOR] = 0,
  85:lvgl/src/misc/lv_style.c ****     [LV_STYLE_OUTLINE_OPA] =               LV_STYLE_PROP_EXT_DRAW,
  86:lvgl/src/misc/lv_style.c ****     [LV_STYLE_OUTLINE_PAD] =               LV_STYLE_PROP_EXT_DRAW,
  87:lvgl/src/misc/lv_style.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 3


  88:lvgl/src/misc/lv_style.c ****     [LV_STYLE_SHADOW_WIDTH] =              LV_STYLE_PROP_EXT_DRAW,
  89:lvgl/src/misc/lv_style.c ****     [LV_STYLE_SHADOW_OFS_X] =              LV_STYLE_PROP_EXT_DRAW,
  90:lvgl/src/misc/lv_style.c ****     [LV_STYLE_SHADOW_OFS_Y] =              LV_STYLE_PROP_EXT_DRAW,
  91:lvgl/src/misc/lv_style.c ****     [LV_STYLE_SHADOW_SPREAD] =             LV_STYLE_PROP_EXT_DRAW,
  92:lvgl/src/misc/lv_style.c ****     [LV_STYLE_SHADOW_COLOR] = 0,
  93:lvgl/src/misc/lv_style.c ****     [LV_STYLE_SHADOW_OPA] =                LV_STYLE_PROP_EXT_DRAW,
  94:lvgl/src/misc/lv_style.c **** 
  95:lvgl/src/misc/lv_style.c ****     [LV_STYLE_IMG_OPA] = 0,
  96:lvgl/src/misc/lv_style.c ****     [LV_STYLE_IMG_RECOLOR] = 0,
  97:lvgl/src/misc/lv_style.c ****     [LV_STYLE_IMG_RECOLOR_OPA] = 0,
  98:lvgl/src/misc/lv_style.c **** 
  99:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LINE_WIDTH] =                LV_STYLE_PROP_EXT_DRAW,
 100:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LINE_DASH_WIDTH] = 0,
 101:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LINE_DASH_GAP] = 0,
 102:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LINE_ROUNDED] = 0,
 103:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LINE_COLOR] = 0,
 104:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LINE_OPA] = 0,
 105:lvgl/src/misc/lv_style.c **** 
 106:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ARC_WIDTH] =                 LV_STYLE_PROP_EXT_DRAW,
 107:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ARC_ROUNDED] = 0,
 108:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ARC_COLOR] = 0,
 109:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ARC_OPA] = 0,
 110:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ARC_IMG_SRC] = 0,
 111:lvgl/src/misc/lv_style.c **** 
 112:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_COLOR] =                LV_STYLE_PROP_INHERIT,
 113:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_OPA] =                  LV_STYLE_PROP_INHERIT,
 114:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_FONT] =                 LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 115:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_LETTER_SPACE] =         LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 116:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_LINE_SPACE] =           LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 117:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_DECOR] =                LV_STYLE_PROP_INHERIT,
 118:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TEXT_ALIGN] =                LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 119:lvgl/src/misc/lv_style.c **** 
 120:lvgl/src/misc/lv_style.c ****     [LV_STYLE_RADIUS] = 0,
 121:lvgl/src/misc/lv_style.c ****     [LV_STYLE_CLIP_CORNER] = 0,
 122:lvgl/src/misc/lv_style.c ****     [LV_STYLE_OPA] =                       0,
 123:lvgl/src/misc/lv_style.c ****     [LV_STYLE_OPA_LAYERED] =               LV_STYLE_PROP_LAYER_REFR,
 124:lvgl/src/misc/lv_style.c ****     [LV_STYLE_COLOR_FILTER_DSC] =          LV_STYLE_PROP_INHERIT,
 125:lvgl/src/misc/lv_style.c ****     [LV_STYLE_COLOR_FILTER_OPA] =          LV_STYLE_PROP_INHERIT,
 126:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ANIM_TIME] = 0,
 127:lvgl/src/misc/lv_style.c ****     [LV_STYLE_ANIM_SPEED] = 0,
 128:lvgl/src/misc/lv_style.c ****     [LV_STYLE_TRANSITION] = 0,
 129:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BLEND_MODE] =                LV_STYLE_PROP_LAYER_REFR,
 130:lvgl/src/misc/lv_style.c ****     [LV_STYLE_LAYOUT] =                    LV_STYLE_PROP_LAYOUT_REFR,
 131:lvgl/src/misc/lv_style.c ****     [LV_STYLE_BASE_DIR] =                  LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 132:lvgl/src/misc/lv_style.c **** };
 133:lvgl/src/misc/lv_style.c **** 
 134:lvgl/src/misc/lv_style.c **** uint32_t _lv_style_custom_prop_flag_lookup_table_size = 0;
 135:lvgl/src/misc/lv_style.c **** 
 136:lvgl/src/misc/lv_style.c **** /**********************
 137:lvgl/src/misc/lv_style.c ****  *  STATIC VARIABLES
 138:lvgl/src/misc/lv_style.c ****  **********************/
 139:lvgl/src/misc/lv_style.c **** 
 140:lvgl/src/misc/lv_style.c **** static uint16_t last_custom_prop_id = (uint16_t)_LV_STYLE_LAST_BUILT_IN_PROP;
 141:lvgl/src/misc/lv_style.c **** static const lv_style_value_t null_style_value = { .num = 0 };
 142:lvgl/src/misc/lv_style.c **** 
 143:lvgl/src/misc/lv_style.c **** /**********************
 144:lvgl/src/misc/lv_style.c ****  *      MACROS
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 4


 145:lvgl/src/misc/lv_style.c ****  **********************/
 146:lvgl/src/misc/lv_style.c **** 
 147:lvgl/src/misc/lv_style.c **** /**********************
 148:lvgl/src/misc/lv_style.c ****  *   GLOBAL FUNCTIONS
 149:lvgl/src/misc/lv_style.c ****  **********************/
 150:lvgl/src/misc/lv_style.c **** 
 151:lvgl/src/misc/lv_style.c **** void lv_style_init(lv_style_t * style)
 152:lvgl/src/misc/lv_style.c **** {
 153:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
 154:lvgl/src/misc/lv_style.c ****     if(style->sentinel == LV_STYLE_SENTINEL_VALUE && style->prop_cnt > 1) {
 155:lvgl/src/misc/lv_style.c ****         LV_LOG_WARN("Style might be already inited. (Potential memory leak)");
 156:lvgl/src/misc/lv_style.c ****     }
 157:lvgl/src/misc/lv_style.c **** #endif
 158:lvgl/src/misc/lv_style.c **** 
 159:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 160:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
 161:lvgl/src/misc/lv_style.c ****     style->sentinel = LV_STYLE_SENTINEL_VALUE;
 162:lvgl/src/misc/lv_style.c **** #endif
 163:lvgl/src/misc/lv_style.c **** }
 164:lvgl/src/misc/lv_style.c **** 
 165:lvgl/src/misc/lv_style.c **** void lv_style_reset(lv_style_t * style)
 166:lvgl/src/misc/lv_style.c **** {
 167:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 168:lvgl/src/misc/lv_style.c **** 
 169:lvgl/src/misc/lv_style.c ****     if(style->prop1 == LV_STYLE_PROP_ANY) {
 170:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot reset const style");
 171:lvgl/src/misc/lv_style.c ****         return;
 172:lvgl/src/misc/lv_style.c ****     }
 173:lvgl/src/misc/lv_style.c **** 
 174:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt > 1) lv_mem_free(style->v_p.values_and_props);
 175:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 176:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
 177:lvgl/src/misc/lv_style.c ****     style->sentinel = LV_STYLE_SENTINEL_VALUE;
 178:lvgl/src/misc/lv_style.c **** #endif
 179:lvgl/src/misc/lv_style.c **** }
 180:lvgl/src/misc/lv_style.c **** 
 181:lvgl/src/misc/lv_style.c **** lv_style_prop_t lv_style_register_prop(uint8_t flag)
 182:lvgl/src/misc/lv_style.c **** {
 183:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) == NULL) {
 184:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = 0;
 185:lvgl/src/misc/lv_style.c ****         last_custom_prop_id = (uint16_t)_LV_STYLE_LAST_BUILT_IN_PROP;
 186:lvgl/src/misc/lv_style.c ****     }
 187:lvgl/src/misc/lv_style.c **** 
 188:lvgl/src/misc/lv_style.c ****     if(((last_custom_prop_id + 1) & LV_STYLE_PROP_META_MASK) != 0) {
 189:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("No more custom property IDs available");
 190:lvgl/src/misc/lv_style.c ****         return LV_STYLE_PROP_INV;
 191:lvgl/src/misc/lv_style.c ****     }
 192:lvgl/src/misc/lv_style.c **** 
 193:lvgl/src/misc/lv_style.c ****     /*
 194:lvgl/src/misc/lv_style.c ****      * Allocate the lookup table if it's not yet available.
 195:lvgl/src/misc/lv_style.c ****      */
 196:lvgl/src/misc/lv_style.c ****     size_t required_size = (last_custom_prop_id + 1 - _LV_STYLE_LAST_BUILT_IN_PROP);
 197:lvgl/src/misc/lv_style.c ****     if(_lv_style_custom_prop_flag_lookup_table_size < required_size) {
 198:lvgl/src/misc/lv_style.c ****         /* Round required_size up to the nearest 32-byte value */
 199:lvgl/src/misc/lv_style.c ****         required_size = (required_size + 31) & ~31;
 200:lvgl/src/misc/lv_style.c ****         LV_ASSERT_MSG(required_size > 0, "required size has become 0?");
 201:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 5


 202:lvgl/src/misc/lv_style.c ****         uint8_t * new_p = lv_mem_realloc(old_p, required_size * sizeof(uint8_t));
 203:lvgl/src/misc/lv_style.c ****         if(new_p == NULL) {
 204:lvgl/src/misc/lv_style.c ****             LV_LOG_ERROR("Unable to allocate space for custom property lookup table");
 205:lvgl/src/misc/lv_style.c ****             return LV_STYLE_PROP_INV;
 206:lvgl/src/misc/lv_style.c ****         }
 207:lvgl/src/misc/lv_style.c ****         LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) = new_p;
 208:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = required_size;
 209:lvgl/src/misc/lv_style.c ****     }
 210:lvgl/src/misc/lv_style.c ****     last_custom_prop_id++;
 211:lvgl/src/misc/lv_style.c ****     /* This should never happen - we should bail out above */
 212:lvgl/src/misc/lv_style.c ****     LV_ASSERT_NULL(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table));
 213:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 214:lvgl/src/misc/lv_style.c ****     return last_custom_prop_id;
 215:lvgl/src/misc/lv_style.c **** }
 216:lvgl/src/misc/lv_style.c **** 
 217:lvgl/src/misc/lv_style.c **** lv_style_prop_t lv_style_get_num_custom_props(void)
 218:lvgl/src/misc/lv_style.c **** {
 219:lvgl/src/misc/lv_style.c ****     return last_custom_prop_id - _LV_STYLE_LAST_BUILT_IN_PROP;
 220:lvgl/src/misc/lv_style.c **** }
 221:lvgl/src/misc/lv_style.c **** 
 222:lvgl/src/misc/lv_style.c **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop)
 223:lvgl/src/misc/lv_style.c **** {
 224:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 225:lvgl/src/misc/lv_style.c **** 
 226:lvgl/src/misc/lv_style.c ****     if(style->prop1 == LV_STYLE_PROP_ANY) {
 227:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot remove prop from const style");
 228:lvgl/src/misc/lv_style.c ****         return false;
 229:lvgl/src/misc/lv_style.c ****     }
 230:lvgl/src/misc/lv_style.c **** 
 231:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt == 0)  return false;
 232:lvgl/src/misc/lv_style.c **** 
 233:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt == 1) {
 234:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(style->prop1) == prop) {
 235:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 236:lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 237:lvgl/src/misc/lv_style.c ****             return true;
 238:lvgl/src/misc/lv_style.c ****         }
 239:lvgl/src/misc/lv_style.c ****         return false;
 240:lvgl/src/misc/lv_style.c ****     }
 241:lvgl/src/misc/lv_style.c **** 
 242:lvgl/src/misc/lv_style.c ****     uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 243:lvgl/src/misc/lv_style.c ****     uint16_t * old_props = (uint16_t *)tmp;
 244:lvgl/src/misc/lv_style.c ****     uint32_t i;
 245:lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 246:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(old_props[i]) == prop) {
 247:lvgl/src/misc/lv_style.c ****             lv_style_value_t * old_values = (lv_style_value_t *)style->v_p.values_and_props;
 248:lvgl/src/misc/lv_style.c **** 
 249:lvgl/src/misc/lv_style.c ****             if(style->prop_cnt == 2) {
 250:lvgl/src/misc/lv_style.c ****                 style->prop_cnt = 1;
 251:lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 252:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 253:lvgl/src/misc/lv_style.c ****             }
 254:lvgl/src/misc/lv_style.c ****             else {
 255:lvgl/src/misc/lv_style.c ****                 size_t size = (style->prop_cnt - 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t))
 256:lvgl/src/misc/lv_style.c ****                 uint8_t * new_values_and_props = lv_mem_alloc(size);
 257:lvgl/src/misc/lv_style.c ****                 if(new_values_and_props == NULL) return false;
 258:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 6


 259:lvgl/src/misc/lv_style.c ****                 style->prop_cnt--;
 260:lvgl/src/misc/lv_style.c **** 
 261:lvgl/src/misc/lv_style.c ****                 tmp = new_values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 262:lvgl/src/misc/lv_style.c ****                 uint16_t * new_props = (uint16_t *)tmp;
 263:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * new_values = (lv_style_value_t *)new_values_and_props;
 264:lvgl/src/misc/lv_style.c **** 
 265:lvgl/src/misc/lv_style.c ****                 uint32_t j;
 266:lvgl/src/misc/lv_style.c ****                 for(i = j = 0; j <= style->prop_cnt;
 267:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 268:lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 269:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 270:lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 271:lvgl/src/misc/lv_style.c ****                     }
 272:lvgl/src/misc/lv_style.c ****                 }
 273:lvgl/src/misc/lv_style.c ****             }
 274:lvgl/src/misc/lv_style.c **** 
 275:lvgl/src/misc/lv_style.c ****             lv_mem_free(old_values);
 276:lvgl/src/misc/lv_style.c ****             return true;
 277:lvgl/src/misc/lv_style.c ****         }
 278:lvgl/src/misc/lv_style.c ****     }
 279:lvgl/src/misc/lv_style.c **** 
 280:lvgl/src/misc/lv_style.c ****     return false;
 281:lvgl/src/misc/lv_style.c **** }
 282:lvgl/src/misc/lv_style.c **** 
 283:lvgl/src/misc/lv_style.c **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value)
 284:lvgl/src/misc/lv_style.c **** {
 285:lvgl/src/misc/lv_style.c ****     lv_style_set_prop_internal(style, prop, value, lv_style_set_prop_helper);
 286:lvgl/src/misc/lv_style.c **** }
 287:lvgl/src/misc/lv_style.c **** 
 288:lvgl/src/misc/lv_style.c **** void lv_style_set_prop_meta(lv_style_t * style, lv_style_prop_t prop, uint16_t meta)
 289:lvgl/src/misc/lv_style.c **** {
 290:lvgl/src/misc/lv_style.c ****     lv_style_set_prop_internal(style, prop | meta, null_style_value, lv_style_set_prop_meta_helper)
 291:lvgl/src/misc/lv_style.c **** }
 292:lvgl/src/misc/lv_style.c **** 
 293:lvgl/src/misc/lv_style.c **** lv_style_res_t lv_style_get_prop(const lv_style_t * style, lv_style_prop_t prop, lv_style_value_t *
 294:lvgl/src/misc/lv_style.c **** {
 295:lvgl/src/misc/lv_style.c ****     return lv_style_get_prop_inlined(style, prop, value);
 296:lvgl/src/misc/lv_style.c **** }
 297:lvgl/src/misc/lv_style.c **** 
 298:lvgl/src/misc/lv_style.c **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[],
 299:lvgl/src/misc/lv_style.c ****                                   lv_anim_path_cb_t path_cb, uint32_t time, uint32_t delay, void * 
 300:lvgl/src/misc/lv_style.c **** {
 301:lvgl/src/misc/lv_style.c ****     lv_memset_00(tr, sizeof(lv_style_transition_dsc_t));
 302:lvgl/src/misc/lv_style.c ****     tr->props = props;
 303:lvgl/src/misc/lv_style.c ****     tr->path_xcb = path_cb == NULL ? lv_anim_path_linear : path_cb;
 304:lvgl/src/misc/lv_style.c ****     tr->time = time;
 305:lvgl/src/misc/lv_style.c ****     tr->delay = delay;
 306:lvgl/src/misc/lv_style.c **** #if LV_USE_USER_DATA
 307:lvgl/src/misc/lv_style.c ****     tr->user_data = user_data;
 308:lvgl/src/misc/lv_style.c **** #else
 309:lvgl/src/misc/lv_style.c ****     LV_UNUSED(user_data);
 310:lvgl/src/misc/lv_style.c **** #endif
 311:lvgl/src/misc/lv_style.c **** }
 312:lvgl/src/misc/lv_style.c **** 
 313:lvgl/src/misc/lv_style.c **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop)
 314:lvgl/src/misc/lv_style.c **** {
 315:lvgl/src/misc/lv_style.c ****     lv_style_value_t value;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 7


 316:lvgl/src/misc/lv_style.c ****     switch(prop) {
 317:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 318:lvgl/src/misc/lv_style.c ****             value.num = LV_IMG_ZOOM_NONE;
 319:lvgl/src/misc/lv_style.c ****             break;
 320:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_COLOR:
 321:lvgl/src/misc/lv_style.c ****             value.color = lv_color_white();
 322:lvgl/src/misc/lv_style.c ****             break;
 323:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_COLOR:
 324:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_COLOR:
 325:lvgl/src/misc/lv_style.c ****         case LV_STYLE_SHADOW_COLOR:
 326:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OUTLINE_COLOR:
 327:lvgl/src/misc/lv_style.c ****         case LV_STYLE_ARC_COLOR:
 328:lvgl/src/misc/lv_style.c ****         case LV_STYLE_LINE_COLOR:
 329:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_COLOR:
 330:lvgl/src/misc/lv_style.c ****         case LV_STYLE_IMG_RECOLOR:
 331:lvgl/src/misc/lv_style.c ****             value.color = lv_color_black();
 332:lvgl/src/misc/lv_style.c ****             break;
 333:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OPA:
 334:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OPA_LAYERED:
 335:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_OPA:
 336:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_OPA:
 337:lvgl/src/misc/lv_style.c ****         case LV_STYLE_IMG_OPA:
 338:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_IMG_OPA:
 339:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OUTLINE_OPA:
 340:lvgl/src/misc/lv_style.c ****         case LV_STYLE_SHADOW_OPA:
 341:lvgl/src/misc/lv_style.c ****         case LV_STYLE_LINE_OPA:
 342:lvgl/src/misc/lv_style.c ****         case LV_STYLE_ARC_OPA:
 343:lvgl/src/misc/lv_style.c ****             value.num = LV_OPA_COVER;
 344:lvgl/src/misc/lv_style.c ****             break;
 345:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_STOP:
 346:lvgl/src/misc/lv_style.c ****             value.num = 255;
 347:lvgl/src/misc/lv_style.c ****             break;
 348:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_SIDE:
 349:lvgl/src/misc/lv_style.c ****             value.num = LV_BORDER_SIDE_FULL;
 350:lvgl/src/misc/lv_style.c ****             break;
 351:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_FONT:
 352:lvgl/src/misc/lv_style.c ****             value.ptr = LV_FONT_DEFAULT;
 353:lvgl/src/misc/lv_style.c ****             break;
 354:lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_WIDTH:
 355:lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_HEIGHT:
 356:lvgl/src/misc/lv_style.c ****             value.num = LV_COORD_MAX;
 357:lvgl/src/misc/lv_style.c ****             break;
 358:lvgl/src/misc/lv_style.c ****         default:
 359:lvgl/src/misc/lv_style.c ****             value.ptr = NULL;
 360:lvgl/src/misc/lv_style.c ****             value.num = 0;
 361:lvgl/src/misc/lv_style.c ****             break;
 362:lvgl/src/misc/lv_style.c ****     }
 363:lvgl/src/misc/lv_style.c **** 
 364:lvgl/src/misc/lv_style.c ****     return value;
 365:lvgl/src/misc/lv_style.c **** }
 366:lvgl/src/misc/lv_style.c **** 
 367:lvgl/src/misc/lv_style.c **** bool lv_style_is_empty(const lv_style_t * style)
 368:lvgl/src/misc/lv_style.c **** {
 369:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 370:lvgl/src/misc/lv_style.c **** 
 371:lvgl/src/misc/lv_style.c ****     return style->prop_cnt == 0 ? true : false;
 372:lvgl/src/misc/lv_style.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 8


 373:lvgl/src/misc/lv_style.c **** 
 374:lvgl/src/misc/lv_style.c **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop)
 375:lvgl/src/misc/lv_style.c **** {
 376:lvgl/src/misc/lv_style.c ****     uint16_t group = (prop & 0x1FF) >> 4;
 377:lvgl/src/misc/lv_style.c ****     if(group > 7) group = 7;    /*The MSB marks all the custom properties*/
 378:lvgl/src/misc/lv_style.c ****     return (uint8_t)group;
 379:lvgl/src/misc/lv_style.c **** }
 380:lvgl/src/misc/lv_style.c **** 
 381:lvgl/src/misc/lv_style.c **** uint8_t _lv_style_prop_lookup_flags(lv_style_prop_t prop)
 382:lvgl/src/misc/lv_style.c **** {
 383:lvgl/src/misc/lv_style.c ****     extern const uint8_t _lv_style_builtin_prop_flag_lookup_table[];
 384:lvgl/src/misc/lv_style.c ****     extern uint32_t _lv_style_custom_prop_flag_lookup_table_size;
 385:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_ANY) return LV_STYLE_PROP_ALL; /*Any prop can have any flags*/
 386:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_INV) return 0;
 387:lvgl/src/misc/lv_style.c **** 
 388:lvgl/src/misc/lv_style.c ****     if(prop < _LV_STYLE_NUM_BUILT_IN_PROPS)
 389:lvgl/src/misc/lv_style.c ****         return _lv_style_builtin_prop_flag_lookup_table[prop];
 390:lvgl/src/misc/lv_style.c ****     prop -= _LV_STYLE_NUM_BUILT_IN_PROPS;
 391:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) != NULL && prop < _lv_style_custom_prop_
 392:lvgl/src/misc/lv_style.c ****         return LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[prop];
 393:lvgl/src/misc/lv_style.c ****     return 0;
 394:lvgl/src/misc/lv_style.c **** }
 395:lvgl/src/misc/lv_style.c **** 
 396:lvgl/src/misc/lv_style.c **** /**********************
 397:lvgl/src/misc/lv_style.c ****  *   STATIC FUNCTIONS
 398:lvgl/src/misc/lv_style.c ****  **********************/
 399:lvgl/src/misc/lv_style.c **** 
 400:lvgl/src/misc/lv_style.c **** static void lv_style_set_prop_helper(lv_style_prop_t prop, lv_style_value_t value, uint16_t * prop_
 401:lvgl/src/misc/lv_style.c ****                                      lv_style_value_t * value_storage)
 402:lvgl/src/misc/lv_style.c **** {
  29              		.loc 1 402 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 403:lvgl/src/misc/lv_style.c ****     *prop_storage = prop;
  34              		.loc 1 403 5 view .LVU1
  35              		.loc 1 403 19 is_stmt 0 view .LVU2
  36 0000 1080     		strh	r0, [r2]	@ movhi
 404:lvgl/src/misc/lv_style.c ****     *value_storage = value;
  37              		.loc 1 404 5 is_stmt 1 view .LVU3
  38              		.loc 1 404 20 is_stmt 0 view .LVU4
  39 0002 1960     		str	r1, [r3]
 405:lvgl/src/misc/lv_style.c **** }
  40              		.loc 1 405 1 view .LVU5
  41 0004 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE69:
  45              		.section	.text.lv_style_set_prop_meta_helper,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	lv_style_set_prop_meta_helper:
  52              	.LVL1:
  53              	.LFB70:
 406:lvgl/src/misc/lv_style.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 9


 407:lvgl/src/misc/lv_style.c **** static void lv_style_set_prop_meta_helper(lv_style_prop_t prop, lv_style_value_t value, uint16_t * 
 408:lvgl/src/misc/lv_style.c ****                                           lv_style_value_t * value_storage)
 409:lvgl/src/misc/lv_style.c **** {
  54              		.loc 1 409 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 410:lvgl/src/misc/lv_style.c ****     LV_UNUSED(value);
  59              		.loc 1 410 5 view .LVU7
 411:lvgl/src/misc/lv_style.c ****     LV_UNUSED(value_storage);
  60              		.loc 1 411 5 view .LVU8
 412:lvgl/src/misc/lv_style.c ****     *prop_storage = prop; /* meta is OR-ed into the prop ID already */
  61              		.loc 1 412 5 view .LVU9
  62              		.loc 1 412 19 is_stmt 0 view .LVU10
  63 0000 1080     		strh	r0, [r2]	@ movhi
 413:lvgl/src/misc/lv_style.c **** }
  64              		.loc 1 413 1 view .LVU11
  65 0002 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE70:
  69              		.section	.text.lv_style_init,"ax",%progbits
  70              		.align	1
  71              		.global	lv_style_init
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	lv_style_init:
  77              	.LVL2:
  78              	.LFB56:
 152:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  79              		.loc 1 152 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
 152:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  83              		.loc 1 152 1 is_stmt 0 view .LVU13
  84 0000 08B5     		push	{r3, lr}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 3, -8
  88              		.cfi_offset 14, -4
 159:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  89              		.loc 1 159 5 is_stmt 1 view .LVU14
  90 0002 0821     		movs	r1, #8
  91 0004 FFF7FEFF 		bl	lv_memset_00
  92              	.LVL3:
 163:lvgl/src/misc/lv_style.c **** 
  93              		.loc 1 163 1 is_stmt 0 view .LVU15
  94 0008 08BD     		pop	{r3, pc}
  95              		.cfi_endproc
  96              	.LFE56:
  98              		.section	.text.lv_style_reset,"ax",%progbits
  99              		.align	1
 100              		.global	lv_style_reset
 101              		.syntax unified
 102              		.thumb
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 10


 103              		.thumb_func
 105              	lv_style_reset:
 106              	.LVL4:
 107              	.LFB57:
 166:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 108              		.loc 1 166 1 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 167:lvgl/src/misc/lv_style.c **** 
 112              		.loc 1 167 5 view .LVU17
 167:lvgl/src/misc/lv_style.c **** 
 113              		.loc 1 167 5 view .LVU18
 167:lvgl/src/misc/lv_style.c **** 
 114              		.loc 1 167 5 view .LVU19
 169:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot reset const style");
 115              		.loc 1 169 5 view .LVU20
 169:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot reset const style");
 116              		.loc 1 169 13 is_stmt 0 view .LVU21
 117 0000 8288     		ldrh	r2, [r0, #4]
 169:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot reset const style");
 118              		.loc 1 169 7 view .LVU22
 119 0002 4FF6FF73 		movw	r3, #65535
 120 0006 9A42     		cmp	r2, r3
 121 0008 0DD0     		beq	.L9
 166:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 122              		.loc 1 166 1 view .LVU23
 123 000a 10B5     		push	{r4, lr}
 124              	.LCFI1:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 4, -8
 127              		.cfi_offset 14, -4
 128 000c 0446     		mov	r4, r0
 174:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 129              		.loc 1 174 5 is_stmt 1 view .LVU24
 174:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 130              		.loc 1 174 13 is_stmt 0 view .LVU25
 131 000e C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 174:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 132              		.loc 1 174 7 view .LVU26
 133 0010 012B     		cmp	r3, #1
 134 0012 04D8     		bhi	.L12
 135              	.LVL5:
 136              	.L7:
 175:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
 137              		.loc 1 175 5 is_stmt 1 view .LVU27
 138 0014 0821     		movs	r1, #8
 139 0016 2046     		mov	r0, r4
 140 0018 FFF7FEFF 		bl	lv_memset_00
 141              	.LVL6:
 179:lvgl/src/misc/lv_style.c **** 
 142              		.loc 1 179 1 is_stmt 0 view .LVU28
 143 001c 10BD     		pop	{r4, pc}
 144              	.LVL7:
 145              	.L12:
 174:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 146              		.loc 1 174 29 is_stmt 1 discriminator 1 view .LVU29
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 11


 147 001e 0068     		ldr	r0, [r0]
 148              	.LVL8:
 174:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 149              		.loc 1 174 29 is_stmt 0 discriminator 1 view .LVU30
 150 0020 FFF7FEFF 		bl	lv_mem_free
 151              	.LVL9:
 152 0024 F6E7     		b	.L7
 153              	.LVL10:
 154              	.L9:
 155              	.LCFI2:
 156              		.cfi_def_cfa_offset 0
 157              		.cfi_restore 4
 158              		.cfi_restore 14
 174:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 159              		.loc 1 174 29 discriminator 1 view .LVU31
 160 0026 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE57:
 164              		.section	.text.lv_style_register_prop,"ax",%progbits
 165              		.align	1
 166              		.global	lv_style_register_prop
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	lv_style_register_prop:
 172              	.LVL11:
 173              	.LFB58:
 182:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) == NULL) {
 174              		.loc 1 182 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 182:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) == NULL) {
 178              		.loc 1 182 1 is_stmt 0 view .LVU33
 179 0000 38B5     		push	{r3, r4, r5, lr}
 180              	.LCFI3:
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 3, -16
 183              		.cfi_offset 4, -12
 184              		.cfi_offset 5, -8
 185              		.cfi_offset 14, -4
 186 0002 0546     		mov	r5, r0
 183:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = 0;
 187              		.loc 1 183 5 is_stmt 1 view .LVU34
 183:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = 0;
 188              		.loc 1 183 60 is_stmt 0 view .LVU35
 189 0004 194B     		ldr	r3, .L25
 190 0006 1868     		ldr	r0, [r3]
 191              	.LVL12:
 183:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = 0;
 192              		.loc 1 183 7 view .LVU36
 193 0008 80B1     		cbz	r0, .L24
 194              	.L14:
 188:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("No more custom property IDs available");
 195              		.loc 1 188 5 is_stmt 1 view .LVU37
 188:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("No more custom property IDs available");
 196              		.loc 1 188 30 is_stmt 0 view .LVU38
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 12


 197 000a 194B     		ldr	r3, .L25+4
 198 000c 1B88     		ldrh	r3, [r3]
 199 000e 5A1C     		adds	r2, r3, #1
 188:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("No more custom property IDs available");
 200              		.loc 1 188 7 view .LVU39
 201 0010 12F4404F 		tst	r2, #49152
 202 0014 26D1     		bne	.L21
 196:lvgl/src/misc/lv_style.c ****     if(_lv_style_custom_prop_flag_lookup_table_size < required_size) {
 203              		.loc 1 196 5 is_stmt 1 view .LVU40
 196:lvgl/src/misc/lv_style.c ****     if(_lv_style_custom_prop_flag_lookup_table_size < required_size) {
 204              		.loc 1 196 53 is_stmt 0 view .LVU41
 205 0016 A3F16F02 		sub	r2, r3, #111
 197:lvgl/src/misc/lv_style.c ****         /* Round required_size up to the nearest 32-byte value */
 206              		.loc 1 197 5 is_stmt 1 view .LVU42
 197:lvgl/src/misc/lv_style.c ****         /* Round required_size up to the nearest 32-byte value */
 207              		.loc 1 197 53 is_stmt 0 view .LVU43
 208 001a 1649     		ldr	r1, .L25+8
 209 001c 0968     		ldr	r1, [r1]
 197:lvgl/src/misc/lv_style.c ****         /* Round required_size up to the nearest 32-byte value */
 210              		.loc 1 197 7 view .LVU44
 211 001e 9142     		cmp	r1, r2
 212 0020 13D2     		bcs	.L16
 213              	.LBB14:
 199:lvgl/src/misc/lv_style.c ****         LV_ASSERT_MSG(required_size > 0, "required size has become 0?");
 214              		.loc 1 199 9 is_stmt 1 view .LVU45
 199:lvgl/src/misc/lv_style.c ****         LV_ASSERT_MSG(required_size > 0, "required size has become 0?");
 215              		.loc 1 199 40 is_stmt 0 view .LVU46
 216 0022 503B     		subs	r3, r3, #80
 217              	.LVL13:
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 218              		.loc 1 200 9 is_stmt 1 view .LVU47
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 219              		.loc 1 200 9 view .LVU48
 220 0024 33F01F04 		bics	r4, r3, #31
 221              	.LVL14:
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 222              		.loc 1 200 9 is_stmt 0 view .LVU49
 223 0028 07D1     		bne	.L17
 224              	.L18:
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 225              		.loc 1 200 9 is_stmt 1 discriminator 1 view .LVU50
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 226              		.loc 1 200 9 discriminator 1 view .LVU51
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 227              		.loc 1 200 9 discriminator 1 view .LVU52
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 228              		.loc 1 200 9 discriminator 1 view .LVU53
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 229              		.loc 1 200 9 discriminator 1 view .LVU54
 230 002a FEE7     		b	.L18
 231              	.LVL15:
 232              	.L24:
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 233              		.loc 1 200 9 is_stmt 0 discriminator 1 view .LVU55
 234              	.LBE14:
 184:lvgl/src/misc/lv_style.c ****         last_custom_prop_id = (uint16_t)_LV_STYLE_LAST_BUILT_IN_PROP;
 235              		.loc 1 184 9 is_stmt 1 view .LVU56
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 13


 184:lvgl/src/misc/lv_style.c ****         last_custom_prop_id = (uint16_t)_LV_STYLE_LAST_BUILT_IN_PROP;
 236              		.loc 1 184 54 is_stmt 0 view .LVU57
 237 002c 114B     		ldr	r3, .L25+8
 238 002e 0022     		movs	r2, #0
 239 0030 1A60     		str	r2, [r3]
 185:lvgl/src/misc/lv_style.c ****     }
 240              		.loc 1 185 9 is_stmt 1 view .LVU58
 185:lvgl/src/misc/lv_style.c ****     }
 241              		.loc 1 185 29 is_stmt 0 view .LVU59
 242 0032 0F4B     		ldr	r3, .L25+4
 243 0034 7022     		movs	r2, #112
 244 0036 1A80     		strh	r2, [r3]	@ movhi
 245 0038 E7E7     		b	.L14
 246              	.LVL16:
 247              	.L17:
 248              	.LBB15:
 200:lvgl/src/misc/lv_style.c ****         uint8_t * old_p = LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table);
 249              		.loc 1 200 9 is_stmt 1 discriminator 2 view .LVU60
 201:lvgl/src/misc/lv_style.c ****         uint8_t * new_p = lv_mem_realloc(old_p, required_size * sizeof(uint8_t));
 250              		.loc 1 201 9 discriminator 2 view .LVU61
 202:lvgl/src/misc/lv_style.c ****         if(new_p == NULL) {
 251              		.loc 1 202 9 discriminator 2 view .LVU62
 202:lvgl/src/misc/lv_style.c ****         if(new_p == NULL) {
 252              		.loc 1 202 27 is_stmt 0 discriminator 2 view .LVU63
 253 003a 2146     		mov	r1, r4
 254 003c FFF7FEFF 		bl	lv_mem_realloc
 255              	.LVL17:
 203:lvgl/src/misc/lv_style.c ****             LV_LOG_ERROR("Unable to allocate space for custom property lookup table");
 256              		.loc 1 203 9 is_stmt 1 discriminator 2 view .LVU64
 203:lvgl/src/misc/lv_style.c ****             LV_LOG_ERROR("Unable to allocate space for custom property lookup table");
 257              		.loc 1 203 11 is_stmt 0 discriminator 2 view .LVU65
 258 0040 90B1     		cbz	r0, .L22
 207:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = required_size;
 259              		.loc 1 207 9 is_stmt 1 view .LVU66
 207:lvgl/src/misc/lv_style.c ****         _lv_style_custom_prop_flag_lookup_table_size = required_size;
 260              		.loc 1 207 61 is_stmt 0 view .LVU67
 261 0042 0A4B     		ldr	r3, .L25
 262 0044 1860     		str	r0, [r3]
 208:lvgl/src/misc/lv_style.c ****     }
 263              		.loc 1 208 9 is_stmt 1 view .LVU68
 208:lvgl/src/misc/lv_style.c ****     }
 264              		.loc 1 208 54 is_stmt 0 view .LVU69
 265 0046 0B4B     		ldr	r3, .L25+8
 266 0048 1C60     		str	r4, [r3]
 267              	.LVL18:
 268              	.L16:
 208:lvgl/src/misc/lv_style.c ****     }
 269              		.loc 1 208 54 view .LVU70
 270              	.LBE15:
 210:lvgl/src/misc/lv_style.c ****     /* This should never happen - we should bail out above */
 271              		.loc 1 210 5 is_stmt 1 view .LVU71
 210:lvgl/src/misc/lv_style.c ****     /* This should never happen - we should bail out above */
 272              		.loc 1 210 24 is_stmt 0 view .LVU72
 273 004a 094A     		ldr	r2, .L25+4
 274 004c 1388     		ldrh	r3, [r2]
 275 004e 0133     		adds	r3, r3, #1
 276 0050 98B2     		uxth	r0, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 14


 277 0052 1080     		strh	r0, [r2]	@ movhi
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 278              		.loc 1 212 5 is_stmt 1 view .LVU73
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 279              		.loc 1 212 5 view .LVU74
 280 0054 054B     		ldr	r3, .L25
 281 0056 1B68     		ldr	r3, [r3]
 282 0058 1BB1     		cbz	r3, .L20
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 283              		.loc 1 212 5 discriminator 2 view .LVU75
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 284              		.loc 1 212 72 discriminator 2 view .LVU76
 213:lvgl/src/misc/lv_style.c ****     return last_custom_prop_id;
 285              		.loc 1 213 5 discriminator 2 view .LVU77
 213:lvgl/src/misc/lv_style.c ****     return last_custom_prop_id;
 286              		.loc 1 213 56 is_stmt 0 discriminator 2 view .LVU78
 287 005a A0F17102 		sub	r2, r0, #113
 213:lvgl/src/misc/lv_style.c ****     return last_custom_prop_id;
 288              		.loc 1 213 109 discriminator 2 view .LVU79
 289 005e 9D54     		strb	r5, [r3, r2]
 214:lvgl/src/misc/lv_style.c **** }
 290              		.loc 1 214 5 is_stmt 1 discriminator 2 view .LVU80
 214:lvgl/src/misc/lv_style.c **** }
 291              		.loc 1 214 12 is_stmt 0 discriminator 2 view .LVU81
 292 0060 01E0     		b	.L15
 293              	.L20:
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 294              		.loc 1 212 5 is_stmt 1 discriminator 2 view .LVU82
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 295              		.loc 1 212 5 discriminator 2 view .LVU83
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 296              		.loc 1 212 5 discriminator 2 view .LVU84
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 297              		.loc 1 212 5 discriminator 2 view .LVU85
 212:lvgl/src/misc/lv_style.c ****     LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[last_custom_prop_id - _LV_STYLE_NUM_BUILT_I
 298              		.loc 1 212 5 discriminator 2 view .LVU86
 299 0062 FEE7     		b	.L20
 300              	.L21:
 190:lvgl/src/misc/lv_style.c ****     }
 301              		.loc 1 190 16 is_stmt 0 view .LVU87
 302 0064 0020     		movs	r0, #0
 303              	.L15:
 215:lvgl/src/misc/lv_style.c **** 
 304              		.loc 1 215 1 view .LVU88
 305 0066 38BD     		pop	{r3, r4, r5, pc}
 306              	.LVL19:
 307              	.L22:
 308              	.LBB16:
 205:lvgl/src/misc/lv_style.c ****         }
 309              		.loc 1 205 20 view .LVU89
 310 0068 0020     		movs	r0, #0
 311              	.LVL20:
 205:lvgl/src/misc/lv_style.c ****         }
 312              		.loc 1 205 20 view .LVU90
 313 006a FCE7     		b	.L15
 314              	.L26:
 315              		.align	2
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 15


 316              	.L25:
 317 006c 00000000 		.word	_lv_style_custom_prop_flag_lookup_table
 318 0070 00000000 		.word	last_custom_prop_id
 319 0074 00000000 		.word	_lv_style_custom_prop_flag_lookup_table_size
 320              	.LBE16:
 321              		.cfi_endproc
 322              	.LFE58:
 324              		.section	.text.lv_style_get_num_custom_props,"ax",%progbits
 325              		.align	1
 326              		.global	lv_style_get_num_custom_props
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	lv_style_get_num_custom_props:
 332              	.LFB59:
 218:lvgl/src/misc/lv_style.c ****     return last_custom_prop_id - _LV_STYLE_LAST_BUILT_IN_PROP;
 333              		.loc 1 218 1 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
 337              		@ link register save eliminated.
 219:lvgl/src/misc/lv_style.c **** }
 338              		.loc 1 219 5 view .LVU92
 219:lvgl/src/misc/lv_style.c **** }
 339              		.loc 1 219 32 is_stmt 0 view .LVU93
 340 0000 024B     		ldr	r3, .L28
 341 0002 1888     		ldrh	r0, [r3]
 342 0004 7038     		subs	r0, r0, #112
 220:lvgl/src/misc/lv_style.c **** 
 343              		.loc 1 220 1 view .LVU94
 344 0006 80B2     		uxth	r0, r0
 345 0008 7047     		bx	lr
 346              	.L29:
 347 000a 00BF     		.align	2
 348              	.L28:
 349 000c 00000000 		.word	last_custom_prop_id
 350              		.cfi_endproc
 351              	.LFE59:
 353              		.section	.text.lv_style_remove_prop,"ax",%progbits
 354              		.align	1
 355              		.global	lv_style_remove_prop
 356              		.syntax unified
 357              		.thumb
 358              		.thumb_func
 360              	lv_style_remove_prop:
 361              	.LVL21:
 362              	.LFB60:
 223:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 363              		.loc 1 223 1 is_stmt 1 view -0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 223:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 367              		.loc 1 223 1 is_stmt 0 view .LVU96
 368 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 369              	.LCFI4:
 370              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 16


 371              		.cfi_offset 3, -24
 372              		.cfi_offset 4, -20
 373              		.cfi_offset 5, -16
 374              		.cfi_offset 6, -12
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 224:lvgl/src/misc/lv_style.c **** 
 377              		.loc 1 224 5 is_stmt 1 view .LVU97
 224:lvgl/src/misc/lv_style.c **** 
 378              		.loc 1 224 5 view .LVU98
 224:lvgl/src/misc/lv_style.c **** 
 379              		.loc 1 224 5 view .LVU99
 226:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot remove prop from const style");
 380              		.loc 1 226 5 view .LVU100
 226:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot remove prop from const style");
 381              		.loc 1 226 13 is_stmt 0 view .LVU101
 382 0002 8388     		ldrh	r3, [r0, #4]
 226:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot remove prop from const style");
 383              		.loc 1 226 7 view .LVU102
 384 0004 4FF6FF72 		movw	r2, #65535
 385 0008 9342     		cmp	r3, r2
 386 000a 5BD0     		beq	.L44
 387 000c 0546     		mov	r5, r0
 388 000e 0C46     		mov	r4, r1
 231:lvgl/src/misc/lv_style.c **** 
 389              		.loc 1 231 5 is_stmt 1 view .LVU103
 231:lvgl/src/misc/lv_style.c **** 
 390              		.loc 1 231 13 is_stmt 0 view .LVU104
 391 0010 C179     		ldrb	r1, [r0, #7]	@ zero_extendqisi2
 392              	.LVL22:
 231:lvgl/src/misc/lv_style.c **** 
 393              		.loc 1 231 7 view .LVU105
 394 0012 0029     		cmp	r1, #0
 395 0014 58D0     		beq	.L45
 233:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(style->prop1) == prop) {
 396              		.loc 1 233 5 is_stmt 1 view .LVU106
 233:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(style->prop1) == prop) {
 397              		.loc 1 233 7 is_stmt 0 view .LVU107
 398 0016 0129     		cmp	r1, #1
 399 0018 0DD0     		beq	.L49
 242:lvgl/src/misc/lv_style.c ****     uint16_t * old_props = (uint16_t *)tmp;
 400              		.loc 1 242 5 is_stmt 1 view .LVU108
 242:lvgl/src/misc/lv_style.c ****     uint16_t * old_props = (uint16_t *)tmp;
 401              		.loc 1 242 31 is_stmt 0 view .LVU109
 402 001a 0768     		ldr	r7, [r0]
 242:lvgl/src/misc/lv_style.c ****     uint16_t * old_props = (uint16_t *)tmp;
 403              		.loc 1 242 15 view .LVU110
 404 001c 07EB8106 		add	r6, r7, r1, lsl #2
 405              	.LVL23:
 243:lvgl/src/misc/lv_style.c ****     uint32_t i;
 406              		.loc 1 243 5 is_stmt 1 view .LVU111
 244:lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 407              		.loc 1 244 5 view .LVU112
 245:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(old_props[i]) == prop) {
 408              		.loc 1 245 5 view .LVU113
 245:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(old_props[i]) == prop) {
 409              		.loc 1 245 11 is_stmt 0 view .LVU114
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 17


 410 0020 0023     		movs	r3, #0
 411              	.LVL24:
 412              	.L33:
 245:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(old_props[i]) == prop) {
 413              		.loc 1 245 18 is_stmt 1 discriminator 1 view .LVU115
 414 0022 9942     		cmp	r1, r3
 415 0024 4CD9     		bls	.L50
 246:lvgl/src/misc/lv_style.c ****             lv_style_value_t * old_values = (lv_style_value_t *)style->v_p.values_and_props;
 416              		.loc 1 246 9 view .LVU116
 246:lvgl/src/misc/lv_style.c ****             lv_style_value_t * old_values = (lv_style_value_t *)style->v_p.values_and_props;
 417              		.loc 1 246 12 is_stmt 0 view .LVU117
 418 0026 36F81320 		ldrh	r2, [r6, r3, lsl #1]
 246:lvgl/src/misc/lv_style.c ****             lv_style_value_t * old_values = (lv_style_value_t *)style->v_p.values_and_props;
 419              		.loc 1 246 11 view .LVU118
 420 002a C2F30D02 		ubfx	r2, r2, #0, #14
 421 002e A242     		cmp	r2, r4
 422 0030 0CD0     		beq	.L51
 245:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(old_props[i]) == prop) {
 423              		.loc 1 245 38 is_stmt 1 discriminator 2 view .LVU119
 424 0032 0133     		adds	r3, r3, #1
 425              	.LVL25:
 245:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(old_props[i]) == prop) {
 426              		.loc 1 245 38 is_stmt 0 discriminator 2 view .LVU120
 427 0034 F5E7     		b	.L33
 428              	.LVL26:
 429              	.L49:
 234:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 430              		.loc 1 234 9 is_stmt 1 view .LVU121
 234:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 431              		.loc 1 234 11 is_stmt 0 view .LVU122
 432 0036 C3F30D03 		ubfx	r3, r3, #0, #14
 433 003a A342     		cmp	r3, r4
 434 003c 01D0     		beq	.L52
 239:lvgl/src/misc/lv_style.c ****     }
 435              		.loc 1 239 16 view .LVU123
 436 003e 0020     		movs	r0, #0
 437              	.LVL27:
 239:lvgl/src/misc/lv_style.c ****     }
 438              		.loc 1 239 16 view .LVU124
 439 0040 43E0     		b	.L31
 440              	.LVL28:
 441              	.L52:
 235:lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 442              		.loc 1 235 13 is_stmt 1 view .LVU125
 235:lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 443              		.loc 1 235 26 is_stmt 0 view .LVU126
 444 0042 0023     		movs	r3, #0
 445 0044 8380     		strh	r3, [r0, #4]	@ movhi
 236:lvgl/src/misc/lv_style.c ****             return true;
 446              		.loc 1 236 13 is_stmt 1 view .LVU127
 236:lvgl/src/misc/lv_style.c ****             return true;
 447              		.loc 1 236 29 is_stmt 0 view .LVU128
 448 0046 C371     		strb	r3, [r0, #7]
 237:lvgl/src/misc/lv_style.c ****         }
 449              		.loc 1 237 13 is_stmt 1 view .LVU129
 237:lvgl/src/misc/lv_style.c ****         }
 450              		.loc 1 237 20 is_stmt 0 view .LVU130
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 18


 451 0048 0120     		movs	r0, #1
 452              	.LVL29:
 237:lvgl/src/misc/lv_style.c ****         }
 453              		.loc 1 237 20 view .LVU131
 454 004a 3EE0     		b	.L31
 455              	.LVL30:
 456              	.L51:
 457              	.LBB17:
 247:lvgl/src/misc/lv_style.c **** 
 458              		.loc 1 247 13 is_stmt 1 view .LVU132
 249:lvgl/src/misc/lv_style.c ****                 style->prop_cnt = 1;
 459              		.loc 1 249 13 view .LVU133
 249:lvgl/src/misc/lv_style.c ****                 style->prop_cnt = 1;
 460              		.loc 1 249 15 is_stmt 0 view .LVU134
 461 004c 0229     		cmp	r1, #2
 462 004e 10D0     		beq	.L53
 463              	.LBB18:
 255:lvgl/src/misc/lv_style.c ****                 uint8_t * new_values_and_props = lv_mem_alloc(size);
 464              		.loc 1 255 17 is_stmt 1 view .LVU135
 255:lvgl/src/misc/lv_style.c ****                 uint8_t * new_values_and_props = lv_mem_alloc(size);
 465              		.loc 1 255 48 is_stmt 0 view .LVU136
 466 0050 0139     		subs	r1, r1, #1
 255:lvgl/src/misc/lv_style.c ****                 uint8_t * new_values_and_props = lv_mem_alloc(size);
 467              		.loc 1 255 24 view .LVU137
 468 0052 01EB4101 		add	r1, r1, r1, lsl #1
 469              	.LVL31:
 256:lvgl/src/misc/lv_style.c ****                 if(new_values_and_props == NULL) return false;
 470              		.loc 1 256 17 is_stmt 1 view .LVU138
 256:lvgl/src/misc/lv_style.c ****                 if(new_values_and_props == NULL) return false;
 471              		.loc 1 256 50 is_stmt 0 view .LVU139
 472 0056 4800     		lsls	r0, r1, #1
 473              	.LVL32:
 256:lvgl/src/misc/lv_style.c ****                 if(new_values_and_props == NULL) return false;
 474              		.loc 1 256 50 view .LVU140
 475 0058 FFF7FEFF 		bl	lv_mem_alloc
 476              	.LVL33:
 257:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 477              		.loc 1 257 17 is_stmt 1 view .LVU141
 257:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 478              		.loc 1 257 19 is_stmt 0 view .LVU142
 479 005c 8446     		mov	ip, r0
 480 005e A8B3     		cbz	r0, .L47
 258:lvgl/src/misc/lv_style.c ****                 style->prop_cnt--;
 481              		.loc 1 258 17 is_stmt 1 view .LVU143
 258:lvgl/src/misc/lv_style.c ****                 style->prop_cnt--;
 482              		.loc 1 258 45 is_stmt 0 view .LVU144
 483 0060 2860     		str	r0, [r5]
 259:lvgl/src/misc/lv_style.c **** 
 484              		.loc 1 259 17 is_stmt 1 view .LVU145
 259:lvgl/src/misc/lv_style.c **** 
 485              		.loc 1 259 22 is_stmt 0 view .LVU146
 486 0062 E879     		ldrb	r0, [r5, #7]	@ zero_extendqisi2
 487              	.LVL34:
 259:lvgl/src/misc/lv_style.c **** 
 488              		.loc 1 259 32 view .LVU147
 489 0064 0138     		subs	r0, r0, #1
 490 0066 C0B2     		uxtb	r0, r0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 19


 491 0068 E871     		strb	r0, [r5, #7]
 261:lvgl/src/misc/lv_style.c ****                 uint16_t * new_props = (uint16_t *)tmp;
 492              		.loc 1 261 17 is_stmt 1 view .LVU148
 261:lvgl/src/misc/lv_style.c ****                 uint16_t * new_props = (uint16_t *)tmp;
 493              		.loc 1 261 62 is_stmt 0 view .LVU149
 494 006a 8000     		lsls	r0, r0, #2
 495              	.LVL35:
 262:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * new_values = (lv_style_value_t *)new_values_and_props;
 496              		.loc 1 262 17 is_stmt 1 view .LVU150
 263:lvgl/src/misc/lv_style.c **** 
 497              		.loc 1 263 17 view .LVU151
 265:lvgl/src/misc/lv_style.c ****                 for(i = j = 0; j <= style->prop_cnt;
 498              		.loc 1 265 17 view .LVU152
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 499              		.loc 1 266 17 view .LVU153
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 500              		.loc 1 266 27 is_stmt 0 view .LVU154
 501 006c 0023     		movs	r3, #0
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 502              		.loc 1 266 23 view .LVU155
 503 006e 1A46     		mov	r2, r3
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 504              		.loc 1 266 17 view .LVU156
 505 0070 13E0     		b	.L40
 506              	.LVL36:
 507              	.L53:
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 508              		.loc 1 266 17 view .LVU157
 509              	.LBE18:
 250:lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 510              		.loc 1 250 17 is_stmt 1 view .LVU158
 250:lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 511              		.loc 1 250 33 is_stmt 0 view .LVU159
 512 0072 0122     		movs	r2, #1
 513 0074 EA71     		strb	r2, [r5, #7]
 251:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 514              		.loc 1 251 17 is_stmt 1 view .LVU160
 251:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 515              		.loc 1 251 30 is_stmt 0 view .LVU161
 516 0076 4BB9     		cbnz	r3, .L36
 251:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 517              		.loc 1 251 30 discriminator 1 view .LVU162
 518 0078 7288     		ldrh	r2, [r6, #2]
 519              	.L37:
 251:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 520              		.loc 1 251 30 discriminator 4 view .LVU163
 521 007a AA80     		strh	r2, [r5, #4]	@ movhi
 252:lvgl/src/misc/lv_style.c ****             }
 522              		.loc 1 252 17 is_stmt 1 discriminator 4 view .LVU164
 252:lvgl/src/misc/lv_style.c ****             }
 523              		.loc 1 252 60 is_stmt 0 discriminator 4 view .LVU165
 524 007c 4BB9     		cbnz	r3, .L38
 252:lvgl/src/misc/lv_style.c ****             }
 525              		.loc 1 252 35 discriminator 1 view .LVU166
 526 007e 7B68     		ldr	r3, [r7, #4]
 527              	.LVL37:
 252:lvgl/src/misc/lv_style.c ****             }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 20


 528              		.loc 1 252 35 discriminator 1 view .LVU167
 529 0080 2B60     		str	r3, [r5]
 530              	.LVL38:
 531              	.L39:
 275:lvgl/src/misc/lv_style.c ****             return true;
 532              		.loc 1 275 13 is_stmt 1 view .LVU168
 533 0082 3846     		mov	r0, r7
 534 0084 FFF7FEFF 		bl	lv_mem_free
 535              	.LVL39:
 276:lvgl/src/misc/lv_style.c ****         }
 536              		.loc 1 276 13 view .LVU169
 276:lvgl/src/misc/lv_style.c ****         }
 537              		.loc 1 276 20 is_stmt 0 view .LVU170
 538 0088 0120     		movs	r0, #1
 539 008a 1EE0     		b	.L31
 540              	.LVL40:
 541              	.L36:
 251:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 542              		.loc 1 251 30 discriminator 2 view .LVU171
 543 008c 37F82120 		ldrh	r2, [r7, r1, lsl #2]
 544 0090 F3E7     		b	.L37
 545              	.L38:
 252:lvgl/src/misc/lv_style.c ****             }
 546              		.loc 1 252 35 discriminator 2 view .LVU172
 547 0092 3B68     		ldr	r3, [r7]
 548              	.LVL41:
 252:lvgl/src/misc/lv_style.c ****             }
 549              		.loc 1 252 35 discriminator 2 view .LVU173
 550 0094 2B60     		str	r3, [r5]
 551 0096 F4E7     		b	.L39
 552              	.LVL42:
 553              	.L41:
 554              	.LBB19:
 267:lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 555              		.loc 1 267 22 is_stmt 1 view .LVU174
 556 0098 0133     		adds	r3, r3, #1
 557              	.LVL43:
 558              	.L40:
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 559              		.loc 1 266 34 discriminator 1 view .LVU175
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 560              		.loc 1 266 42 is_stmt 0 discriminator 1 view .LVU176
 561 009a E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 266:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 562              		.loc 1 266 34 discriminator 1 view .LVU177
 563 009c 9942     		cmp	r1, r3
 564 009e F0D3     		bcc	.L39
 268:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 565              		.loc 1 268 21 is_stmt 1 view .LVU178
 268:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 566              		.loc 1 268 33 is_stmt 0 view .LVU179
 567 00a0 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 268:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 568              		.loc 1 268 23 view .LVU180
 569 00a4 A142     		cmp	r1, r4
 570 00a6 F7D0     		beq	.L41
 269:lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 21


 571              		.loc 1 269 25 is_stmt 1 view .LVU181
 269:lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 572              		.loc 1 269 39 is_stmt 0 view .LVU182
 573 00a8 57F82310 		ldr	r1, [r7, r3, lsl #2]
 574 00ac 4CF82210 		str	r1, [ip, r2, lsl #2]
 270:lvgl/src/misc/lv_style.c ****                     }
 575              		.loc 1 270 25 is_stmt 1 view .LVU183
 576              	.LVL44:
 270:lvgl/src/misc/lv_style.c ****                     }
 577              		.loc 1 270 34 is_stmt 0 view .LVU184
 578 00b0 00EB4201 		add	r1, r0, r2, lsl #1
 270:lvgl/src/misc/lv_style.c ****                     }
 579              		.loc 1 270 51 view .LVU185
 580 00b4 36F813E0 		ldrh	lr, [r6, r3, lsl #1]
 270:lvgl/src/misc/lv_style.c ****                     }
 581              		.loc 1 270 40 view .LVU186
 582 00b8 2CF801E0 		strh	lr, [ip, r1]	@ movhi
 270:lvgl/src/misc/lv_style.c ****                     }
 583              		.loc 1 270 36 view .LVU187
 584 00bc 0132     		adds	r2, r2, #1
 585              	.LVL45:
 270:lvgl/src/misc/lv_style.c ****                     }
 586              		.loc 1 270 36 view .LVU188
 587 00be EBE7     		b	.L41
 588              	.LVL46:
 589              	.L50:
 270:lvgl/src/misc/lv_style.c ****                     }
 590              		.loc 1 270 36 view .LVU189
 591              	.LBE19:
 592              	.LBE17:
 280:lvgl/src/misc/lv_style.c **** }
 593              		.loc 1 280 12 view .LVU190
 594 00c0 0020     		movs	r0, #0
 595              	.LVL47:
 280:lvgl/src/misc/lv_style.c **** }
 596              		.loc 1 280 12 view .LVU191
 597 00c2 02E0     		b	.L31
 598              	.LVL48:
 599              	.L44:
 228:lvgl/src/misc/lv_style.c ****     }
 600              		.loc 1 228 16 view .LVU192
 601 00c4 0020     		movs	r0, #0
 602              	.LVL49:
 228:lvgl/src/misc/lv_style.c ****     }
 603              		.loc 1 228 16 view .LVU193
 604 00c6 00E0     		b	.L31
 605              	.LVL50:
 606              	.L45:
 231:lvgl/src/misc/lv_style.c **** 
 607              		.loc 1 231 38 view .LVU194
 608 00c8 0020     		movs	r0, #0
 609              	.LVL51:
 610              	.L31:
 281:lvgl/src/misc/lv_style.c **** 
 611              		.loc 1 281 1 view .LVU195
 612 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 613              	.LVL52:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 22


 614              	.L47:
 615              	.LBB21:
 616              	.LBB20:
 257:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 617              		.loc 1 257 57 view .LVU196
 618 00cc 0020     		movs	r0, #0
 619              	.LVL53:
 257:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 620              		.loc 1 257 57 view .LVU197
 621 00ce FCE7     		b	.L31
 622              	.LBE20:
 623              	.LBE21:
 624              		.cfi_endproc
 625              	.LFE60:
 627              		.section	.text.lv_style_transition_dsc_init,"ax",%progbits
 628              		.align	1
 629              		.global	lv_style_transition_dsc_init
 630              		.syntax unified
 631              		.thumb
 632              		.thumb_func
 634              	lv_style_transition_dsc_init:
 635              	.LVL54:
 636              	.LFB64:
 300:lvgl/src/misc/lv_style.c ****     lv_memset_00(tr, sizeof(lv_style_transition_dsc_t));
 637              		.loc 1 300 1 is_stmt 1 view -0
 638              		.cfi_startproc
 639              		@ args = 8, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 300:lvgl/src/misc/lv_style.c ****     lv_memset_00(tr, sizeof(lv_style_transition_dsc_t));
 641              		.loc 1 300 1 is_stmt 0 view .LVU199
 642 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 643              	.LCFI5:
 644              		.cfi_def_cfa_offset 24
 645              		.cfi_offset 3, -24
 646              		.cfi_offset 4, -20
 647              		.cfi_offset 5, -16
 648              		.cfi_offset 6, -12
 649              		.cfi_offset 7, -8
 650              		.cfi_offset 14, -4
 651 0002 0446     		mov	r4, r0
 652 0004 0F46     		mov	r7, r1
 653 0006 1546     		mov	r5, r2
 654 0008 1E46     		mov	r6, r3
 301:lvgl/src/misc/lv_style.c ****     tr->props = props;
 655              		.loc 1 301 5 is_stmt 1 view .LVU200
 656 000a 1421     		movs	r1, #20
 657              	.LVL55:
 301:lvgl/src/misc/lv_style.c ****     tr->props = props;
 658              		.loc 1 301 5 is_stmt 0 view .LVU201
 659 000c FFF7FEFF 		bl	lv_memset_00
 660              	.LVL56:
 302:lvgl/src/misc/lv_style.c ****     tr->path_xcb = path_cb == NULL ? lv_anim_path_linear : path_cb;
 661              		.loc 1 302 5 is_stmt 1 view .LVU202
 302:lvgl/src/misc/lv_style.c ****     tr->path_xcb = path_cb == NULL ? lv_anim_path_linear : path_cb;
 662              		.loc 1 302 15 is_stmt 0 view .LVU203
 663 0010 2760     		str	r7, [r4]
 303:lvgl/src/misc/lv_style.c ****     tr->time = time;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 23


 664              		.loc 1 303 5 is_stmt 1 view .LVU204
 303:lvgl/src/misc/lv_style.c ****     tr->time = time;
 665              		.loc 1 303 58 is_stmt 0 view .LVU205
 666 0012 35B1     		cbz	r5, .L58
 667              	.LVL57:
 668              	.L55:
 303:lvgl/src/misc/lv_style.c ****     tr->time = time;
 669              		.loc 1 303 18 discriminator 4 view .LVU206
 670 0014 A560     		str	r5, [r4, #8]
 304:lvgl/src/misc/lv_style.c ****     tr->delay = delay;
 671              		.loc 1 304 5 is_stmt 1 discriminator 4 view .LVU207
 304:lvgl/src/misc/lv_style.c ****     tr->delay = delay;
 672              		.loc 1 304 14 is_stmt 0 discriminator 4 view .LVU208
 673 0016 E660     		str	r6, [r4, #12]
 305:lvgl/src/misc/lv_style.c **** #if LV_USE_USER_DATA
 674              		.loc 1 305 5 is_stmt 1 discriminator 4 view .LVU209
 305:lvgl/src/misc/lv_style.c **** #if LV_USE_USER_DATA
 675              		.loc 1 305 15 is_stmt 0 discriminator 4 view .LVU210
 676 0018 069B     		ldr	r3, [sp, #24]
 677 001a 2361     		str	r3, [r4, #16]
 307:lvgl/src/misc/lv_style.c **** #else
 678              		.loc 1 307 5 is_stmt 1 discriminator 4 view .LVU211
 307:lvgl/src/misc/lv_style.c **** #else
 679              		.loc 1 307 19 is_stmt 0 discriminator 4 view .LVU212
 680 001c 079B     		ldr	r3, [sp, #28]
 681 001e 6360     		str	r3, [r4, #4]
 311:lvgl/src/misc/lv_style.c **** 
 682              		.loc 1 311 1 discriminator 4 view .LVU213
 683 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 684              	.LVL58:
 685              	.L58:
 303:lvgl/src/misc/lv_style.c ****     tr->time = time;
 686              		.loc 1 303 58 view .LVU214
 687 0022 014D     		ldr	r5, .L59
 688              	.LVL59:
 303:lvgl/src/misc/lv_style.c ****     tr->time = time;
 689              		.loc 1 303 58 view .LVU215
 690 0024 F6E7     		b	.L55
 691              	.L60:
 692 0026 00BF     		.align	2
 693              	.L59:
 694 0028 00000000 		.word	lv_anim_path_linear
 695              		.cfi_endproc
 696              	.LFE64:
 698              		.section	.text.lv_style_prop_get_default,"ax",%progbits
 699              		.align	1
 700              		.global	lv_style_prop_get_default
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	lv_style_prop_get_default:
 706              	.LVL60:
 707              	.LFB65:
 314:lvgl/src/misc/lv_style.c ****     lv_style_value_t value;
 708              		.loc 1 314 1 is_stmt 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 24


 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 315:lvgl/src/misc/lv_style.c ****     switch(prop) {
 713              		.loc 1 315 5 view .LVU217
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 714              		.loc 1 316 5 view .LVU218
 715 0000 3628     		cmp	r0, #54
 716 0002 2ED8     		bhi	.L62
 717 0004 0328     		cmp	r0, #3
 718 0006 6BD3     		bcc	.L64
 719 0008 0338     		subs	r0, r0, #3
 720              	.LVL61:
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 721              		.loc 1 316 5 is_stmt 0 view .LVU219
 722 000a 3328     		cmp	r0, #51
 723 000c 68D8     		bhi	.L64
 724 000e DFE800F0 		tbb	[pc, r0]
 725              	.L70:
 726 0012 84       		.byte	(.L74-.L70)/2
 727 0013 67       		.byte	(.L64-.L70)/2
 728 0014 67       		.byte	(.L64-.L70)/2
 729 0015 84       		.byte	(.L74-.L70)/2
 730 0016 67       		.byte	(.L64-.L70)/2
 731 0017 67       		.byte	(.L64-.L70)/2
 732 0018 67       		.byte	(.L64-.L70)/2
 733 0019 67       		.byte	(.L64-.L70)/2
 734 001a 67       		.byte	(.L64-.L70)/2
 735 001b 67       		.byte	(.L64-.L70)/2
 736 001c 67       		.byte	(.L64-.L70)/2
 737 001d 67       		.byte	(.L64-.L70)/2
 738 001e 67       		.byte	(.L64-.L70)/2
 739 001f 67       		.byte	(.L64-.L70)/2
 740 0020 67       		.byte	(.L64-.L70)/2
 741 0021 67       		.byte	(.L64-.L70)/2
 742 0022 67       		.byte	(.L64-.L70)/2
 743 0023 67       		.byte	(.L64-.L70)/2
 744 0024 67       		.byte	(.L64-.L70)/2
 745 0025 67       		.byte	(.L64-.L70)/2
 746 0026 67       		.byte	(.L64-.L70)/2
 747 0027 67       		.byte	(.L64-.L70)/2
 748 0028 67       		.byte	(.L64-.L70)/2
 749 0029 67       		.byte	(.L64-.L70)/2
 750 002a 67       		.byte	(.L64-.L70)/2
 751 002b 67       		.byte	(.L64-.L70)/2
 752 002c 67       		.byte	(.L64-.L70)/2
 753 002d 67       		.byte	(.L64-.L70)/2
 754 002e 67       		.byte	(.L64-.L70)/2
 755 002f 6C       		.byte	(.L73-.L70)/2
 756 0030 67       		.byte	(.L64-.L70)/2
 757 0031 72       		.byte	(.L69-.L70)/2
 758 0032 67       		.byte	(.L64-.L70)/2
 759 0033 67       		.byte	(.L64-.L70)/2
 760 0034 7E       		.byte	(.L72-.L70)/2
 761 0035 67       		.byte	(.L64-.L70)/2
 762 0036 67       		.byte	(.L64-.L70)/2
 763 0037 67       		.byte	(.L64-.L70)/2
 764 0038 26       		.byte	(.L67-.L70)/2
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 25


 765 0039 67       		.byte	(.L64-.L70)/2
 766 003a 67       		.byte	(.L64-.L70)/2
 767 003b 67       		.byte	(.L64-.L70)/2
 768 003c 67       		.byte	(.L64-.L70)/2
 769 003d 67       		.byte	(.L64-.L70)/2
 770 003e 67       		.byte	(.L64-.L70)/2
 771 003f 72       		.byte	(.L69-.L70)/2
 772 0040 26       		.byte	(.L67-.L70)/2
 773 0041 67       		.byte	(.L64-.L70)/2
 774 0042 80       		.byte	(.L71-.L70)/2
 775 0043 67       		.byte	(.L64-.L70)/2
 776 0044 67       		.byte	(.L64-.L70)/2
 777 0045 72       		.byte	(.L69-.L70)/2
 778              	.LVL62:
 779              		.p2align 1
 780              	.L85:
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 781              		.loc 1 316 5 view .LVU220
 782 0046 3738     		subs	r0, r0, #55
 783              	.LVL63:
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 784              		.loc 1 316 5 view .LVU221
 785 0048 80B2     		uxth	r0, r0
 786 004a 0123     		movs	r3, #1
 787 004c 8340     		lsls	r3, r3, r0
 788 004e 344A     		ldr	r2, .L86
 789 0050 1A40     		ands	r2, r2, r3
 790 0052 002A     		cmp	r2, #0
 791 0054 4FD1     		bne	.L69
 792 0056 334A     		ldr	r2, .L86+4
 793 0058 1A40     		ands	r2, r2, r3
 794 005a 002A     		cmp	r2, #0
 795 005c 40D0     		beq	.L64
 796              	.L67:
 343:lvgl/src/misc/lv_style.c ****             break;
 797              		.loc 1 343 13 is_stmt 1 view .LVU222
 343:lvgl/src/misc/lv_style.c ****             break;
 798              		.loc 1 343 23 is_stmt 0 view .LVU223
 799 005e FF20     		movs	r0, #255
 800              	.LVL64:
 344:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_STOP:
 801              		.loc 1 344 13 is_stmt 1 view .LVU224
 802 0060 7047     		bx	lr
 803              	.LVL65:
 804              	.L62:
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 805              		.loc 1 316 5 is_stmt 0 view .LVU225
 806 0062 5528     		cmp	r0, #85
 807 0064 3AD9     		bls	.L84
 808 0066 6D28     		cmp	r0, #109
 809 0068 3AD8     		bhi	.L64
 810 006a 5628     		cmp	r0, #86
 811 006c 38D3     		bcc	.L64
 812 006e 5638     		subs	r0, r0, #86
 813              	.LVL66:
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 814              		.loc 1 316 5 view .LVU226
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 26


 815 0070 1728     		cmp	r0, #23
 816 0072 35D8     		bhi	.L64
 817 0074 01A3     		adr	r3, .L66
 818 0076 53F820F0 		ldr	pc, [r3, r0, lsl #2]
 819 007a 00BF     		.p2align 2
 820              	.L66:
 821 007c 5F000000 		.word	.L67+1
 822 0080 17010000 		.word	.L68+1
 823 0084 E1000000 		.word	.L64+1
 824 0088 E1000000 		.word	.L64+1
 825 008c E1000000 		.word	.L64+1
 826 0090 E1000000 		.word	.L64+1
 827 0094 E1000000 		.word	.L64+1
 828 0098 E1000000 		.word	.L64+1
 829 009c E1000000 		.word	.L64+1
 830 00a0 E1000000 		.word	.L64+1
 831 00a4 5F000000 		.word	.L67+1
 832 00a8 5F000000 		.word	.L67+1
 833 00ac E1000000 		.word	.L64+1
 834 00b0 E1000000 		.word	.L64+1
 835 00b4 E1000000 		.word	.L64+1
 836 00b8 E1000000 		.word	.L64+1
 837 00bc E1000000 		.word	.L64+1
 838 00c0 E1000000 		.word	.L64+1
 839 00c4 E1000000 		.word	.L64+1
 840 00c8 E1000000 		.word	.L64+1
 841 00cc E1000000 		.word	.L64+1
 842 00d0 E1000000 		.word	.L64+1
 843 00d4 E1000000 		.word	.L64+1
 844 00d8 E5000000 		.word	.L65+1
 845              	.LVL67:
 846              		.p2align 1
 847              	.L84:
 316:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 848              		.loc 1 316 5 view .LVU227
 849 00dc 3728     		cmp	r0, #55
 850 00de B2D2     		bcs	.L85
 851              	.LVL68:
 852              	.L64:
 359:lvgl/src/misc/lv_style.c ****             value.num = 0;
 853              		.loc 1 359 13 is_stmt 1 view .LVU228
 359:lvgl/src/misc/lv_style.c ****             value.num = 0;
 854              		.loc 1 359 23 is_stmt 0 view .LVU229
 855 00e0 0020     		movs	r0, #0
 360:lvgl/src/misc/lv_style.c ****             break;
 856              		.loc 1 360 13 is_stmt 1 view .LVU230
 361:lvgl/src/misc/lv_style.c ****     }
 857              		.loc 1 361 13 view .LVU231
 364:lvgl/src/misc/lv_style.c **** }
 858              		.loc 1 364 5 view .LVU232
 365:lvgl/src/misc/lv_style.c **** 
 859              		.loc 1 365 1 is_stmt 0 view .LVU233
 860 00e2 7047     		bx	lr
 861              	.L65:
 318:lvgl/src/misc/lv_style.c ****             break;
 862              		.loc 1 318 13 is_stmt 1 view .LVU234
 318:lvgl/src/misc/lv_style.c ****             break;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 27


 863              		.loc 1 318 23 is_stmt 0 view .LVU235
 864 00e4 4FF48070 		mov	r0, #256
 319:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_COLOR:
 865              		.loc 1 319 13 is_stmt 1 view .LVU236
 866 00e8 7047     		bx	lr
 867              	.L73:
 321:lvgl/src/misc/lv_style.c ****             break;
 868              		.loc 1 321 13 view .LVU237
 869              	.LBB22:
 870              	.LBI22:
 871              		.file 2 "lvgl/src/misc/lv_color.h"
   1:lvgl/src/misc/lv_color.h **** /**
   2:lvgl/src/misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/misc/lv_color.h ****  *
   4:lvgl/src/misc/lv_color.h ****  */
   5:lvgl/src/misc/lv_color.h **** 
   6:lvgl/src/misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/misc/lv_color.h **** 
   9:lvgl/src/misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_color.h **** extern "C" {
  11:lvgl/src/misc/lv_color.h **** #endif
  12:lvgl/src/misc/lv_color.h **** 
  13:lvgl/src/misc/lv_color.h **** /*********************
  14:lvgl/src/misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_color.h ****  *********************/
  16:lvgl/src/misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/misc/lv_color.h **** 
  21:lvgl/src/misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/misc/lv_color.h **** #endif
  25:lvgl/src/misc/lv_color.h **** 
  26:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/misc/lv_color.h **** #endif
  29:lvgl/src/misc/lv_color.h **** 
  30:lvgl/src/misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/misc/lv_color.h **** 
  32:lvgl/src/misc/lv_color.h **** /*********************
  33:lvgl/src/misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/misc/lv_color.h ****  *********************/
  35:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/misc/lv_color.h **** 
  38:lvgl/src/misc/lv_color.h **** /**
  39:lvgl/src/misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/misc/lv_color.h ****  */
  41:lvgl/src/misc/lv_color.h **** enum {
  42:lvgl/src/misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/misc/lv_color.h ****     LV_OPA_30     = 76,
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 28


  47:lvgl/src/misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/misc/lv_color.h **** };
  56:lvgl/src/misc/lv_color.h **** 
  57:lvgl/src/misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/misc/lv_color.h **** 
  60:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/misc/lv_color.h **** #else
  69:lvgl/src/misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/misc/lv_color.h **** #endif
  71:lvgl/src/misc/lv_color.h **** 
  72:lvgl/src/misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/misc/lv_color.h **** /**
  74:lvgl/src/misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/misc/lv_color.h **** */
  78:lvgl/src/misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/misc/lv_color.h **** #endif
  82:lvgl/src/misc/lv_color.h **** #else
  83:lvgl/src/misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/misc/lv_color.h **** #endif
  86:lvgl/src/misc/lv_color.h **** #endif
  87:lvgl/src/misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/misc/lv_color.h **** 
  89:lvgl/src/misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/misc/lv_color.h **** #endif
  92:lvgl/src/misc/lv_color.h **** 
  93:lvgl/src/misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/misc/lv_color.h **** #else
  97:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/misc/lv_color.h **** #endif
  99:lvgl/src/misc/lv_color.h **** 
 100:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 29


 104:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/misc/lv_color.h **** 
 109:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/misc/lv_color.h **** 
 114:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/misc/lv_color.h **** 
 117:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/misc/lv_color.h **** 
 122:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/misc/lv_color.h **** 
 127:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/misc/lv_color.h **** 
 130:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/misc/lv_color.h **** #else
 134:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/misc/lv_color.h **** #endif
 136:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/misc/lv_color.h **** 
 139:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/misc/lv_color.h **** #else
 143:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/misc/lv_color.h **** #endif
 145:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/misc/lv_color.h **** 
 148:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/misc/lv_color.h **** #else
 152:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/misc/lv_color.h **** #endif
 155:lvgl/src/misc/lv_color.h **** 
 156:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 30


 161:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/misc/lv_color.h **** 
 166:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/misc/lv_color.h **** 
 169:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/misc/lv_color.h **** 
 178:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/misc/lv_color.h **** 
 183:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/misc/lv_color.h **** 
 186:lvgl/src/misc/lv_color.h **** /**********************
 187:lvgl/src/misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/misc/lv_color.h ****  **********************/
 189:lvgl/src/misc/lv_color.h **** 
 190:lvgl/src/misc/lv_color.h **** typedef union {
 191:lvgl/src/misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/misc/lv_color.h ****     union {
 193:lvgl/src/misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/misc/lv_color.h ****     } ch;
 197:lvgl/src/misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/misc/lv_color.h **** 
 199:lvgl/src/misc/lv_color.h **** typedef union {
 200:lvgl/src/misc/lv_color.h ****     struct {
 201:lvgl/src/misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/misc/lv_color.h ****     } ch;
 205:lvgl/src/misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/misc/lv_color.h **** 
 208:lvgl/src/misc/lv_color.h **** typedef union {
 209:lvgl/src/misc/lv_color.h ****     struct {
 210:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/misc/lv_color.h **** #else
 215:lvgl/src/misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 31


 218:lvgl/src/misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/misc/lv_color.h **** #endif
 220:lvgl/src/misc/lv_color.h ****     } ch;
 221:lvgl/src/misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/misc/lv_color.h **** 
 224:lvgl/src/misc/lv_color.h **** typedef union {
 225:lvgl/src/misc/lv_color.h ****     struct {
 226:lvgl/src/misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/misc/lv_color.h ****     } ch;
 231:lvgl/src/misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/misc/lv_color.h **** 
 234:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/misc/lv_color.h **** 
 237:lvgl/src/misc/lv_color.h **** typedef struct {
 238:lvgl/src/misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/misc/lv_color.h **** 
 243:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/misc/lv_color.h **** //! @endcond
 247:lvgl/src/misc/lv_color.h **** 
 248:lvgl/src/misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/misc/lv_color.h **** 
 250:lvgl/src/misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/misc/lv_color.h **** 
 252:lvgl/src/misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/misc/lv_color.h ****     void * user_data;
 255:lvgl/src/misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/misc/lv_color.h **** 
 257:lvgl/src/misc/lv_color.h **** typedef enum {
 258:lvgl/src/misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BROWN,
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 32


 275:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/misc/lv_color.h **** 
 281:lvgl/src/misc/lv_color.h **** /**********************
 282:lvgl/src/misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/misc/lv_color.h ****  **********************/
 284:lvgl/src/misc/lv_color.h **** 
 285:lvgl/src/misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/misc/lv_color.h ****  *
 292:lvgl/src/misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/misc/lv_color.h ****  */
 298:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/misc/lv_color.h **** {
 300:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/misc/lv_color.h ****     return color.full;
 302:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/misc/lv_color.h ****         return 1;
 305:lvgl/src/misc/lv_color.h ****     }
 306:lvgl/src/misc/lv_color.h ****     else {
 307:lvgl/src/misc/lv_color.h ****         return 0;
 308:lvgl/src/misc/lv_color.h ****     }
 309:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/misc/lv_color.h ****         return 1;
 312:lvgl/src/misc/lv_color.h ****     }
 313:lvgl/src/misc/lv_color.h ****     else {
 314:lvgl/src/misc/lv_color.h ****         return 0;
 315:lvgl/src/misc/lv_color.h ****     }
 316:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/misc/lv_color.h ****         return 1;
 319:lvgl/src/misc/lv_color.h ****     }
 320:lvgl/src/misc/lv_color.h ****     else {
 321:lvgl/src/misc/lv_color.h ****         return 0;
 322:lvgl/src/misc/lv_color.h ****     }
 323:lvgl/src/misc/lv_color.h **** #endif
 324:lvgl/src/misc/lv_color.h **** }
 325:lvgl/src/misc/lv_color.h **** 
 326:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/misc/lv_color.h **** {
 328:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/misc/lv_color.h ****         return 0;
 331:lvgl/src/misc/lv_color.h ****     else
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 33


 332:lvgl/src/misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/misc/lv_color.h ****     return color.full;
 335:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/misc/lv_color.h ****     return ret.full;
 341:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/misc/lv_color.h ****     return ret.full;
 347:lvgl/src/misc/lv_color.h **** #endif
 348:lvgl/src/misc/lv_color.h **** }
 349:lvgl/src/misc/lv_color.h **** 
 350:lvgl/src/misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/misc/lv_color.h **** {
 352:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/misc/lv_color.h ****         return 0;
 355:lvgl/src/misc/lv_color.h ****     else
 356:lvgl/src/misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/misc/lv_color.h ****     return ret.full;
 363:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/misc/lv_color.h ****     return color.full;
 365:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/misc/lv_color.h ****     return ret.full;
 371:lvgl/src/misc/lv_color.h **** #endif
 372:lvgl/src/misc/lv_color.h **** }
 373:lvgl/src/misc/lv_color.h **** 
 374:lvgl/src/misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/misc/lv_color.h **** {
 376:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/misc/lv_color.h ****     else
 380:lvgl/src/misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/misc/lv_color.h ****     return ret.full;
 388:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 34


 389:lvgl/src/misc/lv_color.h ****     /**
 390:lvgl/src/misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/misc/lv_color.h ****      *
 396:lvgl/src/misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/misc/lv_color.h ****      *
 398:lvgl/src/misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/misc/lv_color.h ****      *
 407:lvgl/src/misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/misc/lv_color.h ****      */
 417:lvgl/src/misc/lv_color.h **** 
 418:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/misc/lv_color.h ****     return ret.full;
 424:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/misc/lv_color.h ****     return color.full;
 426:lvgl/src/misc/lv_color.h **** #endif
 427:lvgl/src/misc/lv_color.h **** }
 428:lvgl/src/misc/lv_color.h **** 
 429:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/misc/lv_color.h **** 
 431:lvgl/src/misc/lv_color.h **** /**
 432:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/misc/lv_color.h ****  */
 438:lvgl/src/misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/misc/lv_color.h **** {
 440:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/misc/lv_color.h **** 
 442:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 35


 446:lvgl/src/misc/lv_color.h **** #endif
 447:lvgl/src/misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/misc/lv_color.h **** #endif
 457:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/misc/lv_color.h **** #else
 467:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/misc/lv_color.h **** #endif
 470:lvgl/src/misc/lv_color.h **** 
 471:lvgl/src/misc/lv_color.h ****     return ret;
 472:lvgl/src/misc/lv_color.h **** }
 473:lvgl/src/misc/lv_color.h **** 
 474:lvgl/src/misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/misc/lv_color.h **** {
 476:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/misc/lv_color.h **** #else
 481:lvgl/src/misc/lv_color.h ****     (void) mix;
 482:lvgl/src/misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/misc/lv_color.h **** #endif
 487:lvgl/src/misc/lv_color.h **** 
 488:lvgl/src/misc/lv_color.h **** }
 489:lvgl/src/misc/lv_color.h **** 
 490:lvgl/src/misc/lv_color.h **** /**
 491:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/misc/lv_color.h ****  */
 499:lvgl/src/misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/misc/lv_color.h **** {
 501:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 36


 503:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/misc/lv_color.h **** #else
 509:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/misc/lv_color.h **** #endif
 517:lvgl/src/misc/lv_color.h **** 
 518:lvgl/src/misc/lv_color.h ****     return ret;
 519:lvgl/src/misc/lv_color.h **** }
 520:lvgl/src/misc/lv_color.h **** 
 521:lvgl/src/misc/lv_color.h **** /**
 522:lvgl/src/misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/misc/lv_color.h ****  */
 530:lvgl/src/misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/misc/lv_color.h **** {
 534:lvgl/src/misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/misc/lv_color.h ****     }
 539:lvgl/src/misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/misc/lv_color.h ****     }
 544:lvgl/src/misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/misc/lv_color.h ****     }
 549:lvgl/src/misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/misc/lv_color.h ****     else {
 551:lvgl/src/misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/misc/lv_color.h **** 
 559:lvgl/src/misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 37


 560:lvgl/src/misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/misc/lv_color.h ****             /*Info:
 566:lvgl/src/misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/misc/lv_color.h **** 
 572:lvgl/src/misc/lv_color.h ****         }
 573:lvgl/src/misc/lv_color.h **** 
 574:lvgl/src/misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/misc/lv_color.h ****     }
 577:lvgl/src/misc/lv_color.h **** }
 578:lvgl/src/misc/lv_color.h **** 
 579:lvgl/src/misc/lv_color.h **** //! @endcond
 580:lvgl/src/misc/lv_color.h **** 
 581:lvgl/src/misc/lv_color.h **** /**
 582:lvgl/src/misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/misc/lv_color.h ****  * @param color a color
 584:lvgl/src/misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/misc/lv_color.h ****  */
 586:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/misc/lv_color.h **** {
 588:lvgl/src/misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/misc/lv_color.h **** }
 593:lvgl/src/misc/lv_color.h **** 
 594:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/misc/lv_color.h **** {
 596:lvgl/src/misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/misc/lv_color.h **** }
 598:lvgl/src/misc/lv_color.h **** 
 599:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/misc/lv_color.h **** {
 601:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/misc/lv_color.h **** 
 612:lvgl/src/misc/lv_color.h ****         A bit better:
 613:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/misc/lv_color.h ****                     rgb565 = r | g | b
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 38


 617:lvgl/src/misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/misc/lv_color.h **** #else
 620:lvgl/src/misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/misc/lv_color.h **** #endif
 623:lvgl/src/misc/lv_color.h ****     return r;
 624:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/misc/lv_color.h ****     return r;
 628:lvgl/src/misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 630:lvgl/src/misc/lv_color.h **** #endif
 631:lvgl/src/misc/lv_color.h **** }
 632:lvgl/src/misc/lv_color.h **** 
 633:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/misc/lv_color.h **** {
 635:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/misc/lv_color.h **** }
 638:lvgl/src/misc/lv_color.h **** 
 639:lvgl/src/misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/misc/lv_color.h **** {
 641:lvgl/src/misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/misc/lv_color.h **** }
 643:lvgl/src/misc/lv_color.h **** 
 644:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/misc/lv_color.h **** //!
 646:lvgl/src/misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/misc/lv_color.h **** 
 648:lvgl/src/misc/lv_color.h **** //! @endcond
 649:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/misc/lv_color.h **** 
 651:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/misc/lv_color.h **** 
 653:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/misc/lv_color.h **** 
 655:lvgl/src/misc/lv_color.h **** /**
 656:lvgl/src/misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/misc/lv_color.h ****  */
 662:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/misc/lv_color.h **** 
 664:lvgl/src/misc/lv_color.h **** /**
 665:lvgl/src/misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/misc/lv_color.h ****  */
 671:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/misc/lv_color.h **** 
 673:lvgl/src/misc/lv_color.h **** /**
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 39


 674:lvgl/src/misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/misc/lv_color.h ****  * @param color color
 676:lvgl/src/misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/misc/lv_color.h ****  */
 678:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/misc/lv_color.h **** 
 680:lvgl/src/misc/lv_color.h **** /**
 681:lvgl/src/misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/misc/lv_color.h ****  */
 684:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/misc/lv_color.h **** {
 686:lvgl/src/misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 687:lvgl/src/misc/lv_color.h **** }
 688:lvgl/src/misc/lv_color.h **** 
 689:lvgl/src/misc/lv_color.h **** /**********************
 690:lvgl/src/misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/misc/lv_color.h ****  **********************/
 692:lvgl/src/misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/misc/lv_color.h **** 
 694:lvgl/src/misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 872              		.loc 2 695 26 view .LVU238
 873              	.LBB23:
 696:lvgl/src/misc/lv_color.h **** {
 697:lvgl/src/misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 874              		.loc 2 697 5 view .LVU239
 875              	.LVL69:
 876              	.LBB24:
 877              	.LBI24:
 594:lvgl/src/misc/lv_color.h **** {
 878              		.loc 2 594 26 view .LVU240
 879              	.LBB25:
 596:lvgl/src/misc/lv_color.h **** }
 880              		.loc 2 596 5 view .LVU241
 596:lvgl/src/misc/lv_color.h **** }
 881              		.loc 2 596 5 is_stmt 0 view .LVU242
 882 00ea 0020     		movs	r0, #0
 596:lvgl/src/misc/lv_color.h **** }
 883              		.loc 2 596 5 view .LVU243
 884 00ec 4FF6FF73 		movw	r3, #65535
 885 00f0 63F30F00 		bfi	r0, r3, #0, #16
 886              	.LVL70:
 887              	.LVL71:
 596:lvgl/src/misc/lv_color.h **** }
 888              		.loc 2 596 5 view .LVU244
 889              	.LBE25:
 890              	.LBE24:
 891              		.loc 2 697 12 view .LVU245
 892 00f4 7047     		bx	lr
 893              	.L69:
 894              	.LBE23:
 895              	.LBE22:
 331:lvgl/src/misc/lv_style.c ****             break;
 896              		.loc 1 331 13 is_stmt 1 view .LVU246
 897              	.LBB26:
 898              	.LBI26:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 40


 698:lvgl/src/misc/lv_color.h **** }
 699:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 899              		.loc 2 699 26 view .LVU247
 900              	.LBB27:
 700:lvgl/src/misc/lv_color.h **** {
 701:lvgl/src/misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 901              		.loc 2 701 5 view .LVU248
 902              	.LVL72:
 903              	.LBB28:
 904              	.LBI28:
 594:lvgl/src/misc/lv_color.h **** {
 905              		.loc 2 594 26 view .LVU249
 906              	.LBB29:
 596:lvgl/src/misc/lv_color.h **** }
 907              		.loc 2 596 5 view .LVU250
 596:lvgl/src/misc/lv_color.h **** }
 908              		.loc 2 596 12 is_stmt 0 view .LVU251
 909 00f6 4FF00003 		mov	r3, #0	@ movhi
 910 00fa 6FF30403 		bfc	r3, #0, #5
 911 00fe 6FF34A13 		bfc	r3, #5, #6
 912 0102 6FF3CF23 		bfc	r3, #11, #5
 913              	.LVL73:
 596:lvgl/src/misc/lv_color.h **** }
 914              		.loc 2 596 12 view .LVU252
 915 0106 0020     		movs	r0, #0
 596:lvgl/src/misc/lv_color.h **** }
 916              		.loc 2 596 12 view .LVU253
 917 0108 63F30F00 		bfi	r0, r3, #0, #16
 918              	.LVL74:
 919              	.LVL75:
 596:lvgl/src/misc/lv_color.h **** }
 920              		.loc 2 596 12 view .LVU254
 921              	.LBE29:
 922              	.LBE28:
 923              		.loc 2 701 12 view .LVU255
 924 010c 7047     		bx	lr
 925              	.L72:
 926              	.LBE27:
 927              	.LBE26:
 346:lvgl/src/misc/lv_style.c ****             break;
 928              		.loc 1 346 13 is_stmt 1 view .LVU256
 346:lvgl/src/misc/lv_style.c ****             break;
 929              		.loc 1 346 23 is_stmt 0 view .LVU257
 930 010e FF20     		movs	r0, #255
 347:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_SIDE:
 931              		.loc 1 347 13 is_stmt 1 view .LVU258
 932 0110 7047     		bx	lr
 933              	.L71:
 349:lvgl/src/misc/lv_style.c ****             break;
 934              		.loc 1 349 13 view .LVU259
 349:lvgl/src/misc/lv_style.c ****             break;
 935              		.loc 1 349 23 is_stmt 0 view .LVU260
 936 0112 0F20     		movs	r0, #15
 350:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_FONT:
 937              		.loc 1 350 13 is_stmt 1 view .LVU261
 938 0114 7047     		bx	lr
 939              	.L68:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 41


 352:lvgl/src/misc/lv_style.c ****             break;
 940              		.loc 1 352 13 view .LVU262
 352:lvgl/src/misc/lv_style.c ****             break;
 941              		.loc 1 352 23 is_stmt 0 view .LVU263
 942 0116 0448     		ldr	r0, .L86+8
 353:lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_WIDTH:
 943              		.loc 1 353 13 is_stmt 1 view .LVU264
 944 0118 7047     		bx	lr
 945              	.L74:
 356:lvgl/src/misc/lv_style.c ****             break;
 946              		.loc 1 356 13 view .LVU265
 356:lvgl/src/misc/lv_style.c ****             break;
 947              		.loc 1 356 23 is_stmt 0 view .LVU266
 948 011a 41F6FF70 		movw	r0, #8191
 357:lvgl/src/misc/lv_style.c ****         default:
 949              		.loc 1 357 13 is_stmt 1 view .LVU267
 950 011e 7047     		bx	lr
 951              	.L87:
 952              		.align	2
 953              	.L86:
 954 0120 00204148 		.word	1212227584
 955 0124 01C08010 		.word	276873217
 956 0128 00000000 		.word	lv_font_montserrat_14
 957              		.cfi_endproc
 958              	.LFE65:
 960              		.section	.text.lv_style_get_prop_inlined,"ax",%progbits
 961              		.align	1
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 966              	lv_style_get_prop_inlined:
 967              	.LVL76:
 968              	.LFB47:
 969              		.file 3 "lvgl/src/misc/lv_style.h"
   1:lvgl/src/misc/lv_style.h **** /**
   2:lvgl/src/misc/lv_style.h ****  * @file lv_style.h
   3:lvgl/src/misc/lv_style.h ****  *
   4:lvgl/src/misc/lv_style.h ****  */
   5:lvgl/src/misc/lv_style.h **** 
   6:lvgl/src/misc/lv_style.h **** #ifndef LV_STYLE_H
   7:lvgl/src/misc/lv_style.h **** #define LV_STYLE_H
   8:lvgl/src/misc/lv_style.h **** 
   9:lvgl/src/misc/lv_style.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_style.h **** extern "C" {
  11:lvgl/src/misc/lv_style.h **** #endif
  12:lvgl/src/misc/lv_style.h **** 
  13:lvgl/src/misc/lv_style.h **** /*********************
  14:lvgl/src/misc/lv_style.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_style.h ****  *********************/
  16:lvgl/src/misc/lv_style.h **** #include <stdbool.h>
  17:lvgl/src/misc/lv_style.h **** #include <stdint.h>
  18:lvgl/src/misc/lv_style.h **** #include "../font/lv_font.h"
  19:lvgl/src/misc/lv_style.h **** #include "lv_color.h"
  20:lvgl/src/misc/lv_style.h **** #include "lv_area.h"
  21:lvgl/src/misc/lv_style.h **** #include "lv_anim.h"
  22:lvgl/src/misc/lv_style.h **** #include "lv_txt.h"
  23:lvgl/src/misc/lv_style.h **** #include "lv_types.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 42


  24:lvgl/src/misc/lv_style.h **** #include "lv_assert.h"
  25:lvgl/src/misc/lv_style.h **** #include "lv_bidi.h"
  26:lvgl/src/misc/lv_style.h **** 
  27:lvgl/src/misc/lv_style.h **** /*********************
  28:lvgl/src/misc/lv_style.h ****  *      DEFINES
  29:lvgl/src/misc/lv_style.h ****  *********************/
  30:lvgl/src/misc/lv_style.h **** 
  31:lvgl/src/misc/lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  32:lvgl/src/misc/lv_style.h **** 
  33:lvgl/src/misc/lv_style.h **** /**
  34:lvgl/src/misc/lv_style.h ****  * Flags for style behavior
  35:lvgl/src/misc/lv_style.h ****  *
  36:lvgl/src/misc/lv_style.h ****  * The rest of the flags will have _FLAG added to their name in v9.
  37:lvgl/src/misc/lv_style.h ****  */
  38:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_FLAG_NONE             (0)
  39:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 0)  /*Inherited*/
  40:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 1)  /*Requires ext. draw size update when changed
  41:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 2)  /*Requires layout update when changed*/
  42:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 3)  /*Requires layout update on parent when chang
  43:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_LAYER_REFR            (1 << 4)  /*Affects layer handling*/
  44:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_ALL                   (0x1F)     /*Indicating all flags*/
  45:lvgl/src/misc/lv_style.h **** 
  46:lvgl/src/misc/lv_style.h **** /**
  47:lvgl/src/misc/lv_style.h ****  * Other constants
  48:lvgl/src/misc/lv_style.h ****  */
  49:lvgl/src/misc/lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  50:lvgl/src/misc/lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  51:lvgl/src/misc/lv_style.h **** 
  52:lvgl/src/misc/lv_style.h **** // *INDENT-OFF*
  53:lvgl/src/misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
  54:lvgl/src/misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array)                       \
  55:lvgl/src/misc/lv_style.h ****     const lv_style_t var_name = {                                       \
  56:lvgl/src/misc/lv_style.h ****         .sentinel = LV_STYLE_SENTINEL_VALUE,                            \
  57:lvgl/src/misc/lv_style.h ****         .v_p = { .const_props = prop_array },                           \
  58:lvgl/src/misc/lv_style.h ****         .has_group = 0xFF,                                              \
  59:lvgl/src/misc/lv_style.h ****         .prop1 = LV_STYLE_PROP_ANY,                                     \
  60:lvgl/src/misc/lv_style.h ****         .prop_cnt = (sizeof(prop_array) / sizeof((prop_array)[0])),     \
  61:lvgl/src/misc/lv_style.h ****     }
  62:lvgl/src/misc/lv_style.h **** #else
  63:lvgl/src/misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array)                       \
  64:lvgl/src/misc/lv_style.h ****     const lv_style_t var_name = {                                       \
  65:lvgl/src/misc/lv_style.h ****         .v_p = { .const_props = prop_array },                           \
  66:lvgl/src/misc/lv_style.h ****         .has_group = 0xFF,                                              \
  67:lvgl/src/misc/lv_style.h ****         .prop1 = LV_STYLE_PROP_ANY,                                     \
  68:lvgl/src/misc/lv_style.h ****         .prop_cnt = (sizeof(prop_array) / sizeof((prop_array)[0])),     \
  69:lvgl/src/misc/lv_style.h ****     }
  70:lvgl/src/misc/lv_style.h **** #endif
  71:lvgl/src/misc/lv_style.h **** // *INDENT-ON*
  72:lvgl/src/misc/lv_style.h **** 
  73:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_META_INHERIT 0x8000
  74:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_META_INITIAL 0x4000
  75:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_META_MASK (LV_STYLE_PROP_META_INHERIT | LV_STYLE_PROP_META_INITIAL)
  76:lvgl/src/misc/lv_style.h **** 
  77:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_ID_MASK(prop) ((lv_style_prop_t)((prop) & ~LV_STYLE_PROP_META_MASK))
  78:lvgl/src/misc/lv_style.h **** 
  79:lvgl/src/misc/lv_style.h **** /**********************
  80:lvgl/src/misc/lv_style.h ****  *      TYPEDEFS
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 43


  81:lvgl/src/misc/lv_style.h ****  **********************/
  82:lvgl/src/misc/lv_style.h **** 
  83:lvgl/src/misc/lv_style.h **** /**
  84:lvgl/src/misc/lv_style.h ****  * Possible options how to blend opaque drawings
  85:lvgl/src/misc/lv_style.h ****  */
  86:lvgl/src/misc/lv_style.h **** enum {
  87:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  88:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  89:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  90:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_MULTIPLY,   /**< Multiply the foreground and background*/
  91:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_REPLACE,    /**< Replace background with foreground in the area*/
  92:lvgl/src/misc/lv_style.h **** };
  93:lvgl/src/misc/lv_style.h **** 
  94:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_blend_mode_t;
  95:lvgl/src/misc/lv_style.h **** 
  96:lvgl/src/misc/lv_style.h **** /**
  97:lvgl/src/misc/lv_style.h ****  * Some options to apply decorations on texts.
  98:lvgl/src/misc/lv_style.h ****  * 'OR'ed values can be used.
  99:lvgl/src/misc/lv_style.h ****  */
 100:lvgl/src/misc/lv_style.h **** enum {
 101:lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
 102:lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
 103:lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
 104:lvgl/src/misc/lv_style.h **** };
 105:lvgl/src/misc/lv_style.h **** 
 106:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_text_decor_t;
 107:lvgl/src/misc/lv_style.h **** 
 108:lvgl/src/misc/lv_style.h **** /**
 109:lvgl/src/misc/lv_style.h ****  * Selects on which sides border should be drawn
 110:lvgl/src/misc/lv_style.h ****  * 'OR'ed values can be used.
 111:lvgl/src/misc/lv_style.h ****  */
 112:lvgl/src/misc/lv_style.h **** enum {
 113:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
 114:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
 115:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
 116:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
 117:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
 118:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
 119:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
 120:lvgl/src/misc/lv_style.h **** };
 121:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_border_side_t;
 122:lvgl/src/misc/lv_style.h **** 
 123:lvgl/src/misc/lv_style.h **** /**
 124:lvgl/src/misc/lv_style.h ****  * The direction of the gradient.
 125:lvgl/src/misc/lv_style.h ****  */
 126:lvgl/src/misc/lv_style.h **** enum {
 127:lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 128:lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 129:lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 130:lvgl/src/misc/lv_style.h **** };
 131:lvgl/src/misc/lv_style.h **** 
 132:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_grad_dir_t;
 133:lvgl/src/misc/lv_style.h **** 
 134:lvgl/src/misc/lv_style.h **** /**
 135:lvgl/src/misc/lv_style.h ****  * The dithering algorithm for the gradient
 136:lvgl/src/misc/lv_style.h ****  * Depends on LV_DITHER_GRADIENT
 137:lvgl/src/misc/lv_style.h ****  */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 44


 138:lvgl/src/misc/lv_style.h **** enum {
 139:lvgl/src/misc/lv_style.h ****     LV_DITHER_NONE,     /**< No dithering, colors are just quantized to the output resolution*/
 140:lvgl/src/misc/lv_style.h ****     LV_DITHER_ORDERED,  /**< Ordered dithering. Faster to compute and use less memory but lower qua
 141:lvgl/src/misc/lv_style.h ****     LV_DITHER_ERR_DIFF, /**< Error diffusion mode. Slower to compute and use more memory but give h
 142:lvgl/src/misc/lv_style.h **** };
 143:lvgl/src/misc/lv_style.h **** 
 144:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_dither_mode_t;
 145:lvgl/src/misc/lv_style.h **** 
 146:lvgl/src/misc/lv_style.h **** /** A gradient stop definition.
 147:lvgl/src/misc/lv_style.h ****  *  This matches a color and a position in a virtual 0-255 scale.
 148:lvgl/src/misc/lv_style.h ****  */
 149:lvgl/src/misc/lv_style.h **** typedef struct {
 150:lvgl/src/misc/lv_style.h ****     lv_color_t color;   /**< The stop color */
 151:lvgl/src/misc/lv_style.h ****     uint8_t    frac;    /**< The stop position in 1/255 unit */
 152:lvgl/src/misc/lv_style.h **** } lv_gradient_stop_t;
 153:lvgl/src/misc/lv_style.h **** 
 154:lvgl/src/misc/lv_style.h **** /** A descriptor of a gradient. */
 155:lvgl/src/misc/lv_style.h **** typedef struct {
 156:lvgl/src/misc/lv_style.h ****     lv_gradient_stop_t   stops[LV_GRADIENT_MAX_STOPS]; /**< A gradient stop array */
 157:lvgl/src/misc/lv_style.h ****     uint8_t              stops_count;                  /**< The number of used stops in the array *
 158:lvgl/src/misc/lv_style.h ****     lv_grad_dir_t        dir : 3;                      /**< The gradient direction.
 159:lvgl/src/misc/lv_style.h ****                                                         * Any of LV_GRAD_DIR_HOR, LV_GRAD_DIR_VER, 
 160:lvgl/src/misc/lv_style.h ****     lv_dither_mode_t     dither : 3;                   /**< Whether to dither the gradient or not.
 161:lvgl/src/misc/lv_style.h ****                                                         * Any of LV_DITHER_NONE, LV_DITHER_ORDERED,
 162:lvgl/src/misc/lv_style.h **** } lv_grad_dsc_t;
 163:lvgl/src/misc/lv_style.h **** 
 164:lvgl/src/misc/lv_style.h **** /**
 165:lvgl/src/misc/lv_style.h ****  * A common type to handle all the property types in the same way.
 166:lvgl/src/misc/lv_style.h ****  */
 167:lvgl/src/misc/lv_style.h **** typedef union {
 168:lvgl/src/misc/lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 169:lvgl/src/misc/lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 170:lvgl/src/misc/lv_style.h ****     lv_color_t color;    /**< Colors*/
 171:lvgl/src/misc/lv_style.h **** } lv_style_value_t;
 172:lvgl/src/misc/lv_style.h **** 
 173:lvgl/src/misc/lv_style.h **** /**
 174:lvgl/src/misc/lv_style.h ****  * Enumeration of all built in style properties
 175:lvgl/src/misc/lv_style.h ****  *
 176:lvgl/src/misc/lv_style.h ****  * Props are split into groups of 16. When adding a new prop to a group, ensure it does not overflo
 177:lvgl/src/misc/lv_style.h ****  */
 178:lvgl/src/misc/lv_style.h **** typedef enum {
 179:lvgl/src/misc/lv_style.h ****     LV_STYLE_PROP_INV               = 0,
 180:lvgl/src/misc/lv_style.h **** 
 181:lvgl/src/misc/lv_style.h ****     /*Group 0*/
 182:lvgl/src/misc/lv_style.h ****     LV_STYLE_WIDTH                  = 1,
 183:lvgl/src/misc/lv_style.h ****     LV_STYLE_MIN_WIDTH              = 2,
 184:lvgl/src/misc/lv_style.h ****     LV_STYLE_MAX_WIDTH              = 3,
 185:lvgl/src/misc/lv_style.h ****     LV_STYLE_HEIGHT                 = 4,
 186:lvgl/src/misc/lv_style.h ****     LV_STYLE_MIN_HEIGHT             = 5,
 187:lvgl/src/misc/lv_style.h ****     LV_STYLE_MAX_HEIGHT             = 6,
 188:lvgl/src/misc/lv_style.h ****     LV_STYLE_X                      = 7,
 189:lvgl/src/misc/lv_style.h ****     LV_STYLE_Y                      = 8,
 190:lvgl/src/misc/lv_style.h ****     LV_STYLE_ALIGN                  = 9,
 191:lvgl/src/misc/lv_style.h ****     LV_STYLE_LAYOUT                 = 10,
 192:lvgl/src/misc/lv_style.h ****     LV_STYLE_RADIUS                 = 11,
 193:lvgl/src/misc/lv_style.h **** 
 194:lvgl/src/misc/lv_style.h ****     /*Group 1*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 45


 195:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_TOP                = 16,
 196:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_BOTTOM             = 17,
 197:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_LEFT               = 18,
 198:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_RIGHT              = 19,
 199:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_ROW                = 20,
 200:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_COLUMN             = 21,
 201:lvgl/src/misc/lv_style.h ****     LV_STYLE_BASE_DIR               = 22,
 202:lvgl/src/misc/lv_style.h ****     LV_STYLE_CLIP_CORNER            = 23,
 203:lvgl/src/misc/lv_style.h **** 
 204:lvgl/src/misc/lv_style.h ****     /*Group 2*/
 205:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_COLOR               = 32,
 206:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_OPA                 = 33,
 207:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR          = 34,
 208:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_DIR            = 35,
 209:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_MAIN_STOP           = 36,
 210:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_STOP           = 37,
 211:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD                = 38,
 212:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_DITHER_MODE         = 39,
 213:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_SRC             = 40,
 214:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_OPA             = 41,
 215:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR         = 42,
 216:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA     = 43,
 217:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_TILED           = 44,
 218:lvgl/src/misc/lv_style.h **** 
 219:lvgl/src/misc/lv_style.h ****     /*Group 3*/
 220:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_COLOR           = 48,
 221:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_OPA             = 49,
 222:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_WIDTH           = 50,
 223:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_SIDE            = 51,
 224:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_POST            = 52,
 225:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_WIDTH          = 53,
 226:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR          = 54,
 227:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_OPA            = 55,
 228:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_PAD            = 56,
 229:lvgl/src/misc/lv_style.h **** 
 230:lvgl/src/misc/lv_style.h ****     /*Group 4*/
 231:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_WIDTH           = 64,
 232:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_X           = 65,
 233:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_Y           = 66,
 234:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_SPREAD          = 67,
 235:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR           = 68,
 236:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OPA             = 69,
 237:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_OPA                = 70,
 238:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR            = 71,
 239:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA        = 72,
 240:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_WIDTH             = 73,
 241:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH        = 74,
 242:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_DASH_GAP          = 75,
 243:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_ROUNDED           = 76,
 244:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_COLOR             = 77,
 245:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_OPA               = 78,
 246:lvgl/src/misc/lv_style.h **** 
 247:lvgl/src/misc/lv_style.h ****     /*Group 5*/
 248:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_WIDTH              = 80,
 249:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_ROUNDED            = 81,
 250:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_COLOR              = 82,
 251:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_OPA                = 83,
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 46


 252:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_IMG_SRC            = 84,
 253:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_COLOR             = 85,
 254:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_OPA               = 86,
 255:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_FONT              = 87,
 256:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE      = 88,
 257:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE        = 89,
 258:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_DECOR             = 90,
 259:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_ALIGN             = 91,
 260:lvgl/src/misc/lv_style.h **** 
 261:lvgl/src/misc/lv_style.h ****     /*Group 6*/
 262:lvgl/src/misc/lv_style.h ****     LV_STYLE_OPA                    = 96,
 263:lvgl/src/misc/lv_style.h ****     LV_STYLE_OPA_LAYERED            = 97,
 264:lvgl/src/misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC       = 98,
 265:lvgl/src/misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA       = 99,
 266:lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM                   = 100,
 267:lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM_TIME              = 101,
 268:lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM_SPEED             = 102,
 269:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSITION             = 103,
 270:lvgl/src/misc/lv_style.h ****     LV_STYLE_BLEND_MODE             = 104,
 271:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH        = 105,
 272:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT       = 106,
 273:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSLATE_X            = 107,
 274:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSLATE_Y            = 108,
 275:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM         = 109,
 276:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE        = 110,
 277:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_PIVOT_X      = 111,
 278:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_PIVOT_Y      = 112,
 279:lvgl/src/misc/lv_style.h **** 
 280:lvgl/src/misc/lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 112,
 281:lvgl/src/misc/lv_style.h ****     _LV_STYLE_NUM_BUILT_IN_PROPS     = _LV_STYLE_LAST_BUILT_IN_PROP + 1,
 282:lvgl/src/misc/lv_style.h **** 
 283:lvgl/src/misc/lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF,
 284:lvgl/src/misc/lv_style.h ****     _LV_STYLE_PROP_CONST             = 0xFFFF /* magic value for const styles */
 285:lvgl/src/misc/lv_style.h **** } lv_style_prop_t;
 286:lvgl/src/misc/lv_style.h **** 
 287:lvgl/src/misc/lv_style.h **** enum {
 288:lvgl/src/misc/lv_style.h ****     LV_STYLE_RES_NOT_FOUND,
 289:lvgl/src/misc/lv_style.h ****     LV_STYLE_RES_FOUND,
 290:lvgl/src/misc/lv_style.h ****     LV_STYLE_RES_INHERIT
 291:lvgl/src/misc/lv_style.h **** };
 292:lvgl/src/misc/lv_style.h **** 
 293:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_style_res_t;
 294:lvgl/src/misc/lv_style.h **** 
 295:lvgl/src/misc/lv_style.h **** /**
 296:lvgl/src/misc/lv_style.h ****  * Descriptor for style transitions
 297:lvgl/src/misc/lv_style.h ****  */
 298:lvgl/src/misc/lv_style.h **** typedef struct {
 299:lvgl/src/misc/lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 300:lvgl/src/misc/lv_style.h **** #if LV_USE_USER_DATA
 301:lvgl/src/misc/lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 302:lvgl/src/misc/lv_style.h **** #endif
 303:lvgl/src/misc/lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 304:lvgl/src/misc/lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 305:lvgl/src/misc/lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 306:lvgl/src/misc/lv_style.h **** } lv_style_transition_dsc_t;
 307:lvgl/src/misc/lv_style.h **** 
 308:lvgl/src/misc/lv_style.h **** /**
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 47


 309:lvgl/src/misc/lv_style.h ****  * Descriptor of a constant style property.
 310:lvgl/src/misc/lv_style.h ****  */
 311:lvgl/src/misc/lv_style.h **** typedef struct {
 312:lvgl/src/misc/lv_style.h ****     lv_style_prop_t prop;
 313:lvgl/src/misc/lv_style.h ****     lv_style_value_t value;
 314:lvgl/src/misc/lv_style.h **** } lv_style_const_prop_t;
 315:lvgl/src/misc/lv_style.h **** 
 316:lvgl/src/misc/lv_style.h **** /**
 317:lvgl/src/misc/lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 318:lvgl/src/misc/lv_style.h ****  */
 319:lvgl/src/misc/lv_style.h **** typedef struct {
 320:lvgl/src/misc/lv_style.h **** 
 321:lvgl/src/misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
 322:lvgl/src/misc/lv_style.h ****     uint32_t sentinel;
 323:lvgl/src/misc/lv_style.h **** #endif
 324:lvgl/src/misc/lv_style.h **** 
 325:lvgl/src/misc/lv_style.h ****     /*If there is only one property store it directly.
 326:lvgl/src/misc/lv_style.h ****      *For more properties allocate an array*/
 327:lvgl/src/misc/lv_style.h ****     union {
 328:lvgl/src/misc/lv_style.h ****         lv_style_value_t value1;
 329:lvgl/src/misc/lv_style.h ****         uint8_t * values_and_props;
 330:lvgl/src/misc/lv_style.h ****         const lv_style_const_prop_t * const_props;
 331:lvgl/src/misc/lv_style.h ****     } v_p;
 332:lvgl/src/misc/lv_style.h **** 
 333:lvgl/src/misc/lv_style.h ****     uint16_t prop1;
 334:lvgl/src/misc/lv_style.h ****     uint8_t has_group;
 335:lvgl/src/misc/lv_style.h ****     uint8_t prop_cnt;
 336:lvgl/src/misc/lv_style.h **** } lv_style_t;
 337:lvgl/src/misc/lv_style.h **** 
 338:lvgl/src/misc/lv_style.h **** /**********************
 339:lvgl/src/misc/lv_style.h ****  * GLOBAL PROTOTYPES
 340:lvgl/src/misc/lv_style.h ****  **********************/
 341:lvgl/src/misc/lv_style.h **** 
 342:lvgl/src/misc/lv_style.h **** /**
 343:lvgl/src/misc/lv_style.h ****  * Initialize a style
 344:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style to initialize
 345:lvgl/src/misc/lv_style.h ****  * @note Do not call `lv_style_init` on styles that already have some properties
 346:lvgl/src/misc/lv_style.h ****  *       because this function won't free the used memory, just sets a default state for the style.
 347:lvgl/src/misc/lv_style.h ****  *       In other words be sure to initialize styles only once!
 348:lvgl/src/misc/lv_style.h ****  */
 349:lvgl/src/misc/lv_style.h **** void lv_style_init(lv_style_t * style);
 350:lvgl/src/misc/lv_style.h **** 
 351:lvgl/src/misc/lv_style.h **** /**
 352:lvgl/src/misc/lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 353:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 354:lvgl/src/misc/lv_style.h ****  */
 355:lvgl/src/misc/lv_style.h **** void lv_style_reset(lv_style_t * style);
 356:lvgl/src/misc/lv_style.h **** 
 357:lvgl/src/misc/lv_style.h **** /**
 358:lvgl/src/misc/lv_style.h ****  * Register a new style property for custom usage
 359:lvgl/src/misc/lv_style.h ****  * @return a new property ID, or LV_STYLE_PROP_INV if there are no more available.
 360:lvgl/src/misc/lv_style.h ****  * @example
 361:lvgl/src/misc/lv_style.h ****  * lv_style_prop_t MY_PROP;
 362:lvgl/src/misc/lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 363:lvgl/src/misc/lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 364:lvgl/src/misc/lv_style.h ****  *
 365:lvgl/src/misc/lv_style.h ****  * ...
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 48


 366:lvgl/src/misc/lv_style.h ****  * MY_PROP = lv_style_register_prop();
 367:lvgl/src/misc/lv_style.h ****  * ...
 368:lvgl/src/misc/lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 369:lvgl/src/misc/lv_style.h ****  */
 370:lvgl/src/misc/lv_style.h **** lv_style_prop_t lv_style_register_prop(uint8_t flag);
 371:lvgl/src/misc/lv_style.h **** 
 372:lvgl/src/misc/lv_style.h **** /**
 373:lvgl/src/misc/lv_style.h ****  * Get the number of custom properties that have been registered thus far.
 374:lvgl/src/misc/lv_style.h ****  */
 375:lvgl/src/misc/lv_style.h **** lv_style_prop_t lv_style_get_num_custom_props(void);
 376:lvgl/src/misc/lv_style.h **** 
 377:lvgl/src/misc/lv_style.h **** /**
 378:lvgl/src/misc/lv_style.h ****  * Remove a property from a style
 379:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 380:lvgl/src/misc/lv_style.h ****  * @param prop  a style property ORed with a state.
 381:lvgl/src/misc/lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 382:lvgl/src/misc/lv_style.h ****  */
 383:lvgl/src/misc/lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 384:lvgl/src/misc/lv_style.h **** 
 385:lvgl/src/misc/lv_style.h **** /**
 386:lvgl/src/misc/lv_style.h ****  * Set the value of property in a style.
 387:lvgl/src/misc/lv_style.h ****  * This function shouldn't be used directly by the user.
 388:lvgl/src/misc/lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 389:lvgl/src/misc/lv_style.h ****  * @param style pointer to style
 390:lvgl/src/misc/lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STYLE_BG_COLOR`)
 391:lvgl/src/misc/lv_style.h ****  * @param value `lv_style_value_t` variable in which a field is set according to the type of `prop`
 392:lvgl/src/misc/lv_style.h ****  */
 393:lvgl/src/misc/lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 394:lvgl/src/misc/lv_style.h **** 
 395:lvgl/src/misc/lv_style.h **** /**
 396:lvgl/src/misc/lv_style.h ****  * Set a special meta state for a property in a style.
 397:lvgl/src/misc/lv_style.h ****  * This function shouldn't be used directly by the user.
 398:lvgl/src/misc/lv_style.h ****  * @param style pointer to style
 399:lvgl/src/misc/lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STYLE_BG_COLOR`)
 400:lvgl/src/misc/lv_style.h ****  * @param meta the meta value to attach to the property in the style
 401:lvgl/src/misc/lv_style.h ****  */
 402:lvgl/src/misc/lv_style.h **** void lv_style_set_prop_meta(lv_style_t * style, lv_style_prop_t prop, uint16_t meta);
 403:lvgl/src/misc/lv_style.h **** 
 404:lvgl/src/misc/lv_style.h **** /**
 405:lvgl/src/misc/lv_style.h ****  * Get the value of a property
 406:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 407:lvgl/src/misc/lv_style.h ****  * @param prop  the ID of a property
 408:lvgl/src/misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 409:lvgl/src/misc/lv_style.h ****  * @return LV_RES_INV: the property wasn't found in the style (`value` is unchanged)
 410:lvgl/src/misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 411:lvgl/src/misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 412:lvgl/src/misc/lv_style.h ****  */
 413:lvgl/src/misc/lv_style.h **** lv_style_res_t lv_style_get_prop(const lv_style_t * style, lv_style_prop_t prop, lv_style_value_t *
 414:lvgl/src/misc/lv_style.h **** 
 415:lvgl/src/misc/lv_style.h **** /**
 416:lvgl/src/misc/lv_style.h ****  * Initialize a transition descriptor.
 417:lvgl/src/misc/lv_style.h ****  * @param tr        pointer to a transition descriptor to initialize
 418:lvgl/src/misc/lv_style.h ****  * @param props     an array with the properties to transition. The last element must be zero.
 419:lvgl/src/misc/lv_style.h ****  * @param path_cb   an animation path (ease) callback. If `NULL` liner path will be used.
 420:lvgl/src/misc/lv_style.h ****  * @param time      duration of the transition in [ms]
 421:lvgl/src/misc/lv_style.h ****  * @param delay     delay before the transition in [ms]
 422:lvgl/src/misc/lv_style.h ****  * @param user_data any custom data that will be saved in the transition animation and will be avai
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 49


 423:lvgl/src/misc/lv_style.h ****  * @example
 424:lvgl/src/misc/lv_style.h ****  * const static lv_style_prop_t trans_props[] = { LV_STYLE_BG_OPA, LV_STYLE_BG_COLOR, 0 };
 425:lvgl/src/misc/lv_style.h ****  *  static lv_style_transition_dsc_t trans1;
 426:lvgl/src/misc/lv_style.h ****  *  lv_style_transition_dsc_init(&trans1, trans_props, NULL, 300, 0, NULL);
 427:lvgl/src/misc/lv_style.h ****  */
 428:lvgl/src/misc/lv_style.h **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[],
 429:lvgl/src/misc/lv_style.h ****                                   lv_anim_path_cb_t path_cb, uint32_t time, uint32_t delay, void * 
 430:lvgl/src/misc/lv_style.h **** 
 431:lvgl/src/misc/lv_style.h **** /**
 432:lvgl/src/misc/lv_style.h ****  * Get the default value of a property
 433:lvgl/src/misc/lv_style.h ****  * @param prop the ID of a property
 434:lvgl/src/misc/lv_style.h ****  * @return the default value
 435:lvgl/src/misc/lv_style.h ****  */
 436:lvgl/src/misc/lv_style.h **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop);
 437:lvgl/src/misc/lv_style.h **** 
 438:lvgl/src/misc/lv_style.h **** /**
 439:lvgl/src/misc/lv_style.h ****  * Get the value of a property
 440:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 441:lvgl/src/misc/lv_style.h ****  * @param prop  the ID of a property
 442:lvgl/src/misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 443:lvgl/src/misc/lv_style.h ****  * @return LV_RES_INV: the property wasn't found in the style (`value` is unchanged)
 444:lvgl/src/misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 445:lvgl/src/misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 446:lvgl/src/misc/lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 447:lvgl/src/misc/lv_style.h ****  */
 448:lvgl/src/misc/lv_style.h **** static inline lv_style_res_t lv_style_get_prop_inlined(const lv_style_t * style, lv_style_prop_t pr
 449:lvgl/src/misc/lv_style.h ****                                                        lv_style_value_t * value)
 450:lvgl/src/misc/lv_style.h **** {
 970              		.loc 3 450 1 view -0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              		.loc 3 450 1 is_stmt 0 view .LVU269
 975 0000 38B5     		push	{r3, r4, r5, lr}
 976              	.LCFI6:
 977              		.cfi_def_cfa_offset 16
 978              		.cfi_offset 3, -16
 979              		.cfi_offset 4, -12
 980              		.cfi_offset 5, -8
 981              		.cfi_offset 14, -4
 982 0002 8446     		mov	ip, r0
 983 0004 1446     		mov	r4, r2
 451:lvgl/src/misc/lv_style.h ****     if(style->prop1 == LV_STYLE_PROP_ANY) {
 984              		.loc 3 451 5 is_stmt 1 view .LVU270
 985              		.loc 3 451 13 is_stmt 0 view .LVU271
 986 0006 8388     		ldrh	r3, [r0, #4]
 987              		.loc 3 451 7 view .LVU272
 988 0008 4FF6FF72 		movw	r2, #65535
 989              	.LVL77:
 990              		.loc 3 451 7 view .LVU273
 991 000c 9342     		cmp	r3, r2
 992 000e 19D0     		beq	.L111
 452:lvgl/src/misc/lv_style.h ****         const lv_style_const_prop_t * const_prop;
 453:lvgl/src/misc/lv_style.h ****         uint32_t i;
 454:lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 455:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 456:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(const_prop->prop);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 50


 457:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 458:lvgl/src/misc/lv_style.h ****                 if(const_prop->prop & LV_STYLE_PROP_META_INHERIT)
 459:lvgl/src/misc/lv_style.h ****                     return LV_STYLE_RES_INHERIT;
 460:lvgl/src/misc/lv_style.h ****                 *value = (const_prop->prop & LV_STYLE_PROP_META_INITIAL) ? lv_style_prop_get_defaul
 461:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 462:lvgl/src/misc/lv_style.h ****             }
 463:lvgl/src/misc/lv_style.h ****         }
 464:lvgl/src/misc/lv_style.h ****         return LV_STYLE_RES_NOT_FOUND;
 465:lvgl/src/misc/lv_style.h ****     }
 466:lvgl/src/misc/lv_style.h **** 
 467:lvgl/src/misc/lv_style.h ****     if(style->prop_cnt == 0) return LV_STYLE_RES_NOT_FOUND;
 993              		.loc 3 467 5 is_stmt 1 view .LVU274
 994              		.loc 3 467 13 is_stmt 0 view .LVU275
 995 0010 C079     		ldrb	r0, [r0, #7]	@ zero_extendqisi2
 996              	.LVL78:
 997              		.loc 3 467 7 view .LVU276
 998 0012 48B3     		cbz	r0, .L92
 468:lvgl/src/misc/lv_style.h **** 
 469:lvgl/src/misc/lv_style.h ****     if(style->prop_cnt > 1) {
 999              		.loc 3 469 5 is_stmt 1 view .LVU277
 1000              		.loc 3 469 7 is_stmt 0 view .LVU278
 1001 0014 0128     		cmp	r0, #1
 1002 0016 42D9     		bls	.L96
 1003              	.LBB30:
 470:lvgl/src/misc/lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1004              		.loc 3 470 9 is_stmt 1 view .LVU279
 1005              		.loc 3 470 35 is_stmt 0 view .LVU280
 1006 0018 DCF80050 		ldr	r5, [ip]
 1007              		.loc 3 470 60 view .LVU281
 1008 001c 8646     		mov	lr, r0
 1009              		.loc 3 470 19 view .LVU282
 1010 001e 05EB800C 		add	ip, r5, r0, lsl #2
 1011              	.LVL79:
 471:lvgl/src/misc/lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
 1012              		.loc 3 471 9 is_stmt 1 view .LVU283
 472:lvgl/src/misc/lv_style.h ****         uint32_t i;
 1013              		.loc 3 472 9 view .LVU284
 473:lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
 1014              		.loc 3 473 9 view .LVU285
 1015              		.loc 3 473 15 is_stmt 0 view .LVU286
 1016 0022 0023     		movs	r3, #0
 1017              		.loc 3 473 9 view .LVU287
 1018 0024 26E0     		b	.L97
 1019              	.LVL80:
 1020              	.L113:
 1021              		.loc 3 473 9 view .LVU288
 1022              	.LBE30:
 1023              	.LBB35:
 1024              	.LBB36:
 458:lvgl/src/misc/lv_style.h ****                     return LV_STYLE_RES_INHERIT;
 1025              		.loc 3 458 17 is_stmt 1 view .LVU289
 458:lvgl/src/misc/lv_style.h ****                     return LV_STYLE_RES_INHERIT;
 1026              		.loc 3 458 19 is_stmt 0 view .LVU290
 1027 0026 12F4004F 		tst	r2, #32768
 1028 002a 4DD1     		bne	.L105
 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1029              		.loc 3 460 17 is_stmt 1 view .LVU291
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 51


 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1030              		.loc 3 460 111 is_stmt 0 view .LVU292
 1031 002c 12F4804F 		tst	r2, #16384
 1032 0030 04D0     		beq	.L93
 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1033              		.loc 3 460 76 discriminator 1 view .LVU293
 1034 0032 FFF7FEFF 		bl	lv_style_prop_get_default
 1035              	.LVL81:
 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1036              		.loc 3 460 76 discriminator 1 view .LVU294
 1037 0036 2060     		str	r0, [r4]
 1038              	.L94:
 461:lvgl/src/misc/lv_style.h ****             }
 1039              		.loc 3 461 17 is_stmt 1 view .LVU295
 461:lvgl/src/misc/lv_style.h ****             }
 1040              		.loc 3 461 24 is_stmt 0 view .LVU296
 1041 0038 0120     		movs	r0, #1
 1042 003a 15E0     		b	.L92
 1043              	.LVL82:
 1044              	.L93:
 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1045              		.loc 3 460 24 discriminator 2 view .LVU297
 1046 003c DEF80430 		ldr	r3, [lr, #4]
 1047              	.LVL83:
 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1048              		.loc 3 460 24 discriminator 2 view .LVU298
 1049 0040 2360     		str	r3, [r4]
 1050 0042 F9E7     		b	.L94
 1051              	.LVL84:
 1052              	.L111:
 460:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 1053              		.loc 3 460 24 discriminator 2 view .LVU299
 1054              	.LBE36:
 454:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 1055              		.loc 3 454 15 view .LVU300
 1056 0044 0023     		movs	r3, #0
 1057              	.LVL85:
 1058              	.L89:
 454:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 1059              		.loc 3 454 22 is_stmt 1 discriminator 1 view .LVU301
 454:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 1060              		.loc 3 454 29 is_stmt 0 discriminator 1 view .LVU302
 1061 0046 9CF80720 		ldrb	r2, [ip, #7]	@ zero_extendqisi2
 454:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 1062              		.loc 3 454 22 discriminator 1 view .LVU303
 1063 004a 9A42     		cmp	r2, r3
 1064 004c 0BD9     		bls	.L112
 1065              	.LBB37:
 455:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(const_prop->prop);
 1066              		.loc 3 455 13 is_stmt 1 view .LVU304
 455:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(const_prop->prop);
 1067              		.loc 3 455 36 is_stmt 0 view .LVU305
 1068 004e DCF80000 		ldr	r0, [ip]
 455:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(const_prop->prop);
 1069              		.loc 3 455 24 view .LVU306
 1070 0052 00EBC30E 		add	lr, r0, r3, lsl #3
 1071              	.LVL86:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 52


 456:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 1072              		.loc 3 456 13 is_stmt 1 view .LVU307
 456:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 1073              		.loc 3 456 39 is_stmt 0 view .LVU308
 1074 0056 30F83320 		ldrh	r2, [r0, r3, lsl #3]
 456:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 1075              		.loc 3 456 29 view .LVU309
 1076 005a C2F30D00 		ubfx	r0, r2, #0, #14
 1077              	.LVL87:
 457:lvgl/src/misc/lv_style.h ****                 if(const_prop->prop & LV_STYLE_PROP_META_INHERIT)
 1078              		.loc 3 457 13 is_stmt 1 view .LVU310
 457:lvgl/src/misc/lv_style.h ****                 if(const_prop->prop & LV_STYLE_PROP_META_INHERIT)
 1079              		.loc 3 457 15 is_stmt 0 view .LVU311
 1080 005e 8142     		cmp	r1, r0
 1081 0060 E1D0     		beq	.L113
 1082              	.LBE37:
 454:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 1083              		.loc 3 454 42 is_stmt 1 discriminator 2 view .LVU312
 1084 0062 0133     		adds	r3, r3, #1
 1085              	.LVL88:
 454:lvgl/src/misc/lv_style.h ****             const_prop = style->v_p.const_props + i;
 1086              		.loc 3 454 42 is_stmt 0 discriminator 2 view .LVU313
 1087 0064 EFE7     		b	.L89
 1088              	.LVL89:
 1089              	.L112:
 464:lvgl/src/misc/lv_style.h ****     }
 1090              		.loc 3 464 16 view .LVU314
 1091 0066 0020     		movs	r0, #0
 1092              	.LVL90:
 1093              	.L92:
 464:lvgl/src/misc/lv_style.h ****     }
 1094              		.loc 3 464 16 view .LVU315
 1095              	.LBE35:
 474:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(props[i]);
 475:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 476:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INHERIT)
 477:lvgl/src/misc/lv_style.h ****                     return LV_STYLE_RES_INHERIT;
 478:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INITIAL)
 479:lvgl/src/misc/lv_style.h ****                     *value = lv_style_prop_get_default(prop_id);
 480:lvgl/src/misc/lv_style.h ****                 else {
 481:lvgl/src/misc/lv_style.h ****                     lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 482:lvgl/src/misc/lv_style.h ****                     *value = values[i];
 483:lvgl/src/misc/lv_style.h ****                 }
 484:lvgl/src/misc/lv_style.h ****                 return LV_STYLE_RES_FOUND;
 485:lvgl/src/misc/lv_style.h ****             }
 486:lvgl/src/misc/lv_style.h ****         }
 487:lvgl/src/misc/lv_style.h ****     }
 488:lvgl/src/misc/lv_style.h ****     else if(LV_STYLE_PROP_ID_MASK(style->prop1) == prop) {
 489:lvgl/src/misc/lv_style.h ****         if(style->prop1 & LV_STYLE_PROP_META_INHERIT)
 490:lvgl/src/misc/lv_style.h ****             return LV_STYLE_RES_INHERIT;
 491:lvgl/src/misc/lv_style.h ****         *value = (style->prop1 & LV_STYLE_PROP_META_INITIAL) ? lv_style_prop_get_default(LV_STYLE_P
 492:lvgl/src/misc/lv_style.h ****                                                                                              style-
 493:lvgl/src/misc/lv_style.h ****         return LV_STYLE_RES_FOUND;
 494:lvgl/src/misc/lv_style.h ****     }
 495:lvgl/src/misc/lv_style.h ****     return LV_STYLE_RES_NOT_FOUND;
 496:lvgl/src/misc/lv_style.h **** }
 1096              		.loc 3 496 1 view .LVU316
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 53


 1097 0068 38BD     		pop	{r3, r4, r5, pc}
 1098              	.LVL91:
 1099              	.L99:
 1100              	.LBB39:
 1101              	.LBB31:
 1102              	.LBB32:
 481:lvgl/src/misc/lv_style.h ****                     *value = values[i];
 1103              		.loc 3 481 21 is_stmt 1 view .LVU317
 482:lvgl/src/misc/lv_style.h ****                 }
 1104              		.loc 3 482 21 view .LVU318
 482:lvgl/src/misc/lv_style.h ****                 }
 1105              		.loc 3 482 28 is_stmt 0 view .LVU319
 1106 006a 55F82330 		ldr	r3, [r5, r3, lsl #2]
 1107              	.LVL92:
 482:lvgl/src/misc/lv_style.h ****                 }
 1108              		.loc 3 482 28 view .LVU320
 1109 006e 2360     		str	r3, [r4]
 1110 0070 11E0     		b	.L100
 1111              	.LVL93:
 1112              	.L98:
 482:lvgl/src/misc/lv_style.h ****                 }
 1113              		.loc 3 482 28 view .LVU321
 1114              	.LBE32:
 1115              	.LBE31:
 473:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(props[i]);
 1116              		.loc 3 473 42 is_stmt 1 discriminator 2 view .LVU322
 1117 0072 0133     		adds	r3, r3, #1
 1118              	.LVL94:
 1119              	.L97:
 473:lvgl/src/misc/lv_style.h ****             lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(props[i]);
 1120              		.loc 3 473 22 discriminator 1 view .LVU323
 1121 0074 9E45     		cmp	lr, r3
 1122 0076 10D9     		bls	.L114
 1123              	.LBB33:
 474:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 1124              		.loc 3 474 13 view .LVU324
 474:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 1125              		.loc 3 474 39 is_stmt 0 view .LVU325
 1126 0078 3CF81320 		ldrh	r2, [ip, r3, lsl #1]
 474:lvgl/src/misc/lv_style.h ****             if(prop_id == prop) {
 1127              		.loc 3 474 29 view .LVU326
 1128 007c C2F30D00 		ubfx	r0, r2, #0, #14
 1129              	.LVL95:
 475:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INHERIT)
 1130              		.loc 3 475 13 is_stmt 1 view .LVU327
 475:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INHERIT)
 1131              		.loc 3 475 15 is_stmt 0 view .LVU328
 1132 0080 8142     		cmp	r1, r0
 1133 0082 F6D1     		bne	.L98
 476:lvgl/src/misc/lv_style.h ****                     return LV_STYLE_RES_INHERIT;
 1134              		.loc 3 476 17 is_stmt 1 view .LVU329
 476:lvgl/src/misc/lv_style.h ****                     return LV_STYLE_RES_INHERIT;
 1135              		.loc 3 476 19 is_stmt 0 view .LVU330
 1136 0084 12F4004F 		tst	r2, #32768
 1137 0088 20D1     		bne	.L106
 478:lvgl/src/misc/lv_style.h ****                     *value = lv_style_prop_get_default(prop_id);
 1138              		.loc 3 478 17 is_stmt 1 view .LVU331
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 54


 478:lvgl/src/misc/lv_style.h ****                     *value = lv_style_prop_get_default(prop_id);
 1139              		.loc 3 478 19 is_stmt 0 view .LVU332
 1140 008a 12F4804F 		tst	r2, #16384
 1141 008e ECD0     		beq	.L99
 479:lvgl/src/misc/lv_style.h ****                 else {
 1142              		.loc 3 479 21 is_stmt 1 view .LVU333
 479:lvgl/src/misc/lv_style.h ****                 else {
 1143              		.loc 3 479 30 is_stmt 0 view .LVU334
 1144 0090 FFF7FEFF 		bl	lv_style_prop_get_default
 1145              	.LVL96:
 479:lvgl/src/misc/lv_style.h ****                 else {
 1146              		.loc 3 479 30 view .LVU335
 1147 0094 2060     		str	r0, [r4]
 1148              	.L100:
 484:lvgl/src/misc/lv_style.h ****             }
 1149              		.loc 3 484 17 is_stmt 1 view .LVU336
 484:lvgl/src/misc/lv_style.h ****             }
 1150              		.loc 3 484 24 is_stmt 0 view .LVU337
 1151 0096 0120     		movs	r0, #1
 1152 0098 E6E7     		b	.L92
 1153              	.LVL97:
 1154              	.L114:
 484:lvgl/src/misc/lv_style.h ****             }
 1155              		.loc 3 484 24 view .LVU338
 1156              	.LBE33:
 1157              	.LBE39:
 495:lvgl/src/misc/lv_style.h **** }
 1158              		.loc 3 495 12 view .LVU339
 1159 009a 0020     		movs	r0, #0
 1160 009c E4E7     		b	.L92
 1161              	.LVL98:
 1162              	.L96:
 488:lvgl/src/misc/lv_style.h ****         if(style->prop1 & LV_STYLE_PROP_META_INHERIT)
 1163              		.loc 3 488 10 is_stmt 1 view .LVU340
 1164 009e C3F30D00 		ubfx	r0, r3, #0, #14
 488:lvgl/src/misc/lv_style.h ****         if(style->prop1 & LV_STYLE_PROP_META_INHERIT)
 1165              		.loc 3 488 12 is_stmt 0 view .LVU341
 1166 00a2 8142     		cmp	r1, r0
 1167 00a4 01D0     		beq	.L115
 495:lvgl/src/misc/lv_style.h **** }
 1168              		.loc 3 495 12 view .LVU342
 1169 00a6 0020     		movs	r0, #0
 1170 00a8 DEE7     		b	.L92
 1171              	.L115:
 489:lvgl/src/misc/lv_style.h ****             return LV_STYLE_RES_INHERIT;
 1172              		.loc 3 489 9 is_stmt 1 view .LVU343
 489:lvgl/src/misc/lv_style.h ****             return LV_STYLE_RES_INHERIT;
 1173              		.loc 3 489 11 is_stmt 0 view .LVU344
 1174 00aa 13F4004F 		tst	r3, #32768
 1175 00ae 0FD1     		bne	.L108
 491:lvgl/src/misc/lv_style.h ****                                                                                              style-
 1176              		.loc 3 491 9 is_stmt 1 view .LVU345
 492:lvgl/src/misc/lv_style.h ****         return LV_STYLE_RES_FOUND;
 1177              		.loc 3 492 109 is_stmt 0 view .LVU346
 1178 00b0 13F4804F 		tst	r3, #16384
 1179 00b4 04D0     		beq	.L102
 491:lvgl/src/misc/lv_style.h ****                                                                                              style-
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 55


 1180              		.loc 3 491 64 view .LVU347
 1181 00b6 FFF7FEFF 		bl	lv_style_prop_get_default
 1182              	.LVL99:
 491:lvgl/src/misc/lv_style.h ****                                                                                              style-
 1183              		.loc 3 491 64 view .LVU348
 1184 00ba 2060     		str	r0, [r4]
 1185              	.L103:
 493:lvgl/src/misc/lv_style.h ****     }
 1186              		.loc 3 493 9 is_stmt 1 view .LVU349
 493:lvgl/src/misc/lv_style.h ****     }
 1187              		.loc 3 493 16 is_stmt 0 view .LVU350
 1188 00bc 0120     		movs	r0, #1
 1189 00be D3E7     		b	.L92
 1190              	.LVL100:
 1191              	.L102:
 491:lvgl/src/misc/lv_style.h ****                                                                                              style-
 1192              		.loc 3 491 16 view .LVU351
 1193 00c0 DCF80030 		ldr	r3, [ip]
 1194 00c4 2360     		str	r3, [r4]
 1195 00c6 F9E7     		b	.L103
 1196              	.LVL101:
 1197              	.L105:
 1198              	.LBB40:
 1199              	.LBB38:
 459:lvgl/src/misc/lv_style.h ****                 *value = (const_prop->prop & LV_STYLE_PROP_META_INITIAL) ? lv_style_prop_get_defaul
 1200              		.loc 3 459 28 view .LVU352
 1201 00c8 0220     		movs	r0, #2
 1202              	.LVL102:
 459:lvgl/src/misc/lv_style.h ****                 *value = (const_prop->prop & LV_STYLE_PROP_META_INITIAL) ? lv_style_prop_get_defaul
 1203              		.loc 3 459 28 view .LVU353
 1204 00ca CDE7     		b	.L92
 1205              	.LVL103:
 1206              	.L106:
 459:lvgl/src/misc/lv_style.h ****                 *value = (const_prop->prop & LV_STYLE_PROP_META_INITIAL) ? lv_style_prop_get_defaul
 1207              		.loc 3 459 28 view .LVU354
 1208              	.LBE38:
 1209              	.LBE40:
 1210              	.LBB41:
 1211              	.LBB34:
 477:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INITIAL)
 1212              		.loc 3 477 28 view .LVU355
 1213 00cc 0220     		movs	r0, #2
 1214              	.LVL104:
 477:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INITIAL)
 1215              		.loc 3 477 28 view .LVU356
 1216 00ce CBE7     		b	.L92
 1217              	.LVL105:
 1218              	.L108:
 477:lvgl/src/misc/lv_style.h ****                 if(props[i] & LV_STYLE_PROP_META_INITIAL)
 1219              		.loc 3 477 28 view .LVU357
 1220              	.LBE34:
 1221              	.LBE41:
 490:lvgl/src/misc/lv_style.h ****         *value = (style->prop1 & LV_STYLE_PROP_META_INITIAL) ? lv_style_prop_get_default(LV_STYLE_P
 1222              		.loc 3 490 20 view .LVU358
 1223 00d0 0220     		movs	r0, #2
 1224 00d2 C9E7     		b	.L92
 1225              		.cfi_endproc
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 56


 1226              	.LFE47:
 1228              		.section	.text.lv_style_get_prop,"ax",%progbits
 1229              		.align	1
 1230              		.global	lv_style_get_prop
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	lv_style_get_prop:
 1236              	.LVL106:
 1237              	.LFB63:
 294:lvgl/src/misc/lv_style.c ****     return lv_style_get_prop_inlined(style, prop, value);
 1238              		.loc 1 294 1 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 0
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 294:lvgl/src/misc/lv_style.c ****     return lv_style_get_prop_inlined(style, prop, value);
 1242              		.loc 1 294 1 is_stmt 0 view .LVU360
 1243 0000 08B5     		push	{r3, lr}
 1244              	.LCFI7:
 1245              		.cfi_def_cfa_offset 8
 1246              		.cfi_offset 3, -8
 1247              		.cfi_offset 14, -4
 295:lvgl/src/misc/lv_style.c **** }
 1248              		.loc 1 295 5 is_stmt 1 view .LVU361
 295:lvgl/src/misc/lv_style.c **** }
 1249              		.loc 1 295 12 is_stmt 0 view .LVU362
 1250 0002 FFF7FEFF 		bl	lv_style_get_prop_inlined
 1251              	.LVL107:
 296:lvgl/src/misc/lv_style.c **** 
 1252              		.loc 1 296 1 view .LVU363
 1253 0006 08BD     		pop	{r3, pc}
 1254              		.cfi_endproc
 1255              	.LFE63:
 1257              		.section	.text.lv_style_is_empty,"ax",%progbits
 1258              		.align	1
 1259              		.global	lv_style_is_empty
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	lv_style_is_empty:
 1265              	.LVL108:
 1266              	.LFB66:
 368:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1267              		.loc 1 368 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271              		@ link register save eliminated.
 369:lvgl/src/misc/lv_style.c **** 
 1272              		.loc 1 369 5 view .LVU365
 369:lvgl/src/misc/lv_style.c **** 
 1273              		.loc 1 369 5 view .LVU366
 369:lvgl/src/misc/lv_style.c **** 
 1274              		.loc 1 369 5 view .LVU367
 371:lvgl/src/misc/lv_style.c **** }
 1275              		.loc 1 371 5 view .LVU368
 371:lvgl/src/misc/lv_style.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 57


 1276              		.loc 1 371 17 is_stmt 0 view .LVU369
 1277 0000 C079     		ldrb	r0, [r0, #7]	@ zero_extendqisi2
 1278              	.LVL109:
 372:lvgl/src/misc/lv_style.c **** 
 1279              		.loc 1 372 1 view .LVU370
 1280 0002 B0FA80F0 		clz	r0, r0
 1281 0006 4009     		lsrs	r0, r0, #5
 1282 0008 7047     		bx	lr
 1283              		.cfi_endproc
 1284              	.LFE66:
 1286              		.section	.text._lv_style_get_prop_group,"ax",%progbits
 1287              		.align	1
 1288              		.global	_lv_style_get_prop_group
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1293              	_lv_style_get_prop_group:
 1294              	.LVL110:
 1295              	.LFB67:
 375:lvgl/src/misc/lv_style.c ****     uint16_t group = (prop & 0x1FF) >> 4;
 1296              		.loc 1 375 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 1300              		@ link register save eliminated.
 376:lvgl/src/misc/lv_style.c ****     if(group > 7) group = 7;    /*The MSB marks all the custom properties*/
 1301              		.loc 1 376 5 view .LVU372
 376:lvgl/src/misc/lv_style.c ****     if(group > 7) group = 7;    /*The MSB marks all the custom properties*/
 1302              		.loc 1 376 37 is_stmt 0 view .LVU373
 1303 0000 0309     		lsrs	r3, r0, #4
 376:lvgl/src/misc/lv_style.c ****     if(group > 7) group = 7;    /*The MSB marks all the custom properties*/
 1304              		.loc 1 376 14 view .LVU374
 1305 0002 C0F30410 		ubfx	r0, r0, #4, #5
 1306              	.LVL111:
 377:lvgl/src/misc/lv_style.c ****     return (uint8_t)group;
 1307              		.loc 1 377 5 is_stmt 1 view .LVU375
 377:lvgl/src/misc/lv_style.c ****     return (uint8_t)group;
 1308              		.loc 1 377 7 is_stmt 0 view .LVU376
 1309 0006 13F0180F 		tst	r3, #24
 1310 000a 00D0     		beq	.L120
 377:lvgl/src/misc/lv_style.c ****     return (uint8_t)group;
 1311              		.loc 1 377 25 view .LVU377
 1312 000c 0720     		movs	r0, #7
 1313              	.LVL112:
 1314              	.L120:
 378:lvgl/src/misc/lv_style.c **** }
 1315              		.loc 1 378 5 is_stmt 1 view .LVU378
 379:lvgl/src/misc/lv_style.c **** 
 1316              		.loc 1 379 1 is_stmt 0 view .LVU379
 1317 000e 7047     		bx	lr
 1318              		.cfi_endproc
 1319              	.LFE67:
 1321              		.section	.text.lv_style_set_prop_internal,"ax",%progbits
 1322              		.align	1
 1323              		.syntax unified
 1324              		.thumb
 1325              		.thumb_func
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 58


 1327              	lv_style_set_prop_internal:
 1328              	.LVL113:
 1329              	.LFB71:
 414:lvgl/src/misc/lv_style.c **** 
 415:lvgl/src/misc/lv_style.c **** static void lv_style_set_prop_internal(lv_style_t * style, lv_style_prop_t prop_and_meta, lv_style_
 416:lvgl/src/misc/lv_style.c ****                                        void (*value_adjustment_helper)(lv_style_prop_t, lv_style_va
 417:lvgl/src/misc/lv_style.c **** {
 1330              		.loc 1 417 1 is_stmt 1 view -0
 1331              		.cfi_startproc
 1332              		@ args = 0, pretend = 0, frame = 0
 1333              		@ frame_needed = 0, uses_anonymous_args = 0
 1334              		.loc 1 417 1 is_stmt 0 view .LVU381
 1335 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1336              	.LCFI8:
 1337              		.cfi_def_cfa_offset 24
 1338              		.cfi_offset 4, -24
 1339              		.cfi_offset 5, -20
 1340              		.cfi_offset 6, -16
 1341              		.cfi_offset 7, -12
 1342              		.cfi_offset 8, -8
 1343              		.cfi_offset 14, -4
 1344 0004 9046     		mov	r8, r2
 1345              	.LVL114:
 1346              		.loc 1 417 1 view .LVU382
 1347 0006 1F46     		mov	r7, r3
 418:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1348              		.loc 1 418 5 is_stmt 1 view .LVU383
 1349              		.loc 1 418 5 view .LVU384
 1350              		.loc 1 418 5 view .LVU385
 419:lvgl/src/misc/lv_style.c **** 
 420:lvgl/src/misc/lv_style.c ****     if(style->prop1 == LV_STYLE_PROP_ANY) {
 1351              		.loc 1 420 5 view .LVU386
 1352              		.loc 1 420 13 is_stmt 0 view .LVU387
 1353 0008 8288     		ldrh	r2, [r0, #4]
 1354              		.loc 1 420 7 view .LVU388
 1355 000a 4FF6FF73 		movw	r3, #65535
 1356              	.LVL115:
 1357              		.loc 1 420 7 view .LVU389
 1358 000e 9A42     		cmp	r2, r3
 1359 0010 5AD0     		beq	.L122
 1360 0012 0446     		mov	r4, r0
 1361 0014 0E46     		mov	r6, r1
 421:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 422:lvgl/src/misc/lv_style.c ****         return;
 423:lvgl/src/misc/lv_style.c ****     }
 424:lvgl/src/misc/lv_style.c **** 
 425:lvgl/src/misc/lv_style.c ****     lv_style_prop_t prop_id = LV_STYLE_PROP_ID_MASK(prop_and_meta);
 1362              		.loc 1 425 5 is_stmt 1 view .LVU390
 1363              		.loc 1 425 21 is_stmt 0 view .LVU391
 1364 0016 C1F30D05 		ubfx	r5, r1, #0, #14
 1365              	.LVL116:
 426:lvgl/src/misc/lv_style.c **** 
 427:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt > 1) {
 1366              		.loc 1 427 5 is_stmt 1 view .LVU392
 1367              		.loc 1 427 13 is_stmt 0 view .LVU393
 1368 001a C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 1369              		.loc 1 427 7 view .LVU394
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 59


 1370 001c 012B     		cmp	r3, #1
 1371 001e 42D9     		bls	.L124
 1372              	.LBB42:
 428:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1373              		.loc 1 428 9 is_stmt 1 view .LVU395
 1374              		.loc 1 428 35 is_stmt 0 view .LVU396
 1375 0020 0068     		ldr	r0, [r0]
 1376              	.LVL117:
 1377              		.loc 1 428 19 view .LVU397
 1378 0022 00EB8301 		add	r1, r0, r3, lsl #2
 1379              	.LVL118:
 429:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1380              		.loc 1 429 9 is_stmt 1 view .LVU398
 430:lvgl/src/misc/lv_style.c ****         int32_t i;
 1381              		.loc 1 430 9 view .LVU399
 431:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 1382              		.loc 1 431 9 view .LVU400
 1383              		.loc 1 431 15 is_stmt 0 view .LVU401
 1384 0026 03F1FF3C 		add	ip, r3, #-1
 1385              	.LVL119:
 1386              	.L125:
 1387              		.loc 1 431 40 is_stmt 1 discriminator 1 view .LVU402
 1388 002a BCF1000F 		cmp	ip, #0
 1389 002e 10DB     		blt	.L135
 432:lvgl/src/misc/lv_style.c ****             if(LV_STYLE_PROP_ID_MASK(props[i]) == prop_id) {
 1390              		.loc 1 432 13 view .LVU403
 1391              		.loc 1 432 16 is_stmt 0 view .LVU404
 1392 0030 01EB4C02 		add	r2, r1, ip, lsl #1
 1393 0034 31F81CE0 		ldrh	lr, [r1, ip, lsl #1]
 1394              		.loc 1 432 15 view .LVU405
 1395 0038 CEF30D0E 		ubfx	lr, lr, #0, #14
 1396 003c 7545     		cmp	r5, lr
 1397 003e 02D0     		beq	.L136
 431:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 1398              		.loc 1 431 47 is_stmt 1 discriminator 2 view .LVU406
 1399 0040 0CF1FF3C 		add	ip, ip, #-1
 1400              	.LVL120:
 431:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 1401              		.loc 1 431 47 is_stmt 0 discriminator 2 view .LVU407
 1402 0044 F1E7     		b	.L125
 1403              	.L136:
 1404              	.LBB43:
 433:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1405              		.loc 1 433 17 is_stmt 1 view .LVU408
 1406              	.LVL121:
 434:lvgl/src/misc/lv_style.c ****                 value_adjustment_helper(prop_and_meta, value, &props[i], &values[i]);
 1407              		.loc 1 434 17 view .LVU409
 1408 0046 00EB8C03 		add	r3, r0, ip, lsl #2
 1409              	.LVL122:
 1410              		.loc 1 434 17 is_stmt 0 view .LVU410
 1411 004a 4146     		mov	r1, r8
 1412              	.LVL123:
 1413              		.loc 1 434 17 view .LVU411
 1414 004c 3046     		mov	r0, r6
 1415              	.LVL124:
 1416              		.loc 1 434 17 view .LVU412
 1417 004e B847     		blx	r7
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 60


 1418              	.LVL125:
 435:lvgl/src/misc/lv_style.c ****                 return;
 1419              		.loc 1 435 17 is_stmt 1 view .LVU413
 1420 0050 3AE0     		b	.L122
 1421              	.LVL126:
 1422              	.L135:
 1423              		.loc 1 435 17 is_stmt 0 view .LVU414
 1424              	.LBE43:
 436:lvgl/src/misc/lv_style.c ****             }
 437:lvgl/src/misc/lv_style.c ****         }
 438:lvgl/src/misc/lv_style.c **** 
 439:lvgl/src/misc/lv_style.c ****         size_t size = (style->prop_cnt + 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t));
 1425              		.loc 1 439 9 is_stmt 1 view .LVU415
 1426              		.loc 1 439 40 is_stmt 0 view .LVU416
 1427 0052 591C     		adds	r1, r3, #1
 1428              	.LVL127:
 1429              		.loc 1 439 16 view .LVU417
 1430 0054 01EB4101 		add	r1, r1, r1, lsl #1
 1431              	.LVL128:
 440:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1432              		.loc 1 440 9 is_stmt 1 view .LVU418
 1433              		.loc 1 440 38 is_stmt 0 view .LVU419
 1434 0058 4900     		lsls	r1, r1, #1
 1435              	.LVL129:
 1436              		.loc 1 440 38 view .LVU420
 1437 005a FFF7FEFF 		bl	lv_mem_realloc
 1438              	.LVL130:
 441:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1439              		.loc 1 441 9 is_stmt 1 view .LVU421
 1440              		.loc 1 441 11 is_stmt 0 view .LVU422
 1441 005e 0246     		mov	r2, r0
 1442 0060 90B3     		cbz	r0, .L122
 442:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1443              		.loc 1 442 9 is_stmt 1 view .LVU423
 1444              		.loc 1 442 37 is_stmt 0 view .LVU424
 1445 0062 2060     		str	r0, [r4]
 443:lvgl/src/misc/lv_style.c **** 
 444:lvgl/src/misc/lv_style.c ****         tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1446              		.loc 1 444 9 is_stmt 1 view .LVU425
 1447              		.loc 1 444 39 is_stmt 0 view .LVU426
 1448 0064 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 1449              		.loc 1 444 13 view .LVU427
 1450 0066 00EB8301 		add	r1, r0, r3, lsl #2
 1451              	.LVL131:
 445:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1452              		.loc 1 445 9 is_stmt 1 view .LVU428
 446:lvgl/src/misc/lv_style.c ****         /*Shift all props to make place for the value before them*/
 447:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 1453              		.loc 1 447 9 view .LVU429
 1454              		.loc 1 447 15 is_stmt 0 view .LVU430
 1455 006a 013B     		subs	r3, r3, #1
 1456              	.LVL132:
 1457              		.loc 1 447 9 view .LVU431
 1458 006c 05E0     		b	.L128
 1459              	.LVL133:
 1460              	.L129:
 448:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 61


 1461              		.loc 1 448 13 is_stmt 1 discriminator 3 view .LVU432
 1462              		.loc 1 448 18 is_stmt 0 discriminator 3 view .LVU433
 1463 006e 981C     		adds	r0, r3, #2
 1464              		.loc 1 448 75 discriminator 3 view .LVU434
 1465 0070 31F813C0 		ldrh	ip, [r1, r3, lsl #1]
 1466              		.loc 1 448 68 discriminator 3 view .LVU435
 1467 0074 21F810C0 		strh	ip, [r1, r0, lsl #1]	@ movhi
 447:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1468              		.loc 1 447 47 is_stmt 1 discriminator 3 view .LVU436
 1469 0078 013B     		subs	r3, r3, #1
 1470              	.LVL134:
 1471              	.L128:
 447:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1472              		.loc 1 447 40 discriminator 1 view .LVU437
 1473 007a 002B     		cmp	r3, #0
 1474 007c F7DA     		bge	.L129
 449:lvgl/src/misc/lv_style.c ****         }
 450:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1475              		.loc 1 450 9 view .LVU438
 1476              		.loc 1 450 14 is_stmt 0 view .LVU439
 1477 007e E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 1478              	.LVL135:
 1479              		.loc 1 450 24 view .LVU440
 1480 0080 0131     		adds	r1, r1, #1
 1481 0082 C9B2     		uxtb	r1, r1
 1482 0084 E171     		strb	r1, [r4, #7]
 451:lvgl/src/misc/lv_style.c **** 
 452:lvgl/src/misc/lv_style.c ****         /*Go to the new position wit the props*/
 453:lvgl/src/misc/lv_style.c ****         tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1483              		.loc 1 453 9 is_stmt 1 view .LVU441
 1484              	.LVL136:
 454:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1485              		.loc 1 454 9 view .LVU442
 455:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 1486              		.loc 1 455 9 view .LVU443
 456:lvgl/src/misc/lv_style.c **** 
 457:lvgl/src/misc/lv_style.c ****         /*Set the new property and value*/
 458:lvgl/src/misc/lv_style.c ****         value_adjustment_helper(prop_and_meta, value, &props[style->prop_cnt - 1], &values[style->p
 1487              		.loc 1 458 9 view .LVU444
 1488              		.loc 1 458 61 is_stmt 0 view .LVU445
 1489 0086 01F10043 		add	r3, r1, #-2147483648
 1490              	.LVL137:
 1491              		.loc 1 458 61 view .LVU446
 1492 008a 013B     		subs	r3, r3, #1
 1493 008c 5B00     		lsls	r3, r3, #1
 1494              		.loc 1 458 91 view .LVU447
 1495 008e 01F18040 		add	r0, r1, #1073741824
 1496 0092 0138     		subs	r0, r0, #1
 1497              		.loc 1 458 9 view .LVU448
 1498 0094 03EB8101 		add	r1, r3, r1, lsl #2
 1499              	.LVL138:
 1500              		.loc 1 458 9 view .LVU449
 1501 0098 02EB8003 		add	r3, r2, r0, lsl #2
 1502 009c 0A44     		add	r2, r2, r1
 1503              	.LVL139:
 1504              		.loc 1 458 9 view .LVU450
 1505 009e 4146     		mov	r1, r8
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 62


 1506 00a0 3046     		mov	r0, r6
 1507              		.loc 1 458 9 view .LVU451
 1508 00a2 B847     		blx	r7
 1509              	.LVL140:
 1510              	.LBE42:
 1511 00a4 08E0     		b	.L130
 1512              	.LVL141:
 1513              	.L124:
 459:lvgl/src/misc/lv_style.c ****     }
 460:lvgl/src/misc/lv_style.c ****     else if(style->prop_cnt == 1) {
 1514              		.loc 1 460 10 is_stmt 1 view .LVU452
 1515              		.loc 1 460 12 is_stmt 0 view .LVU453
 1516 00a6 012B     		cmp	r3, #1
 1517 00a8 10D0     		beq	.L137
 461:lvgl/src/misc/lv_style.c ****         if(LV_STYLE_PROP_ID_MASK(style->prop1) == prop_id) {
 462:lvgl/src/misc/lv_style.c ****             value_adjustment_helper(prop_and_meta, value, &style->prop1, &style->v_p.value1);
 463:lvgl/src/misc/lv_style.c ****             return;
 464:lvgl/src/misc/lv_style.c ****         }
 465:lvgl/src/misc/lv_style.c ****         size_t size = (style->prop_cnt + 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t));
 466:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 467:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 468:lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 469:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 470:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 471:lvgl/src/misc/lv_style.c **** 
 472:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 473:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 474:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 475:lvgl/src/misc/lv_style.c ****         props[0] = style->prop1;
 476:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 477:lvgl/src/misc/lv_style.c ****         value_adjustment_helper(prop_and_meta, value, &props[1], &values[1]);
 478:lvgl/src/misc/lv_style.c ****     }
 479:lvgl/src/misc/lv_style.c ****     else {
 480:lvgl/src/misc/lv_style.c ****         style->prop_cnt = 1;
 1518              		.loc 1 480 9 is_stmt 1 view .LVU454
 1519              		.loc 1 480 25 is_stmt 0 view .LVU455
 1520 00aa 0123     		movs	r3, #1
 1521 00ac C371     		strb	r3, [r0, #7]
 481:lvgl/src/misc/lv_style.c ****         value_adjustment_helper(prop_and_meta, value, &style->prop1, &style->v_p.value1);
 1522              		.loc 1 481 9 is_stmt 1 view .LVU456
 1523 00ae 0346     		mov	r3, r0
 1524 00b0 021D     		adds	r2, r0, #4
 1525              	.LVL142:
 1526              		.loc 1 481 9 is_stmt 0 view .LVU457
 1527 00b2 4146     		mov	r1, r8
 1528              	.LVL143:
 1529              		.loc 1 481 9 view .LVU458
 1530 00b4 3046     		mov	r0, r6
 1531              	.LVL144:
 1532              		.loc 1 481 9 view .LVU459
 1533 00b6 B847     		blx	r7
 1534              	.LVL145:
 1535              	.L130:
 482:lvgl/src/misc/lv_style.c ****     }
 483:lvgl/src/misc/lv_style.c **** 
 484:lvgl/src/misc/lv_style.c ****     uint8_t group = _lv_style_get_prop_group(prop_id);
 1536              		.loc 1 484 5 is_stmt 1 view .LVU460
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 63


 1537              		.loc 1 484 21 is_stmt 0 view .LVU461
 1538 00b8 2846     		mov	r0, r5
 1539 00ba FFF7FEFF 		bl	_lv_style_get_prop_group
 1540              	.LVL146:
 485:lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1541              		.loc 1 485 5 is_stmt 1 view .LVU462
 1542              		.loc 1 485 10 is_stmt 0 view .LVU463
 1543 00be A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 1544              		.loc 1 485 27 view .LVU464
 1545 00c0 0122     		movs	r2, #1
 1546 00c2 8240     		lsls	r2, r2, r0
 1547              		.loc 1 485 22 view .LVU465
 1548 00c4 1343     		orrs	r3, r3, r2
 1549 00c6 A371     		strb	r3, [r4, #6]
 1550              	.LVL147:
 1551              	.L122:
 486:lvgl/src/misc/lv_style.c **** }
 1552              		.loc 1 486 1 view .LVU466
 1553 00c8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1554              	.LVL148:
 1555              	.L137:
 1556              	.LBB44:
 461:lvgl/src/misc/lv_style.c ****             value_adjustment_helper(prop_and_meta, value, &style->prop1, &style->v_p.value1);
 1557              		.loc 1 461 9 is_stmt 1 view .LVU467
 461:lvgl/src/misc/lv_style.c ****             value_adjustment_helper(prop_and_meta, value, &style->prop1, &style->v_p.value1);
 1558              		.loc 1 461 11 is_stmt 0 view .LVU468
 1559 00cc C2F30D02 		ubfx	r2, r2, #0, #14
 1560 00d0 AA42     		cmp	r2, r5
 1561 00d2 1BD0     		beq	.L138
 465:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1562              		.loc 1 465 9 is_stmt 1 view .LVU469
 465:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1563              		.loc 1 465 40 is_stmt 0 view .LVU470
 1564 00d4 0133     		adds	r3, r3, #1
 465:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1565              		.loc 1 465 16 view .LVU471
 1566 00d6 03EB4303 		add	r3, r3, r3, lsl #1
 1567              	.LVL149:
 466:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1568              		.loc 1 466 9 is_stmt 1 view .LVU472
 466:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1569              		.loc 1 466 38 is_stmt 0 view .LVU473
 1570 00da 5800     		lsls	r0, r3, #1
 1571              	.LVL150:
 466:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1572              		.loc 1 466 38 view .LVU474
 1573 00dc FFF7FEFF 		bl	lv_mem_alloc
 1574              	.LVL151:
 467:lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 1575              		.loc 1 467 9 is_stmt 1 view .LVU475
 467:lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 1576              		.loc 1 467 11 is_stmt 0 view .LVU476
 1577 00e0 0346     		mov	r3, r0
 1578 00e2 0028     		cmp	r0, #0
 1579 00e4 F0D0     		beq	.L122
 468:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1580              		.loc 1 468 9 is_stmt 1 view .LVU477
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 64


 468:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1581              		.loc 1 468 26 is_stmt 0 view .LVU478
 1582 00e6 2068     		ldr	r0, [r4]
 1583              	.LVL152:
 469:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1584              		.loc 1 469 9 is_stmt 1 view .LVU479
 469:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1585              		.loc 1 469 37 is_stmt 0 view .LVU480
 1586 00e8 2360     		str	r3, [r4]
 470:lvgl/src/misc/lv_style.c **** 
 1587              		.loc 1 470 9 is_stmt 1 view .LVU481
 470:lvgl/src/misc/lv_style.c **** 
 1588              		.loc 1 470 14 is_stmt 0 view .LVU482
 1589 00ea E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 470:lvgl/src/misc/lv_style.c **** 
 1590              		.loc 1 470 24 view .LVU483
 1591 00ec 0131     		adds	r1, r1, #1
 1592 00ee C9B2     		uxtb	r1, r1
 1593 00f0 E171     		strb	r1, [r4, #7]
 472:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1594              		.loc 1 472 9 is_stmt 1 view .LVU484
 472:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1595              		.loc 1 472 19 is_stmt 0 view .LVU485
 1596 00f2 03EB8102 		add	r2, r3, r1, lsl #2
 1597              	.LVL153:
 473:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 1598              		.loc 1 473 9 is_stmt 1 view .LVU486
 474:lvgl/src/misc/lv_style.c ****         props[0] = style->prop1;
 1599              		.loc 1 474 9 view .LVU487
 475:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1600              		.loc 1 475 9 view .LVU488
 475:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1601              		.loc 1 475 25 is_stmt 0 view .LVU489
 1602 00f6 B4F804C0 		ldrh	ip, [r4, #4]
 475:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1603              		.loc 1 475 18 view .LVU490
 1604 00fa 23F821C0 		strh	ip, [r3, r1, lsl #2]	@ movhi
 476:lvgl/src/misc/lv_style.c ****         value_adjustment_helper(prop_and_meta, value, &props[1], &values[1]);
 1605              		.loc 1 476 9 is_stmt 1 view .LVU491
 1606              	.LVL154:
 476:lvgl/src/misc/lv_style.c ****         value_adjustment_helper(prop_and_meta, value, &props[1], &values[1]);
 1607              		.loc 1 476 19 is_stmt 0 view .LVU492
 1608 00fe 43F8040B 		str	r0, [r3], #4
 1609              	.LVL155:
 477:lvgl/src/misc/lv_style.c ****     }
 1610              		.loc 1 477 9 is_stmt 1 view .LVU493
 1611 0102 0232     		adds	r2, r2, #2
 1612              	.LVL156:
 477:lvgl/src/misc/lv_style.c ****     }
 1613              		.loc 1 477 9 is_stmt 0 view .LVU494
 1614 0104 4146     		mov	r1, r8
 1615 0106 3046     		mov	r0, r6
 1616              	.LVL157:
 477:lvgl/src/misc/lv_style.c ****     }
 1617              		.loc 1 477 9 view .LVU495
 1618 0108 B847     		blx	r7
 1619              	.LVL158:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 65


 477:lvgl/src/misc/lv_style.c ****     }
 1620              		.loc 1 477 9 view .LVU496
 1621              	.LBE44:
 1622 010a D5E7     		b	.L130
 1623              	.LVL159:
 1624              	.L138:
 1625              	.LBB45:
 462:lvgl/src/misc/lv_style.c ****             return;
 1626              		.loc 1 462 13 is_stmt 1 view .LVU497
 1627 010c 0346     		mov	r3, r0
 1628 010e 021D     		adds	r2, r0, #4
 1629              	.LVL160:
 462:lvgl/src/misc/lv_style.c ****             return;
 1630              		.loc 1 462 13 is_stmt 0 view .LVU498
 1631 0110 4146     		mov	r1, r8
 1632              	.LVL161:
 462:lvgl/src/misc/lv_style.c ****             return;
 1633              		.loc 1 462 13 view .LVU499
 1634 0112 3046     		mov	r0, r6
 1635              	.LVL162:
 462:lvgl/src/misc/lv_style.c ****             return;
 1636              		.loc 1 462 13 view .LVU500
 1637 0114 B847     		blx	r7
 1638              	.LVL163:
 463:lvgl/src/misc/lv_style.c ****         }
 1639              		.loc 1 463 13 is_stmt 1 view .LVU501
 1640 0116 D7E7     		b	.L122
 1641              	.LBE45:
 1642              		.cfi_endproc
 1643              	.LFE71:
 1645              		.section	.text.lv_style_set_prop,"ax",%progbits
 1646              		.align	1
 1647              		.global	lv_style_set_prop
 1648              		.syntax unified
 1649              		.thumb
 1650              		.thumb_func
 1652              	lv_style_set_prop:
 1653              	.LVL164:
 1654              	.LFB61:
 284:lvgl/src/misc/lv_style.c ****     lv_style_set_prop_internal(style, prop, value, lv_style_set_prop_helper);
 1655              		.loc 1 284 1 view -0
 1656              		.cfi_startproc
 1657              		@ args = 0, pretend = 0, frame = 0
 1658              		@ frame_needed = 0, uses_anonymous_args = 0
 284:lvgl/src/misc/lv_style.c ****     lv_style_set_prop_internal(style, prop, value, lv_style_set_prop_helper);
 1659              		.loc 1 284 1 is_stmt 0 view .LVU503
 1660 0000 08B5     		push	{r3, lr}
 1661              	.LCFI9:
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 3, -8
 1664              		.cfi_offset 14, -4
 285:lvgl/src/misc/lv_style.c **** }
 1665              		.loc 1 285 5 is_stmt 1 view .LVU504
 1666 0002 024B     		ldr	r3, .L141
 1667 0004 FFF7FEFF 		bl	lv_style_set_prop_internal
 1668              	.LVL165:
 286:lvgl/src/misc/lv_style.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 66


 1669              		.loc 1 286 1 is_stmt 0 view .LVU505
 1670 0008 08BD     		pop	{r3, pc}
 1671              	.L142:
 1672 000a 00BF     		.align	2
 1673              	.L141:
 1674 000c 00000000 		.word	lv_style_set_prop_helper
 1675              		.cfi_endproc
 1676              	.LFE61:
 1678              		.section	.text.lv_style_set_prop_meta,"ax",%progbits
 1679              		.align	1
 1680              		.global	lv_style_set_prop_meta
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1685              	lv_style_set_prop_meta:
 1686              	.LVL166:
 1687              	.LFB62:
 289:lvgl/src/misc/lv_style.c ****     lv_style_set_prop_internal(style, prop | meta, null_style_value, lv_style_set_prop_meta_helper)
 1688              		.loc 1 289 1 is_stmt 1 view -0
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 0, uses_anonymous_args = 0
 289:lvgl/src/misc/lv_style.c ****     lv_style_set_prop_internal(style, prop | meta, null_style_value, lv_style_set_prop_meta_helper)
 1692              		.loc 1 289 1 is_stmt 0 view .LVU507
 1693 0000 08B5     		push	{r3, lr}
 1694              	.LCFI10:
 1695              		.cfi_def_cfa_offset 8
 1696              		.cfi_offset 3, -8
 1697              		.cfi_offset 14, -4
 1698 0002 9446     		mov	ip, r2
 290:lvgl/src/misc/lv_style.c **** }
 1699              		.loc 1 290 5 is_stmt 1 view .LVU508
 1700 0004 034B     		ldr	r3, .L145
 1701 0006 044A     		ldr	r2, .L145+4
 1702              	.LVL167:
 290:lvgl/src/misc/lv_style.c **** }
 1703              		.loc 1 290 5 is_stmt 0 view .LVU509
 1704 0008 1268     		ldr	r2, [r2]
 1705 000a 41EA0C01 		orr	r1, r1, ip
 1706              	.LVL168:
 290:lvgl/src/misc/lv_style.c **** }
 1707              		.loc 1 290 5 view .LVU510
 1708 000e FFF7FEFF 		bl	lv_style_set_prop_internal
 1709              	.LVL169:
 291:lvgl/src/misc/lv_style.c **** 
 1710              		.loc 1 291 1 view .LVU511
 1711 0012 08BD     		pop	{r3, pc}
 1712              	.L146:
 1713              		.align	2
 1714              	.L145:
 1715 0014 00000000 		.word	lv_style_set_prop_meta_helper
 1716 0018 00000000 		.word	null_style_value
 1717              		.cfi_endproc
 1718              	.LFE62:
 1720              		.section	.text._lv_style_prop_lookup_flags,"ax",%progbits
 1721              		.align	1
 1722              		.global	_lv_style_prop_lookup_flags
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 67


 1723              		.syntax unified
 1724              		.thumb
 1725              		.thumb_func
 1727              	_lv_style_prop_lookup_flags:
 1728              	.LVL170:
 1729              	.LFB68:
 382:lvgl/src/misc/lv_style.c ****     extern const uint8_t _lv_style_builtin_prop_flag_lookup_table[];
 1730              		.loc 1 382 1 is_stmt 1 view -0
 1731              		.cfi_startproc
 1732              		@ args = 0, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734              		@ link register save eliminated.
 383:lvgl/src/misc/lv_style.c ****     extern uint32_t _lv_style_custom_prop_flag_lookup_table_size;
 1735              		.loc 1 383 5 view .LVU513
 384:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_ANY) return LV_STYLE_PROP_ALL; /*Any prop can have any flags*/
 1736              		.loc 1 384 5 view .LVU514
 385:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_INV) return 0;
 1737              		.loc 1 385 5 view .LVU515
 385:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_INV) return 0;
 1738              		.loc 1 385 7 is_stmt 0 view .LVU516
 1739 0000 4FF6FF73 		movw	r3, #65535
 1740 0004 9842     		cmp	r0, r3
 1741 0006 12D0     		beq	.L150
 386:lvgl/src/misc/lv_style.c **** 
 1742              		.loc 1 386 5 is_stmt 1 view .LVU517
 386:lvgl/src/misc/lv_style.c **** 
 1743              		.loc 1 386 7 is_stmt 0 view .LVU518
 1744 0008 98B1     		cbz	r0, .L151
 388:lvgl/src/misc/lv_style.c ****         return _lv_style_builtin_prop_flag_lookup_table[prop];
 1745              		.loc 1 388 5 is_stmt 1 view .LVU519
 388:lvgl/src/misc/lv_style.c ****         return _lv_style_builtin_prop_flag_lookup_table[prop];
 1746              		.loc 1 388 7 is_stmt 0 view .LVU520
 1747 000a 7028     		cmp	r0, #112
 1748 000c 0AD9     		bls	.L154
 390:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) != NULL && prop < _lv_style_custom_prop_
 1749              		.loc 1 390 5 is_stmt 1 view .LVU521
 390:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) != NULL && prop < _lv_style_custom_prop_
 1750              		.loc 1 390 10 is_stmt 0 view .LVU522
 1751 000e 7138     		subs	r0, r0, #113
 1752              	.LVL171:
 390:lvgl/src/misc/lv_style.c ****     if(LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table) != NULL && prop < _lv_style_custom_prop_
 1753              		.loc 1 390 10 view .LVU523
 1754 0010 80B2     		uxth	r0, r0
 1755              	.LVL172:
 391:lvgl/src/misc/lv_style.c ****         return LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[prop];
 1756              		.loc 1 391 5 is_stmt 1 view .LVU524
 391:lvgl/src/misc/lv_style.c ****         return LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[prop];
 1757              		.loc 1 391 60 is_stmt 0 view .LVU525
 1758 0012 0A4B     		ldr	r3, .L156
 1759 0014 1B68     		ldr	r3, [r3]
 391:lvgl/src/misc/lv_style.c ****         return LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[prop];
 1760              		.loc 1 391 7 view .LVU526
 1761 0016 73B1     		cbz	r3, .L152
 391:lvgl/src/misc/lv_style.c ****         return LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[prop];
 1762              		.loc 1 391 76 discriminator 1 view .LVU527
 1763 0018 094A     		ldr	r2, .L156+4
 1764 001a 1268     		ldr	r2, [r2]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 68


 391:lvgl/src/misc/lv_style.c ****         return LV_GC_ROOT(_lv_style_custom_prop_flag_lookup_table)[prop];
 1765              		.loc 1 391 68 discriminator 1 view .LVU528
 1766 001c 9042     		cmp	r0, r2
 1767 001e 04D3     		bcc	.L155
 393:lvgl/src/misc/lv_style.c **** }
 1768              		.loc 1 393 12 view .LVU529
 1769 0020 0020     		movs	r0, #0
 1770              	.LVL173:
 394:lvgl/src/misc/lv_style.c **** 
 1771              		.loc 1 394 1 view .LVU530
 1772 0022 7047     		bx	lr
 1773              	.LVL174:
 1774              	.L154:
 389:lvgl/src/misc/lv_style.c ****     prop -= _LV_STYLE_NUM_BUILT_IN_PROPS;
 1775              		.loc 1 389 9 is_stmt 1 view .LVU531
 389:lvgl/src/misc/lv_style.c ****     prop -= _LV_STYLE_NUM_BUILT_IN_PROPS;
 1776              		.loc 1 389 56 is_stmt 0 view .LVU532
 1777 0024 074B     		ldr	r3, .L156+8
 1778 0026 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1779              	.LVL175:
 389:lvgl/src/misc/lv_style.c ****     prop -= _LV_STYLE_NUM_BUILT_IN_PROPS;
 1780              		.loc 1 389 56 view .LVU533
 1781 0028 7047     		bx	lr
 1782              	.LVL176:
 1783              	.L155:
 392:lvgl/src/misc/lv_style.c ****     return 0;
 1784              		.loc 1 392 9 is_stmt 1 view .LVU534
 392:lvgl/src/misc/lv_style.c ****     return 0;
 1785              		.loc 1 392 67 is_stmt 0 view .LVU535
 1786 002a 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 1787              	.LVL177:
 392:lvgl/src/misc/lv_style.c ****     return 0;
 1788              		.loc 1 392 67 view .LVU536
 1789 002c 7047     		bx	lr
 1790              	.LVL178:
 1791              	.L150:
 385:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_INV) return 0;
 1792              		.loc 1 385 42 view .LVU537
 1793 002e 1F20     		movs	r0, #31
 1794              	.LVL179:
 385:lvgl/src/misc/lv_style.c ****     if(prop == LV_STYLE_PROP_INV) return 0;
 1795              		.loc 1 385 42 view .LVU538
 1796 0030 7047     		bx	lr
 1797              	.LVL180:
 1798              	.L151:
 386:lvgl/src/misc/lv_style.c **** 
 1799              		.loc 1 386 42 view .LVU539
 1800 0032 0020     		movs	r0, #0
 1801              	.LVL181:
 386:lvgl/src/misc/lv_style.c **** 
 1802              		.loc 1 386 42 view .LVU540
 1803 0034 7047     		bx	lr
 1804              	.LVL182:
 1805              	.L152:
 393:lvgl/src/misc/lv_style.c **** }
 1806              		.loc 1 393 12 view .LVU541
 1807 0036 0020     		movs	r0, #0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 69


 1808              	.LVL183:
 393:lvgl/src/misc/lv_style.c **** }
 1809              		.loc 1 393 12 view .LVU542
 1810 0038 7047     		bx	lr
 1811              	.L157:
 1812 003a 00BF     		.align	2
 1813              	.L156:
 1814 003c 00000000 		.word	_lv_style_custom_prop_flag_lookup_table
 1815 0040 00000000 		.word	_lv_style_custom_prop_flag_lookup_table_size
 1816 0044 00000000 		.word	_lv_style_builtin_prop_flag_lookup_table
 1817              		.cfi_endproc
 1818              	.LFE68:
 1820              		.section	.rodata.null_style_value,"a"
 1821              		.align	2
 1824              	null_style_value:
 1825 0000 00000000 		.space	4
 1826              		.section	.data.last_custom_prop_id,"aw"
 1827              		.align	1
 1830              	last_custom_prop_id:
 1831 0000 7000     		.short	112
 1832              		.global	_lv_style_custom_prop_flag_lookup_table_size
 1833              		.section	.bss._lv_style_custom_prop_flag_lookup_table_size,"aw",%nobits
 1834              		.align	2
 1837              	_lv_style_custom_prop_flag_lookup_table_size:
 1838 0000 00000000 		.space	4
 1839              		.global	_lv_style_builtin_prop_flag_lookup_table
 1840              		.section	.rodata._lv_style_builtin_prop_flag_lookup_table,"a"
 1841              		.align	2
 1844              	_lv_style_builtin_prop_flag_lookup_table:
 1845 0000 00040404 		.ascii	"\000\004\004\004\004\004\004\004\004\004\004\000\000"
 1845      04040404 
 1845      04040400 
 1845      00
 1846 000d 00000006 		.ascii	"\000\000\000\006\006\006\006\006\006\005\000\000\000"
 1846      06060606 
 1846      06050000 
 1846      00
 1847 001a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1847      00000000 
 1847      00000000 
 1847      00
 1848 0027 00020000 		.ascii	"\000\002\000\000\000\000\000\000\000\000\000\004\000"
 1848      00000000 
 1848      00000004 
 1848      00
 1849 0034 00020002 		.ascii	"\000\002\000\002\002\000\000\000\000\000\000\000\002"
 1849      02000000 
 1849      00000000 
 1849      02
 1850 0041 02020200 		.ascii	"\002\002\002\000\002\000\000\000\002\000\000\000\000"
 1850      02000000 
 1850      02000000 
 1850      00
 1851 004e 00000200 		.ascii	"\000\000\002\000\000\000\000\001\001\005\005\005\001"
 1851      00000001 
 1851      01050505 
 1851      01
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 70


 1852 005b 05000000 		.ascii	"\005\000\000\000\000\000\020\001\001\000\000\000\000"
 1852      00001001 
 1852      01000000 
 1852      00
 1853 0068 1002020C 		.ascii	"\020\002\002\014\014\022\022\000"
 1853      0C121200 
 1854 0070 00       		.space	1
 1855              		.text
 1856              	.Letext0:
 1857              		.file 4 "/usr/local/include/sys/_types/_int8_t.h"
 1858              		.file 5 "/usr/local/include/sys/_types/_int16_t.h"
 1859              		.file 6 "/usr/local/include/sys/_types/_int32_t.h"
 1860              		.file 7 "/usr/local/include/_types/_uint8_t.h"
 1861              		.file 8 "/usr/local/include/_types/_uint16_t.h"
 1862              		.file 9 "/usr/local/include/_types/_uint32_t.h"
 1863              		.file 10 "/usr/local/include/arm/_types.h"
 1864              		.file 11 "/usr/local/include/sys/_types/_size_t.h"
 1865              		.file 12 "lvgl/src/misc/../font/../misc/lv_area.h"
 1866              		.file 13 "lvgl/src/misc/../font/lv_font.h"
 1867              		.file 14 "lvgl/src/misc/lv_anim.h"
 1868              		.file 15 "lvgl/src/misc/../misc/lv_gc.h"
 1869              		.file 16 "lvgl/src/misc/lv_mem.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 71


DEFINED SYMBOLS
                            *ABS*:00000000 lv_style.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:21     .text.lv_style_set_prop_helper:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:26     .text.lv_style_set_prop_helper:00000000 lv_style_set_prop_helper
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:46     .text.lv_style_set_prop_meta_helper:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:51     .text.lv_style_set_prop_meta_helper:00000000 lv_style_set_prop_meta_helper
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:70     .text.lv_style_init:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:76     .text.lv_style_init:00000000 lv_style_init
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:99     .text.lv_style_reset:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:105    .text.lv_style_reset:00000000 lv_style_reset
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:165    .text.lv_style_register_prop:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:171    .text.lv_style_register_prop:00000000 lv_style_register_prop
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:317    .text.lv_style_register_prop:0000006c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1830   .data.last_custom_prop_id:00000000 last_custom_prop_id
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1837   .bss._lv_style_custom_prop_flag_lookup_table_size:00000000 _lv_style_custom_prop_flag_lookup_table_size
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:325    .text.lv_style_get_num_custom_props:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:331    .text.lv_style_get_num_custom_props:00000000 lv_style_get_num_custom_props
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:349    .text.lv_style_get_num_custom_props:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:354    .text.lv_style_remove_prop:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:360    .text.lv_style_remove_prop:00000000 lv_style_remove_prop
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:628    .text.lv_style_transition_dsc_init:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:634    .text.lv_style_transition_dsc_init:00000000 lv_style_transition_dsc_init
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:694    .text.lv_style_transition_dsc_init:00000028 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:699    .text.lv_style_prop_get_default:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:705    .text.lv_style_prop_get_default:00000000 lv_style_prop_get_default
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:726    .text.lv_style_prop_get_default:00000012 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:779    .text.lv_style_prop_get_default:00000046 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:821    .text.lv_style_prop_get_default:0000007c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:846    .text.lv_style_prop_get_default:000000dc $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:954    .text.lv_style_prop_get_default:00000120 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:961    .text.lv_style_get_prop_inlined:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:966    .text.lv_style_get_prop_inlined:00000000 lv_style_get_prop_inlined
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1229   .text.lv_style_get_prop:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1235   .text.lv_style_get_prop:00000000 lv_style_get_prop
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1258   .text.lv_style_is_empty:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1264   .text.lv_style_is_empty:00000000 lv_style_is_empty
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1287   .text._lv_style_get_prop_group:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1293   .text._lv_style_get_prop_group:00000000 _lv_style_get_prop_group
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1322   .text.lv_style_set_prop_internal:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1327   .text.lv_style_set_prop_internal:00000000 lv_style_set_prop_internal
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1646   .text.lv_style_set_prop:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1652   .text.lv_style_set_prop:00000000 lv_style_set_prop
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1674   .text.lv_style_set_prop:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1679   .text.lv_style_set_prop_meta:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1685   .text.lv_style_set_prop_meta:00000000 lv_style_set_prop_meta
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1715   .text.lv_style_set_prop_meta:00000014 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1824   .rodata.null_style_value:00000000 null_style_value
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1721   .text._lv_style_prop_lookup_flags:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1727   .text._lv_style_prop_lookup_flags:00000000 _lv_style_prop_lookup_flags
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1814   .text._lv_style_prop_lookup_flags:0000003c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1844   .rodata._lv_style_builtin_prop_flag_lookup_table:00000000 _lv_style_builtin_prop_flag_lookup_table
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1821   .rodata.null_style_value:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1827   .data.last_custom_prop_id:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1834   .bss._lv_style_custom_prop_flag_lookup_table_size:00000000 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s:1841   .rodata._lv_style_builtin_prop_flag_lookup_table:00000000 $d

UNDEFINED SYMBOLS
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccSo6H39.s 			page 72


lv_memset_00
lv_mem_free
lv_mem_realloc
_lv_style_custom_prop_flag_lookup_table
lv_mem_alloc
lv_anim_path_linear
lv_font_montserrat_14
