ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_draw_sw_blend.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_blend.c"
  20              		.section	.text.lv_color_mix,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_color_mix:
  27              	.LVL0:
  28              	.LFB6:
  29              		.file 2 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 2


  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  38:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  39:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  42:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  56:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  57:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 3


  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 4


 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 193:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 199:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 5


 201:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 208:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 224:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 234:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 243:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 257:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 6


 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 281:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 298:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 300:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 307:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 309:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 314:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 7


 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 316:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 321:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 323:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 324:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 325:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 326:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 332:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 348:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 349:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 350:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 356:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 8


 372:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 373:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 374:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 380:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 417:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 427:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 428:lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 9


 429:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 432:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  30              		.loc 2 439 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 440:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
  35              		.loc 2 440 5 view .LVU1
 441:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 442:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/sw/../../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/sw/../../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 447:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
  36              		.loc 2 448 5 view .LVU2
  37              		.loc 2 448 11 is_stmt 0 view .LVU3
  38 0000 0432     		adds	r2, r2, #4
  39              	.LVL1:
 449:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
  40              		.loc 2 449 5 is_stmt 1 view .LVU4
  41              		.loc 2 449 19 is_stmt 0 view .LVU5
  42 0002 0B04     		lsls	r3, r1, #16
  43 0004 13FA81F1 		uxtah	r1, r3, r1
  44              	.LVL2:
  45              		.loc 2 449 14 view .LVU6
  46 0008 084B     		ldr	r3, .L2
  47 000a 1940     		ands	r1, r1, r3
  48              	.LVL3:
 450:lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
  49              		.loc 2 451 5 is_stmt 1 view .LVU7
  50              		.loc 2 451 19 is_stmt 0 view .LVU8
  51 000c 4FEA004C 		lsl	ip, r0, #16
  52 0010 1CFA80F0 		uxtah	r0, ip, r0
  53              	.LVL4:
  54              		.loc 2 451 14 view .LVU9
  55 0014 1840     		ands	r0, r0, r3
  56              	.LVL5:
 452:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
  57              		.loc 2 452 5 is_stmt 1 view .LVU10
  58              		.loc 2 452 30 is_stmt 0 view .LVU11
  59 0016 401A     		subs	r0, r0, r1
  60              	.LVL6:
  61              		.loc 2 452 36 view .LVU12
  62 0018 D208     		lsrs	r2, r2, #3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 10


  63              	.LVL7:
  64              		.loc 2 452 36 view .LVU13
  65 001a 00FB02F2 		mul	r2, r0, r2
  66              		.loc 2 452 49 view .LVU14
  67 001e 01EB5211 		add	r1, r1, r2, lsr #5
  68              	.LVL8:
  69              		.loc 2 452 14 view .LVU15
  70 0022 01EA0300 		and	r0, r1, r3
  71              	.LVL9:
 453:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
  72              		.loc 2 453 5 is_stmt 1 view .LVU16
 454:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 457:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 467:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 470:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 471:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
  73              		.loc 2 471 5 view .LVU17
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** }
  74              		.loc 2 472 1 is_stmt 0 view .LVU18
  75 0026 40EA1040 		orr	r0, r0, r0, lsr #16
  76              	.LVL10:
  77              		.loc 2 472 1 view .LVU19
  78 002a 7047     		bx	lr
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 002c 1FF8E007 		.word	132184095
  83              		.cfi_endproc
  84              	.LFE6:
  86              		.section	.text.lv_color_mix_premult,"ax",%progbits
  87              		.align	1
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  92              	lv_color_mix_premult:
  93              	.LVL11:
  94              	.LFB8:
 473:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 476:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 11


 480:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 481:lvgl/src/draw/sw/../../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 487:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 488:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 489:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 490:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 491:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/draw/sw/../../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 499:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  95              		.loc 2 500 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		.loc 2 500 1 is_stmt 0 view .LVU21
 100 0000 00B5     		push	{lr}
 101              	.LCFI0:
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 14, -4
 104 0002 8446     		mov	ip, r0
 501:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 105              		.loc 2 501 5 is_stmt 1 view .LVU22
 502:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 106              		.loc 2 504 5 view .LVU23
 107 0004 0388     		ldrh	r3, [r0]
 108 0006 C1F3C420 		ubfx	r0, r1, #11, #5
 109              	.LVL12:
 110              		.loc 2 504 5 is_stmt 0 view .LVU24
 111 000a 02FB0033 		mla	r3, r2, r0, r3
 112 000e 03EB0320 		add	r0, r3, r3, lsl #8
 113 0012 03EBC013 		add	r3, r3, r0, lsl #7
 114 0016 C3F3C453 		ubfx	r3, r3, #23, #5
 115 001a 4FF00000 		mov	r0, #0	@ movhi
 116              	.LVL13:
 117              		.loc 2 504 5 view .LVU25
 118 001e 63F3CF20 		bfi	r0, r3, #11, #5
 119              	.LVL14:
 505:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 120              		.loc 2 505 5 is_stmt 1 view .LVU26
 121 0022 BCF80230 		ldrh	r3, [ip, #2]
 122 0026 C1F3451E 		ubfx	lr, r1, #5, #6
 123 002a 0EFB0233 		mla	r3, lr, r2, r3
 124 002e 03EB032E 		add	lr, r3, r3, lsl #8
 125 0032 03EBCE13 		add	r3, r3, lr, lsl #7
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 12


 126 0036 C3F3C553 		ubfx	r3, r3, #23, #6
 127 003a 63F34A10 		bfi	r0, r3, #5, #6
 506:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 128              		.loc 2 506 5 view .LVU27
 129 003e BCF80430 		ldrh	r3, [ip, #4]
 130 0042 01F01F01 		and	r1, r1, #31
 131              	.LVL15:
 132              		.loc 2 506 5 is_stmt 0 view .LVU28
 133 0046 01FB0232 		mla	r2, r1, r2, r3
 134              	.LVL16:
 135              		.loc 2 506 5 view .LVU29
 136 004a 02EB0223 		add	r3, r2, r2, lsl #8
 137 004e 02EBC312 		add	r2, r2, r3, lsl #7
 138 0052 C2F3C452 		ubfx	r2, r2, #23, #5
 139 0056 62F30400 		bfi	r0, r2, #0, #5
 507:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 140              		.loc 2 507 5 is_stmt 1 view .LVU30
 141              		.loc 2 507 5 view .LVU31
 142              		.loc 2 507 5 view .LVU32
 508:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 509:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 517:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 518:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 143              		.loc 2 518 5 view .LVU33
 144              	.LVL17:
 519:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 145              		.loc 2 519 1 is_stmt 0 view .LVU34
 146 005a 5DF804FB 		ldr	pc, [sp], #4
 147              		.cfi_endproc
 148              	.LFE8:
 150              		.section	.text.fill_blended,"ax",%progbits
 151              		.align	1
 152              		.syntax unified
 153              		.thumb
 154              		.thumb_func
 156              	fill_blended:
 157              	.LVL18:
 158              	.LFB165:
   1:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  * @file lv_draw_sw_blend.c
   3:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../misc/lv_math.h"
  11:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../hal/lv_hal_disp.h"
  12:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../core/lv_refr.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 13


  13:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  14:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
  15:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      DEFINES
  16:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
  17:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  18:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  19:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      TYPEDEFS
  20:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  21:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  22:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  23:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC PROTOTYPES
  24:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  25:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  26:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
  27:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
  28:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  29:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_a
  30:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                     lv_coord_t dest_stride, lv_color_t color, lv_op
  31:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                     const lv_opa_t * mask, lv_coord_t mask_stride);
  32:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  33:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
  34:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_are
  35:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                   lv_coord_t dest_stride, lv_color_t color, lv_opa_
  36:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                   const lv_opa_t * mask, lv_coord_t mask_stride);
  37:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_COLOR_SCREEN_TRANSP*/
  38:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  39:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  40:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride
  41:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode
  42:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif  /*LV_DRAW_COMPLEX*/
  43:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  44:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  45:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
  46:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_opa_t * mask, lv_coord_t mask_stride);
  47:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  48:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ map_normal(lv_color_t * dest_buf, const lv_area_t * dest_ar
  49:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                    lv_coord_t dest_stride, const lv_color_t * src_b
  50:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                    lv_coord_t src_stride, lv_opa_t opa, const lv_op
  51:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                    lv_coord_t mask_stride);
  52:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  53:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
  54:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area
  55:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                  lv_coord_t dest_stride, const lv_color_t * src_buf
  56:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                  lv_coord_t src_stride, lv_opa_t opa, const lv_opa_
  57:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                  lv_coord_t mask_stride, lv_blend_mode_t blend_mode
  58:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  59:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_COLOR_SCREEN_TRANSP*/
  60:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  61:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  62:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  63:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
  64:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode);
  65:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  66:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  67:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  68:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  69:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_DRAW_COMPLEX*/
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 14


  70:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  71:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  72:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC VARIABLES
  73:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  74:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  75:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  76:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      MACROS
  77:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  78:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                                          \
  79:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask == LV_OPA_COVER) *dest_buf = color;                                 \
  80:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else *dest_buf = lv_color_mix(color, *dest_buf, *mask);            \
  81:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask++;                                                         \
  82:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     dest_buf++;
  83:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  84:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  85:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask_tmp_x) {          \
  86:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) dest_buf[x] = src_buf[x];                                 \
  87:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], *mask_tmp_x);            \
  88:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }                                                                                              
  89:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask_tmp_x++;
  90:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  91:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  92:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   GLOBAL FUNCTIONS
  93:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  94:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  95:lvgl/src/draw/sw/lv_draw_sw_blend.c **** void lv_draw_sw_blend(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_dsc_t * dsc)
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
  97:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  99:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 100:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 102:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 104:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ((lv_draw_sw_ctx_t *)draw_ctx)->blend(draw_ctx, dsc);
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 107:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 108:lvgl/src/draw/sw/lv_draw_sw_blend.c **** void LV_ATTRIBUTE_FAST_MEM lv_draw_sw_blend_basic(lv_draw_ctx_t * draw_ctx,
 109:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                   const lv_draw_sw_blend_dsc_t * dsc)
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 115:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 116:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t dest_stride = lv_area_get_width(draw_ctx->buf_area);
 118:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 121:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 15


 127:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 128:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 129:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*With LV_COLOR_DEPTH 16 it means ARGB8565 (3 bytes format)*/
 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) * LV_IMG_PX_SIZE_AL
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 134:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 135:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 136:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_color_t * src_buf = dsc->src_buf;
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 142:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 143:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 144:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = 0;
 145:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 147:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t mask_stride;
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->antialiasing == 0) {
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 152:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(i = 0; i < mask_size; i++) {
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 155:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 156:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 157:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = lv_area_get_width(dsc->mask_area);
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 160:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 161:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 162:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = 0;
 164:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 165:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_move(&blend_area, -draw_ctx->buf_area->x1, -draw_ctx->buf_area->y1);
 167:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb) {
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 171:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 172:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_set_px(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 174:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 175:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 176:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 177:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(disp->driver->screen_transp) {
 178:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 179:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_argb(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride);
 180:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 181:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 182:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_argb(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mask_
 183:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 16


 184:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 185:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 189:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 190:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 192:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 198:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 199:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_blended(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, ma
 201:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 202:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 205:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
 207:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   STATIC FUNCTIONS
 208:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
 209:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 210:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
 211:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 214:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 215:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 216:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 217:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 222:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 223:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 224:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 225:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t w = lv_area_get_width(blend_area);
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 232:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 234:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 235:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 236:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stide;
 238:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 239:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 17


 241:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static LV_ATTRIBUTE_FAST_MEM void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               lv_coord_t dest_stride, lv_color_t color, lv_opa_t op
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               const lv_opa_t * mask, lv_coord_t mask_stride)
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 246:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 247:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 248:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 249:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 250:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 251:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 252:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 256:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 258:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 259:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 260:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 261:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 264:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 265:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_MIX_ROUND_OFS == 0 && LV_COLOR_DEPTH == 16
 266:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*lv_color_mix work with an optimized algorithm with 16 bit color depth.
 267:lvgl/src/draw/sw/lv_draw_sw_blend.c ****              *However, it introduces some rounded error on opa.
 268:lvgl/src/draw/sw/lv_draw_sw_blend.c ****              *Introduce the same error here too to make lv_color_premult produces the same result *
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = (uint32_t)((uint32_t)opa + 4) >> 3;
 270:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = opa << 3;
 271:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 272:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint16_t color_premult[3];
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 282:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = last_res_color;
 284:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 286:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 287:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 288:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 289:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 290:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 291:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         uint32_t c32 = color.full + ((uint32_t)color.full << 16);
 293:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 294:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 18


 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 300:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 301:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x <= x_end4; x += 4) {
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((lv_uintptr_t)dest_buf & 0x3) {
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 308:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 309:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 312:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 313:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)dest_buf;
 314:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 317:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[0] = color;
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[1] = color;
 320:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[2] = color;
 321:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[3] = color;
 322:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 325:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else if(mask32) {
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 331:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 336:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 340:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += (dest_stride - w);
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 343:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 344:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 345:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 348:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color;
 349:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 354:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 19


 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 359:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 365:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = last_res_color;
 367:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 369:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 372:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 373:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 374:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 376:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 377:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 378:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline void set_px_argb(uint8_t * buf, lv_color_t color, lv_opa_t opa)
 379:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 380:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t bg_color;
 381:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t res_color;
 382:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t bg_opa = buf[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 383:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 384:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0];
 385:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[1]);
 386:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[1] <= LV_OPA_MIN) return;
 387:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full;
 388:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0] + (buf[1] << 8);
 390:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[2]);
 391:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[2] <= LV_OPA_MIN) return;
 392:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full & 0xff;
 393:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = res_color.full >> 8;
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color = *((lv_color_t *)buf);
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[3]);
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[3] <= LV_OPA_MIN) return;
 398:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.ch.blue;
 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = res_color.ch.green;
 400:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[2] = res_color.ch.red;
 401:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 402:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 403:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 404:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline void set_px_argb_blend(uint8_t * buf, lv_color_t color, lv_opa_t opa, lv_color_t (*bl
 405:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                                                                    
 406:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 407:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_dest_color;
 408:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_src_color;
 409:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_res_color;
 410:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static uint32_t last_opa = 0xffff; /*Set to an invalid value for first*/
 411:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 20


 412:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t bg_color;
 413:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 414:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Get the BG color*/
 415:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 416:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[1] <= LV_OPA_MIN) return;
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0];
 418:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 419:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[2] <= LV_OPA_MIN) return;
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0] + (buf[1] << 8);
 421:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 422:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[3] <= LV_OPA_MIN) return;
 423:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color = *((lv_color_t *)buf);
 424:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 425:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 426:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Get the result color*/
 427:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(last_dest_color.full != bg_color.full || last_src_color.full != color.full || last_opa != op
 428:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = bg_color;
 429:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = color;
 430:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_opa = opa;
 431:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 432:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 433:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 434:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Set the result color*/
 435:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 436:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.full;
 437:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 438:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.full & 0xff;
 439:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = last_res_color.full >> 8;
 440:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 441:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.ch.blue;
 442:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = last_res_color.ch.green;
 443:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[2] = last_res_color.ch.red;
 444:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 445:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 446:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 447:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 448:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void LV_ATTRIBUTE_FAST_MEM fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
 449:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa,
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             const lv_opa_t * mask, lv_coord_t mask_stride)
 451:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 452:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 453:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 454:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 455:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 456:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 457:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 458:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 459:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t ctmp[LV_IMG_PX_SIZE_ALPHA_BYTE];
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_memcpy(ctmp, &color, sizeof(lv_color_t));
 461:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ctmp[LV_IMG_PX_SIZE_ALPHA_BYTE - 1] = opa;
 462:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 463:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 464:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 465:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 466:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 467:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf8, ctmp, LV_IMG_PX_SIZE_ALPHA_BYTE);
 468:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 21


 469:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 470:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 471:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (dest_stride - w) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 472:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 473:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 1; y < h; y++) {
 474:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf8, (uint8_t *) dest_buf, w * LV_IMG_PX_SIZE_ALPHA_BYTE);
 475:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 476:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 477:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 478:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 479:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 480:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 481:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 482:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 483:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     set_px_argb(dest_buf8, color, opa);
 484:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 485:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 486:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 488:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 489:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 490:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 491:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 492:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 493:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 494:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 496:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 497:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 498:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     set_px_argb(dest_buf8, color,  *mask);
 499:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 500:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 501:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 502:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 503:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 504:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 505:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 506:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 507:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 508:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 509:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 510:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 511:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 512:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 513:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 514:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 515:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 516:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 517:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 519:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, color,  opa_tmp);
 520:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 521:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 522:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 523:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 524:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 22


 526:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 527:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 528:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 530:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 531:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 532:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 533:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 534:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area,
 535:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa, const lv_opa_t * m
 536:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_blend_mode_t blend_mode)
 537:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 159              		.loc 1 537 1 is_stmt 1 view -0
 160              		.cfi_startproc
 161              		@ args = 16, pretend = 0, frame = 24
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		.loc 1 537 1 is_stmt 0 view .LVU36
 164 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 165              	.LCFI1:
 166              		.cfi_def_cfa_offset 36
 167              		.cfi_offset 4, -36
 168              		.cfi_offset 5, -32
 169              		.cfi_offset 6, -28
 170              		.cfi_offset 7, -24
 171              		.cfi_offset 8, -20
 172              		.cfi_offset 9, -16
 173              		.cfi_offset 10, -12
 174              		.cfi_offset 11, -8
 175              		.cfi_offset 14, -4
 176 0004 87B0     		sub	sp, sp, #28
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 64
 179 0006 0546     		mov	r5, r0
 180 0008 0392     		str	r2, [sp, #12]
 181 000a 9946     		mov	r9, r3	@ movhi
 182              	.LVL19:
 183              		.loc 1 537 1 view .LVU37
 184 000c 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 185 0010 0193     		str	r3, [sp, #4]
 186 0012 119F     		ldr	r7, [sp, #68]
 187 0014 BDF94830 		ldrsh	r3, [sp, #72]
 188 0018 0593     		str	r3, [sp, #20]
 189 001a 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
 190              	.LVL20:
 538:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 539:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 191              		.loc 1 539 5 is_stmt 1 view .LVU38
 192              	.LBB58:
 193              	.LBI58:
 194              		.file 3 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 23


   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 24


  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 25


 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 195              		.loc 3 123 26 view .LVU39
 196              	.LBB59:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 197              		.loc 3 125 5 view .LVU40
 198              		.loc 3 125 31 is_stmt 0 view .LVU41
 199 001e B1F80480 		ldrh	r8, [r1, #4]
 200              		.loc 3 125 44 view .LVU42
 201 0022 0B88     		ldrh	r3, [r1]
 202              		.loc 3 125 36 view .LVU43
 203 0024 A8EB0308 		sub	r8, r8, r3
 204 0028 1FFA88F8 		uxth	r8, r8
 205              		.loc 3 125 49 view .LVU44
 206 002c 08F10108 		add	r8, r8, #1
 207              		.loc 3 125 12 view .LVU45
 208 0030 0FFA88F8 		sxth	r8, r8
 209              	.LVL21:
 210              		.loc 3 125 12 view .LVU46
 211              	.LBE59:
 212              	.LBE58:
 540:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 213              		.loc 1 540 5 is_stmt 1 view .LVU47
 214              	.LBB60:
 215              	.LBI60:
 126:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 216              		.loc 3 133 26 view .LVU48
 217              	.LBB61:
 134:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 218              		.loc 3 135 5 view .LVU49
 219              		.loc 3 135 31 is_stmt 0 view .LVU50
 220 0034 CB88     		ldrh	r3, [r1, #6]
 221              		.loc 3 135 44 view .LVU51
 222 0036 4988     		ldrh	r1, [r1, #2]
 223              	.LVL22:
 224              		.loc 3 135 36 view .LVU52
 225 0038 5B1A     		subs	r3, r3, r1
 226 003a 9BB2     		uxth	r3, r3
 227              		.loc 3 135 49 view .LVU53
 228 003c 0133     		adds	r3, r3, #1
 229              		.loc 3 135 12 view .LVU54
 230 003e 0FFA83FB 		sxth	fp, r3
 231              	.LVL23:
 232              		.loc 3 135 12 view .LVU55
 233              	.LBE61:
 234              	.LBE60:
 541:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 542:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 26


 235              		.loc 1 542 5 is_stmt 1 view .LVU56
 543:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 236              		.loc 1 543 5 view .LVU57
 544:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 545:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 237              		.loc 1 545 5 view .LVU58
 546:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 238              		.loc 1 546 5 view .LVU59
 239 0042 022A     		cmp	r2, #2
 240 0044 13D0     		beq	.L22
 241 0046 032A     		cmp	r2, #3
 242 0048 14D0     		beq	.L23
 243 004a 012A     		cmp	r2, #1
 244 004c 02D0     		beq	.L29
 245              	.LVL24:
 246              	.L6:
 547:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 548:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 549:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 554:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 555:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 556:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 557:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 558:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 559:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 560:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 561:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 570:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 572:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 574:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 575:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 577:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 578:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color;
 580:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color;
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 585:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 27


 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 591:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa_tmp);
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 595:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 597:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 600:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 601:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 602:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 247              		.loc 1 602 1 is_stmt 0 view .LVU60
 248 004e 07B0     		add	sp, sp, #28
 249              	.LCFI3:
 250              		.cfi_remember_state
 251              		.cfi_def_cfa_offset 36
 252              		@ sp needed
 253 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 254              	.LVL25:
 255              	.L29:
 256              	.LCFI4:
 257              		.cfi_restore_state
 546:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 258              		.loc 1 546 5 view .LVU61
 259 0054 DFF8F8A0 		ldr	r10, .L34
 260              	.L7:
 261              	.LVL26:
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 262              		.loc 1 562 5 is_stmt 1 view .LVU62
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 263              		.loc 1 562 7 is_stmt 0 view .LVU63
 264 0058 7FB1     		cbz	r7, .L30
 265              	.LBB62:
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color;
 266              		.loc 1 579 9 is_stmt 1 view .LVU64
 580:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 267              		.loc 1 580 9 view .LVU65
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 268              		.loc 1 581 9 view .LVU66
 269              	.LVL27:
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 270              		.loc 1 582 9 view .LVU67
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 271              		.loc 1 582 25 is_stmt 0 view .LVU68
 272 005a 2B88     		ldrh	r3, [r5]
 273              	.LVL28:
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 274              		.loc 1 582 25 view .LVU69
 275 005c 1946     		mov	r1, r3	@ movhi
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 276              		.loc 1 583 9 is_stmt 1 view .LVU70
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 277              		.loc 1 583 32 is_stmt 0 view .LVU71
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 28


 278 005e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 279              	.LVL29:
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 280              		.loc 1 583 18 view .LVU72
 281 0060 FC2B     		cmp	r3, #252
 282 0062 37D8     		bhi	.L25
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 283              		.loc 1 583 58 discriminator 1 view .LVU73
 284 0064 019A     		ldr	r2, [sp, #4]
 285 0066 02FB03F3 		mul	r3, r2, r3
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 286              		.loc 1 583 18 discriminator 1 view .LVU74
 287 006a 1A0A     		lsrs	r2, r3, #8
 288 006c 33E0     		b	.L14
 289              	.LVL30:
 290              	.L22:
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 291              		.loc 1 583 18 discriminator 1 view .LVU75
 292              	.LBE62:
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 293              		.loc 1 551 22 view .LVU76
 294 006e DFF8E4A0 		ldr	r10, .L34+4
 295 0072 F1E7     		b	.L7
 296              	.L23:
 554:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 297              		.loc 1 554 22 view .LVU77
 298 0074 DFF8E0A0 		ldr	r10, .L34+8
 299 0078 EEE7     		b	.L7
 300              	.LVL31:
 301              	.L30:
 302              	.LBB63:
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 303              		.loc 1 563 9 is_stmt 1 view .LVU78
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 304              		.loc 1 563 20 is_stmt 0 view .LVU79
 305 007a 2E88     		ldrh	r6, [r5]
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 306              		.loc 1 564 9 is_stmt 1 view .LVU80
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 307              		.loc 1 564 37 is_stmt 0 view .LVU81
 308 007c 019C     		ldr	r4, [sp, #4]
 309 007e 2246     		mov	r2, r4
 310              	.LVL32:
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 311              		.loc 1 564 37 view .LVU82
 312 0080 3146     		mov	r1, r6	@ movhi
 313              	.LVL33:
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 314              		.loc 1 564 37 view .LVU83
 315 0082 4846     		mov	r0, r9	@ movhi
 316              	.LVL34:
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 317              		.loc 1 564 37 view .LVU84
 318 0084 D047     		blx	r10
 319              	.LVL35:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 320              		.loc 1 565 9 is_stmt 1 view .LVU85
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 29


 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 321              		.loc 1 565 9 is_stmt 0 view .LVU86
 322 0086 CDF808B0 		str	fp, [sp, #8]
 323 008a BB46     		mov	fp, r7
 324              	.LVL36:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 325              		.loc 1 565 9 view .LVU87
 326 008c 5746     		mov	r7, r10
 327 008e A246     		mov	r10, r4
 328              	.LVL37:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 329              		.loc 1 565 9 view .LVU88
 330 0090 19E0     		b	.L10
 331              	.LVL38:
 332              	.L11:
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 333              		.loc 1 571 17 is_stmt 1 discriminator 2 view .LVU89
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 334              		.loc 1 571 29 is_stmt 0 discriminator 2 view .LVU90
 335 0092 ABF80000 		strh	r0, [fp]	@ movhi
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 336              		.loc 1 566 32 is_stmt 1 discriminator 2 view .LVU91
 337 0096 0134     		adds	r4, r4, #1
 338              	.LVL39:
 339              	.L13:
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 340              		.loc 1 566 26 discriminator 1 view .LVU92
 341 0098 4445     		cmp	r4, r8
 342 009a 0DDA     		bge	.L31
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 343              		.loc 1 567 17 view .LVU93
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 344              		.loc 1 567 35 is_stmt 0 view .LVU94
 345 009c B3B2     		uxth	r3, r6
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 346              		.loc 1 567 52 view .LVU95
 347 009e 05EB440B 		add	fp, r5, r4, lsl #1
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 348              		.loc 1 567 55 view .LVU96
 349 00a2 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 350              		.loc 1 567 19 view .LVU97
 351 00a6 9342     		cmp	r3, r2
 352 00a8 F3D0     		beq	.L11
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 353              		.loc 1 568 21 is_stmt 1 view .LVU98
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 354              		.loc 1 568 37 is_stmt 0 view .LVU99
 355 00aa 35F81460 		ldrh	r6, [r5, r4, lsl #1]
 356              	.LVL40:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 357              		.loc 1 569 21 is_stmt 1 view .LVU100
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 358              		.loc 1 569 38 is_stmt 0 view .LVU101
 359 00ae 5246     		mov	r2, r10
 360              	.LVL41:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 30


 361              		.loc 1 569 38 view .LVU102
 362 00b0 3146     		mov	r1, r6	@ movhi
 363 00b2 4846     		mov	r0, r9	@ movhi
 364              	.LVL42:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 365              		.loc 1 569 38 view .LVU103
 366 00b4 B847     		blx	r7
 367              	.LVL43:
 368 00b6 ECE7     		b	.L11
 369              	.LVL44:
 370              	.L31:
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 371              		.loc 1 573 22 discriminator 2 view .LVU104
 372 00b8 DDF804B0 		ldr	fp, [sp, #4]
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 373              		.loc 1 573 13 is_stmt 1 discriminator 2 view .LVU105
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 374              		.loc 1 573 22 is_stmt 0 discriminator 2 view .LVU106
 375 00bc 039B     		ldr	r3, [sp, #12]
 376 00be 05EB4305 		add	r5, r5, r3, lsl #1
 377              	.LVL45:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 378              		.loc 1 565 28 is_stmt 1 discriminator 2 view .LVU107
 379 00c2 0BF1010B 		add	fp, fp, #1
 380              	.LVL46:
 381              	.L10:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 382              		.loc 1 565 22 discriminator 1 view .LVU108
 383 00c6 029B     		ldr	r3, [sp, #8]
 384 00c8 9B45     		cmp	fp, r3
 385 00ca C0DA     		bge	.L6
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 386              		.loc 1 566 19 is_stmt 0 view .LVU109
 387 00cc 0024     		movs	r4, #0
 388 00ce CDF804B0 		str	fp, [sp, #4]
 389 00d2 E1E7     		b	.L13
 390              	.LVL47:
 391              	.L25:
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 392              		.loc 1 566 19 view .LVU110
 393              	.LBE63:
 394              	.LBB64:
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 395              		.loc 1 583 18 view .LVU111
 396 00d4 019A     		ldr	r2, [sp, #4]
 397              	.L14:
 398              	.LVL48:
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 399              		.loc 1 584 9 is_stmt 1 discriminator 4 view .LVU112
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 400              		.loc 1 584 26 is_stmt 0 discriminator 4 view .LVU113
 401 00d6 0C46     		mov	r4, r1	@ movhi
 402              	.LVL49:
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 403              		.loc 1 584 26 discriminator 4 view .LVU114
 404 00d8 4846     		mov	r0, r9	@ movhi
 405              	.LVL50:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 31


 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 406              		.loc 1 584 26 discriminator 4 view .LVU115
 407 00da D047     		blx	r10
 408              	.LVL51:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 409              		.loc 1 586 9 is_stmt 1 discriminator 4 view .LVU116
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 410              		.loc 1 581 18 is_stmt 0 discriminator 4 view .LVU117
 411 00dc 0023     		movs	r3, #0
 412 00de CDF810B0 		str	fp, [sp, #16]
 413 00e2 9B46     		mov	fp, r3
 414              	.LVL52:
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 415              		.loc 1 581 18 discriminator 4 view .LVU118
 416 00e4 A446     		mov	ip, r4	@ movhi
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 417              		.loc 1 586 9 discriminator 4 view .LVU119
 418 00e6 2CE0     		b	.L15
 419              	.LVL53:
 420              	.L33:
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 421              		.loc 1 589 59 discriminator 1 view .LVU120
 422 00e8 1FFA8CF1 		uxth	r1, ip
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 423              		.loc 1 589 79 discriminator 1 view .LVU121
 424 00ec 35F814E0 		ldrh	lr, [r5, r4, lsl #1]
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 425              		.loc 1 589 41 discriminator 1 view .LVU122
 426 00f0 7145     		cmp	r1, lr
 427 00f2 16D1     		bne	.L17
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 428              		.loc 1 589 41 discriminator 1 view .LVU123
 429 00f4 08E0     		b	.L18
 430              	.L26:
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 431              		.loc 1 590 29 view .LVU124
 432 00f6 019A     		ldr	r2, [sp, #4]
 433              	.LVL54:
 434              	.L19:
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 435              		.loc 1 592 21 is_stmt 1 discriminator 4 view .LVU125
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 436              		.loc 1 592 38 is_stmt 0 discriminator 4 view .LVU126
 437 00f8 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 438 00fc 4846     		mov	r0, r9	@ movhi
 439              	.LVL55:
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 440              		.loc 1 592 38 discriminator 4 view .LVU127
 441 00fe D047     		blx	r10
 442              	.LVL56:
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 443              		.loc 1 593 21 is_stmt 1 discriminator 4 view .LVU128
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 444              		.loc 1 593 31 is_stmt 0 discriminator 4 view .LVU129
 445 0100 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 446              	.LVL57:
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 32


 447              		.loc 1 594 21 is_stmt 1 discriminator 4 view .LVU130
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 448              		.loc 1 594 42 is_stmt 0 discriminator 4 view .LVU131
 449 0104 35F816C0 		ldrh	ip, [r5, r6, lsl #1]
 450              	.LVL58:
 451              	.L18:
 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 452              		.loc 1 596 17 is_stmt 1 view .LVU132
 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 453              		.loc 1 596 29 is_stmt 0 view .LVU133
 454 0108 25F81600 		strh	r0, [r5, r6, lsl #1]	@ movhi
 455              	.L16:
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 456              		.loc 1 587 32 is_stmt 1 discriminator 2 view .LVU134
 457 010c 0134     		adds	r4, r4, #1
 458              	.LVL59:
 459              	.L21:
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 460              		.loc 1 587 26 discriminator 1 view .LVU135
 461 010e 4445     		cmp	r4, r8
 462 0110 0EDA     		bge	.L32
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 463              		.loc 1 588 17 view .LVU136
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 464              		.loc 1 588 24 is_stmt 0 view .LVU137
 465 0112 2646     		mov	r6, r4
 466 0114 07EB040B 		add	fp, r7, r4
 467 0118 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 468              		.loc 1 588 19 view .LVU138
 469 011a 002A     		cmp	r2, #0
 470 011c F6D0     		beq	.L16
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 471              		.loc 1 589 17 is_stmt 1 view .LVU139
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 472              		.loc 1 589 19 is_stmt 0 view .LVU140
 473 011e 9A42     		cmp	r2, r3
 474 0120 E2D0     		beq	.L33
 475              	.L17:
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 476              		.loc 1 590 21 is_stmt 1 view .LVU141
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 477              		.loc 1 590 29 is_stmt 0 view .LVU142
 478 0122 FC2A     		cmp	r2, #252
 479 0124 E7D8     		bhi	.L26
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 480              		.loc 1 590 61 discriminator 1 view .LVU143
 481 0126 019B     		ldr	r3, [sp, #4]
 482              	.LVL60:
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 483              		.loc 1 590 61 discriminator 1 view .LVU144
 484 0128 03FB02F2 		mul	r2, r3, r2
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 485              		.loc 1 590 29 discriminator 1 view .LVU145
 486 012c 120A     		lsrs	r2, r2, #8
 487 012e E3E7     		b	.L19
 488              	.LVL61:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 33


 489              	.L32:
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 490              		.loc 1 598 22 discriminator 2 view .LVU146
 491 0130 DDF808B0 		ldr	fp, [sp, #8]
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 492              		.loc 1 598 13 is_stmt 1 discriminator 2 view .LVU147
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 493              		.loc 1 598 22 is_stmt 0 discriminator 2 view .LVU148
 494 0134 039A     		ldr	r2, [sp, #12]
 495 0136 05EB4205 		add	r5, r5, r2, lsl #1
 496              	.LVL62:
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 497              		.loc 1 599 13 is_stmt 1 discriminator 2 view .LVU149
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 498              		.loc 1 599 18 is_stmt 0 discriminator 2 view .LVU150
 499 013a 059A     		ldr	r2, [sp, #20]
 500 013c 1744     		add	r7, r7, r2
 501              	.LVL63:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 502              		.loc 1 586 28 is_stmt 1 discriminator 2 view .LVU151
 503 013e 0BF1010B 		add	fp, fp, #1
 504              	.LVL64:
 505              	.L15:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 506              		.loc 1 586 22 discriminator 1 view .LVU152
 507 0142 049A     		ldr	r2, [sp, #16]
 508 0144 9345     		cmp	fp, r2
 509 0146 82DA     		bge	.L6
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 510              		.loc 1 587 19 is_stmt 0 view .LVU153
 511 0148 0024     		movs	r4, #0
 512              	.LVL65:
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 513              		.loc 1 587 19 view .LVU154
 514 014a CDF808B0 		str	fp, [sp, #8]
 515 014e DEE7     		b	.L21
 516              	.L35:
 517              		.align	2
 518              	.L34:
 519 0150 00000000 		.word	color_blend_true_color_additive
 520 0154 00000000 		.word	color_blend_true_color_subtractive
 521 0158 00000000 		.word	color_blend_true_color_multiply
 522              	.LBE64:
 523              		.cfi_endproc
 524              	.LFE165:
 526              		.section	.text.map_blended,"ax",%progbits
 527              		.align	1
 528              		.syntax unified
 529              		.thumb
 530              		.thumb_func
 532              	map_blended:
 533              	.LVL66:
 534              	.LFB168:
 603:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 604:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 605:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 606:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 34


 607:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_opa_t * mask, lv_coord_t mask_stride)
 608:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 611:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 612:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 613:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 614:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 615:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 616:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 617:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 622:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 623:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 625:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 626:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 627:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 633:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 634:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 637:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 638:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 640:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 641:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void LV_ATTRIBUTE_FAST_MEM map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
 642:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              lv_coord_t dest_stride, const lv_color_t * src_buf,
 643:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              lv_coord_t src_stride, lv_opa_t opa, const lv_opa_t * 
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              lv_coord_t mask_stride)
 645:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 647:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 648:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 649:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 650:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 651:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 652:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 653:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 660:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 661:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 662:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 35


 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 666:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 669:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 670:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 671:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 672:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 673:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 674:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 677:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 679:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 680:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
 681:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 682:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 683:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 684:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 687:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 688:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 689:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < x_end4; x += 4) {
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 697:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 698:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 699:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 704:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 705:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask32++;
 707:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 708:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 709:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 712:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 713:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 717:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 718:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 719:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 720:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 36


 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 726:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 727:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 731:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 732:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 733:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 735:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 736:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 737:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void LV_ATTRIBUTE_FAST_MEM map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
 738:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            lv_coord_t dest_stride, const lv_color_t * src_buf,
 739:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            lv_coord_t src_stride, lv_opa_t opa, const lv_opa_t * ma
 740:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            lv_coord_t mask_stride, lv_blend_mode_t blend_mode)
 741:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 742:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 743:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 744:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 745:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 746:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 747:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 748:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 749:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 750:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 751:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 752:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 753:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 754:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 755:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 756:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 757:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 758:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 759:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 760:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 761:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 762:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 763:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = NULL;
 764:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 765:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 766:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 767:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 768:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 769:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             if(blend_fp == NULL && LV_COLOR_DEPTH == 32) {
 770:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(y = 0; y < h; y++) {
 771:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 772:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf += dest_stride;
 773:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     src_buf += src_stride;
 774:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 775:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 776:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             else {
 777:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint8_t * dest_buf8_row = dest_buf8;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 37


 778:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(y = 0; y < h; y++) {
 779:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(blend_fp == NULL) {
 780:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         for(x = 0; x < w; x++) {
 781:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb(dest_buf8, src_buf[x], LV_OPA_COVER);
 782:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 783:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 784:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 785:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 786:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         for(x = 0; x < w; x++) {
 787:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb_blend(dest_buf8, src_buf[x], LV_OPA_COVER, blend_fp);
 788:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 789:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 790:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 791:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 792:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 793:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 = dest_buf8_row;
 794:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     src_buf += src_stride;
 795:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 796:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 797:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 798:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*No mask but opacity*/
 799:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 800:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 801:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 802:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 803:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 804:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, src_buf[x], opa);
 805:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 806:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 807:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 808:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 809:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 810:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb_blend(dest_buf8, src_buf[x], opa, blend_fp);
 811:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 812:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 813:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 814:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 815:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 816:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 817:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 818:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 819:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 820:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 821:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 822:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 823:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 824:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 825:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 826:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 827:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 828:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 829:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, src_buf[x], mask[x]);
 830:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 831:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 832:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 833:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 834:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 38


 835:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb_blend(dest_buf8, src_buf[x], mask[x], blend_fp);
 836:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 837:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 838:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 839:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 840:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 841:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 842:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 843:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 844:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 845:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 846:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 847:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 848:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 849:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 850:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 851:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(mask[x]) {
 852:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8)
 853:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb(dest_buf8, src_buf[x], opa_tmp);
 854:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 855:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 856:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 857:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 858:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 859:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 860:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(mask[x]) {
 861:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8)
 862:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb_blend(dest_buf8, src_buf[x], opa_tmp, blend_fp);
 863:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 864:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 865:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 866:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 867:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 868:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 869:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 870:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 871:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 872:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 873:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 874:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 875:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 876:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 877:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 878:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 879:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
 880:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode)
 881:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 535              		.loc 1 881 1 is_stmt 1 view -0
 536              		.cfi_startproc
 537              		@ args = 20, pretend = 0, frame = 32
 538              		@ frame_needed = 0, uses_anonymous_args = 0
 539              		.loc 1 881 1 is_stmt 0 view .LVU156
 540 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 541              	.LCFI5:
 542              		.cfi_def_cfa_offset 36
 543              		.cfi_offset 4, -36
 544              		.cfi_offset 5, -32
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 39


 545              		.cfi_offset 6, -28
 546              		.cfi_offset 7, -24
 547              		.cfi_offset 8, -20
 548              		.cfi_offset 9, -16
 549              		.cfi_offset 10, -12
 550              		.cfi_offset 11, -8
 551              		.cfi_offset 14, -4
 552 0004 89B0     		sub	sp, sp, #36
 553              	.LCFI6:
 554              		.cfi_def_cfa_offset 72
 555 0006 8046     		mov	r8, r0
 556 0008 0592     		str	r2, [sp, #20]
 557 000a 9946     		mov	r9, r3
 558 000c BDF94830 		ldrsh	r3, [sp, #72]
 559              	.LVL67:
 560              		.loc 1 881 1 view .LVU157
 561 0010 0693     		str	r3, [sp, #24]
 562 0012 9DF84C30 		ldrb	r3, [sp, #76]	@ zero_extendqisi2
 563 0016 0193     		str	r3, [sp, #4]
 564 0018 149C     		ldr	r4, [sp, #80]
 565 001a BDF95430 		ldrsh	r3, [sp, #84]
 566 001e 0793     		str	r3, [sp, #28]
 567 0020 9DF85820 		ldrb	r2, [sp, #88]	@ zero_extendqisi2
 568              	.LVL68:
 882:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 883:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 569              		.loc 1 883 5 is_stmt 1 view .LVU158
 570              	.LBB65:
 571              	.LBI65:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 572              		.loc 3 123 26 view .LVU159
 573              	.LBB66:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 574              		.loc 3 125 5 view .LVU160
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 575              		.loc 3 125 31 is_stmt 0 view .LVU161
 576 0024 B1F804B0 		ldrh	fp, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 577              		.loc 3 125 44 view .LVU162
 578 0028 0B88     		ldrh	r3, [r1]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 579              		.loc 3 125 36 view .LVU163
 580 002a ABEB030B 		sub	fp, fp, r3
 581 002e 1FFA8BFB 		uxth	fp, fp
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 582              		.loc 3 125 49 view .LVU164
 583 0032 0BF1010B 		add	fp, fp, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 584              		.loc 3 125 12 view .LVU165
 585 0036 0FFA8BFB 		sxth	fp, fp
 586              	.LVL69:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 587              		.loc 3 125 12 view .LVU166
 588              	.LBE66:
 589              	.LBE65:
 884:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 590              		.loc 1 884 5 is_stmt 1 view .LVU167
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 40


 591              	.LBB67:
 592              	.LBI67:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 593              		.loc 3 133 26 view .LVU168
 594              	.LBB68:
 595              		.loc 3 135 5 view .LVU169
 596              		.loc 3 135 31 is_stmt 0 view .LVU170
 597 003a CB88     		ldrh	r3, [r1, #6]
 598              		.loc 3 135 44 view .LVU171
 599 003c 4988     		ldrh	r1, [r1, #2]
 600              	.LVL70:
 601              		.loc 3 135 36 view .LVU172
 602 003e 5B1A     		subs	r3, r3, r1
 603 0040 9BB2     		uxth	r3, r3
 604              		.loc 3 135 49 view .LVU173
 605 0042 0133     		adds	r3, r3, #1
 606              		.loc 3 135 12 view .LVU174
 607 0044 1BB2     		sxth	r3, r3
 608 0046 0493     		str	r3, [sp, #16]
 609              	.LVL71:
 610              		.loc 3 135 12 view .LVU175
 611              	.LBE68:
 612              	.LBE67:
 885:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 886:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 613              		.loc 1 886 5 is_stmt 1 view .LVU176
 887:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 614              		.loc 1 887 5 view .LVU177
 888:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 889:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 615              		.loc 1 889 5 view .LVU178
 890:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 616              		.loc 1 890 5 view .LVU179
 617 0048 022A     		cmp	r2, #2
 618 004a 16D0     		beq	.L55
 619 004c 032A     		cmp	r2, #3
 620 004e 17D0     		beq	.L56
 621 0050 012A     		cmp	r2, #1
 622 0052 02D0     		beq	.L62
 623              	.LVL72:
 624              	.L36:
 891:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 892:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 893:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 894:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 895:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 896:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 897:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 898:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 899:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 900:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 901:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 902:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 903:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 904:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 905:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_dest_color;
 906:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_src_color;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 41


 907:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 908:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 909:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 910:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 915:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 916:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 918:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 919:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 920:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 922:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 923:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 924:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 925:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 926:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 927:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 928:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 936:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 937:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 938:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 940:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 942:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 944:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 945:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 946:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 947:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 948:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 625              		.loc 1 948 1 is_stmt 0 view .LVU180
 626 0054 09B0     		add	sp, sp, #36
 627              	.LCFI7:
 628              		.cfi_remember_state
 629              		.cfi_def_cfa_offset 36
 630              		@ sp needed
 631 0056 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 632              	.LVL73:
 633              	.L62:
 634              	.LCFI8:
 635              		.cfi_restore_state
 890:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 636              		.loc 1 890 5 view .LVU181
 637 005a 4B4B     		ldr	r3, .L67
 638              	.LVL74:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 42


 890:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 639              		.loc 1 890 5 view .LVU182
 640 005c 0293     		str	r3, [sp, #8]
 641              	.L37:
 642              	.LVL75:
 905:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_src_color;
 643              		.loc 1 905 5 is_stmt 1 view .LVU183
 906:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 644              		.loc 1 906 5 view .LVU184
 908:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 645              		.loc 1 908 5 view .LVU185
 908:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 646              		.loc 1 908 7 is_stmt 0 view .LVU186
 647 005e 94B1     		cbz	r4, .L63
 648              	.LBB69:
 927:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 649              		.loc 1 927 9 is_stmt 1 view .LVU187
 927:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 650              		.loc 1 927 25 is_stmt 0 view .LVU188
 651 0060 B8F800A0 		ldrh	r10, [r8]
 928:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
 652              		.loc 1 928 9 is_stmt 1 view .LVU189
 928:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
 653              		.loc 1 928 24 is_stmt 0 view .LVU190
 654 0064 B9F80070 		ldrh	r7, [r9]
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 655              		.loc 1 929 9 is_stmt 1 view .LVU191
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 656              		.loc 1 929 33 is_stmt 0 view .LVU192
 657 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 658              		.loc 1 929 18 view .LVU193
 659 006a FC2B     		cmp	r3, #252
 660 006c 41D8     		bhi	.L58
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 661              		.loc 1 929 65 discriminator 1 view .LVU194
 662 006e 019A     		ldr	r2, [sp, #4]
 663 0070 02FB03F3 		mul	r3, r2, r3
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 664              		.loc 1 929 18 discriminator 1 view .LVU195
 665 0074 1B0A     		lsrs	r3, r3, #8
 666 0076 0093     		str	r3, [sp]
 667 0078 3DE0     		b	.L46
 668              	.LVL76:
 669              	.L55:
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 670              		.loc 1 929 18 discriminator 1 view .LVU196
 671              	.LBE69:
 895:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 672              		.loc 1 895 22 view .LVU197
 673 007a 444B     		ldr	r3, .L67+4
 674              	.LVL77:
 895:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 675              		.loc 1 895 22 view .LVU198
 676 007c 0293     		str	r3, [sp, #8]
 677 007e EEE7     		b	.L37
 678              	.LVL78:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 43


 679              	.L56:
 898:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 680              		.loc 1 898 22 view .LVU199
 681 0080 434B     		ldr	r3, .L67+8
 682              	.LVL79:
 898:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 683              		.loc 1 898 22 view .LVU200
 684 0082 0293     		str	r3, [sp, #8]
 685 0084 EBE7     		b	.L37
 686              	.LVL80:
 687              	.L63:
 688              	.LBB72:
 909:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 689              		.loc 1 909 9 is_stmt 1 view .LVU201
 909:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 690              		.loc 1 909 25 is_stmt 0 view .LVU202
 691 0086 B8F800A0 		ldrh	r10, [r8]
 910:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 692              		.loc 1 910 9 is_stmt 1 view .LVU203
 910:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 693              		.loc 1 910 24 is_stmt 0 view .LVU204
 694 008a B9F80070 		ldrh	r7, [r9]
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 695              		.loc 1 911 9 is_stmt 1 view .LVU205
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 696              		.loc 1 911 37 is_stmt 0 view .LVU206
 697 008e 019A     		ldr	r2, [sp, #4]
 698              	.LVL81:
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 699              		.loc 1 911 37 view .LVU207
 700 0090 5146     		mov	r1, r10	@ movhi
 701              	.LVL82:
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 702              		.loc 1 911 37 view .LVU208
 703 0092 3846     		mov	r0, r7	@ movhi
 704              	.LVL83:
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 705              		.loc 1 911 37 view .LVU209
 706 0094 029C     		ldr	r4, [sp, #8]
 707 0096 A047     		blx	r4
 708              	.LVL84:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 709              		.loc 1 912 9 is_stmt 1 view .LVU210
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 710              		.loc 1 912 15 is_stmt 0 view .LVU211
 711 0098 0025     		movs	r5, #0
 712 009a 2E46     		mov	r6, r5
 713 009c 2546     		mov	r5, r4
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 714              		.loc 1 912 9 view .LVU212
 715 009e 22E0     		b	.L40
 716              	.LVL85:
 717              	.L41:
 915:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 718              		.loc 1 915 21 is_stmt 1 view .LVU213
 915:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 719              		.loc 1 915 37 is_stmt 0 view .LVU214
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 44


 720 00a0 38F806A0 		ldrh	r10, [r8, r6]
 721              	.LVL86:
 916:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 722              		.loc 1 916 21 is_stmt 1 view .LVU215
 916:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 723              		.loc 1 916 36 is_stmt 0 view .LVU216
 724 00a4 0F88     		ldrh	r7, [r1]
 725              	.LVL87:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 726              		.loc 1 917 21 is_stmt 1 view .LVU217
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 727              		.loc 1 917 38 is_stmt 0 view .LVU218
 728 00a6 019A     		ldr	r2, [sp, #4]
 729              	.LVL88:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 730              		.loc 1 917 38 view .LVU219
 731 00a8 5146     		mov	r1, r10	@ movhi
 732              	.LVL89:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 733              		.loc 1 917 38 view .LVU220
 734 00aa 3846     		mov	r0, r7	@ movhi
 735              	.LVL90:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 736              		.loc 1 917 38 view .LVU221
 737 00ac A847     		blx	r5
 738              	.LVL91:
 739              	.L42:
 919:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 740              		.loc 1 919 17 is_stmt 1 discriminator 2 view .LVU222
 919:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 741              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU223
 742 00ae 28F80600 		strh	r0, [r8, r6]	@ movhi
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 743              		.loc 1 913 32 is_stmt 1 discriminator 2 view .LVU224
 744 00b2 0134     		adds	r4, r4, #1
 745              	.LVL92:
 746              	.L44:
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 747              		.loc 1 913 26 discriminator 1 view .LVU225
 748 00b4 5C45     		cmp	r4, fp
 749 00b6 0EDA     		bge	.L64
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 750              		.loc 1 914 17 view .LVU226
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 751              		.loc 1 914 34 is_stmt 0 view .LVU227
 752 00b8 BBB2     		uxth	r3, r7
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 753              		.loc 1 914 50 view .LVU228
 754 00ba 6600     		lsls	r6, r4, #1
 755 00bc 09EB4401 		add	r1, r9, r4, lsl #1
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 756              		.loc 1 914 53 view .LVU229
 757 00c0 39F81420 		ldrh	r2, [r9, r4, lsl #1]
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 758              		.loc 1 914 19 view .LVU230
 759 00c4 9342     		cmp	r3, r2
 760 00c6 EBD1     		bne	.L41
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 45


 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 761              		.loc 1 914 77 discriminator 1 view .LVU231
 762 00c8 1FFA8AF3 		uxth	r3, r10
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 763              		.loc 1 914 97 discriminator 1 view .LVU232
 764 00cc 38F81420 		ldrh	r2, [r8, r4, lsl #1]
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 765              		.loc 1 914 59 discriminator 1 view .LVU233
 766 00d0 9342     		cmp	r3, r2
 767 00d2 E5D1     		bne	.L41
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 768              		.loc 1 914 59 discriminator 1 view .LVU234
 769 00d4 EBE7     		b	.L42
 770              	.L64:
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 771              		.loc 1 921 22 discriminator 2 view .LVU235
 772 00d6 009E     		ldr	r6, [sp]
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 773              		.loc 1 921 13 is_stmt 1 discriminator 2 view .LVU236
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 774              		.loc 1 921 22 is_stmt 0 discriminator 2 view .LVU237
 775 00d8 059B     		ldr	r3, [sp, #20]
 776 00da 08EB4308 		add	r8, r8, r3, lsl #1
 777              	.LVL93:
 922:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 778              		.loc 1 922 13 is_stmt 1 discriminator 2 view .LVU238
 922:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 779              		.loc 1 922 21 is_stmt 0 discriminator 2 view .LVU239
 780 00de 069B     		ldr	r3, [sp, #24]
 781 00e0 09EB4309 		add	r9, r9, r3, lsl #1
 782              	.LVL94:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 783              		.loc 1 912 28 is_stmt 1 discriminator 2 view .LVU240
 784 00e4 0136     		adds	r6, r6, #1
 785              	.LVL95:
 786              	.L40:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 787              		.loc 1 912 22 discriminator 1 view .LVU241
 788 00e6 049B     		ldr	r3, [sp, #16]
 789 00e8 9E42     		cmp	r6, r3
 790 00ea B3DA     		bge	.L36
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 791              		.loc 1 913 19 is_stmt 0 view .LVU242
 792 00ec 0024     		movs	r4, #0
 793 00ee 0096     		str	r6, [sp]
 794 00f0 E0E7     		b	.L44
 795              	.LVL96:
 796              	.L58:
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 797              		.loc 1 913 19 view .LVU243
 798              	.LBE72:
 799              	.LBB73:
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 800              		.loc 1 929 18 view .LVU244
 801 00f2 019B     		ldr	r3, [sp, #4]
 802 00f4 0093     		str	r3, [sp]
 803              	.L46:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 46


 804              	.LVL97:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 805              		.loc 1 930 9 is_stmt 1 discriminator 4 view .LVU245
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 806              		.loc 1 930 37 is_stmt 0 discriminator 4 view .LVU246
 807 00f6 009A     		ldr	r2, [sp]
 808              	.LVL98:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 809              		.loc 1 930 37 discriminator 4 view .LVU247
 810 00f8 5146     		mov	r1, r10	@ movhi
 811              	.LVL99:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 812              		.loc 1 930 37 discriminator 4 view .LVU248
 813 00fa 3846     		mov	r0, r7	@ movhi
 814              	.LVL100:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 815              		.loc 1 930 37 discriminator 4 view .LVU249
 816 00fc 029B     		ldr	r3, [sp, #8]
 817 00fe 9847     		blx	r3
 818              	.LVL101:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 819              		.loc 1 931 9 is_stmt 1 discriminator 4 view .LVU250
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 820              		.loc 1 931 15 is_stmt 0 discriminator 4 view .LVU251
 821 0100 0026     		movs	r6, #0
 822 0102 3546     		mov	r5, r6
 823 0104 DDF800E0 		ldr	lr, [sp]
 824 0108 CDF800B0 		str	fp, [sp]
 825              	.LVL102:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 826              		.loc 1 931 15 discriminator 4 view .LVU252
 827 010c 2646     		mov	r6, r4
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 828              		.loc 1 931 9 discriminator 4 view .LVU253
 829 010e 34E0     		b	.L47
 830              	.LVL103:
 831              	.L59:
 832              	.LBB70:
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 833              		.loc 1 934 26 view .LVU254
 834 0110 019D     		ldr	r5, [sp, #4]
 835              	.L49:
 836              	.LVL104:
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 837              		.loc 1 935 17 is_stmt 1 discriminator 4 view .LVU255
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 838              		.loc 1 935 34 is_stmt 0 discriminator 4 view .LVU256
 839 0112 BBB2     		uxth	r3, r7
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 840              		.loc 1 935 50 discriminator 4 view .LVU257
 841 0114 09EB4B01 		add	r1, r9, fp, lsl #1
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 842              		.loc 1 935 53 discriminator 4 view .LVU258
 843 0118 39F81B20 		ldrh	r2, [r9, fp, lsl #1]
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 844              		.loc 1 935 19 discriminator 4 view .LVU259
 845 011c 9342     		cmp	r3, r2
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 47


 846 011e 19D0     		beq	.L65
 847              	.L50:
 936:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 848              		.loc 1 936 21 is_stmt 1 view .LVU260
 936:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 849              		.loc 1 936 37 is_stmt 0 view .LVU261
 850 0120 38F81BA0 		ldrh	r10, [r8, fp, lsl #1]
 851              	.LVL105:
 937:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 852              		.loc 1 937 21 is_stmt 1 view .LVU262
 937:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 853              		.loc 1 937 36 is_stmt 0 view .LVU263
 854 0124 0F88     		ldrh	r7, [r1]
 855              	.LVL106:
 938:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 856              		.loc 1 938 21 is_stmt 1 view .LVU264
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 857              		.loc 1 939 21 view .LVU265
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 858              		.loc 1 939 38 is_stmt 0 view .LVU266
 859 0126 2A46     		mov	r2, r5
 860              	.LVL107:
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 861              		.loc 1 939 38 view .LVU267
 862 0128 5146     		mov	r1, r10	@ movhi
 863              	.LVL108:
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 864              		.loc 1 939 38 view .LVU268
 865 012a 3846     		mov	r0, r7	@ movhi
 866              	.LVL109:
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 867              		.loc 1 939 38 view .LVU269
 868 012c 029B     		ldr	r3, [sp, #8]
 869 012e 9847     		blx	r3
 870              	.LVL110:
 938:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 871              		.loc 1 938 30 view .LVU270
 872 0130 AE46     		mov	lr, r5
 873              	.LVL111:
 874              	.L51:
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 875              		.loc 1 941 17 is_stmt 1 view .LVU271
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 876              		.loc 1 941 29 is_stmt 0 view .LVU272
 877 0132 28F81B00 		strh	r0, [r8, fp, lsl #1]	@ movhi
 878              	.LVL112:
 879              	.L48:
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 880              		.loc 1 941 29 view .LVU273
 881              	.LBE70:
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 882              		.loc 1 932 32 is_stmt 1 discriminator 2 view .LVU274
 883 0136 0134     		adds	r4, r4, #1
 884              	.LVL113:
 885              	.L53:
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 886              		.loc 1 932 26 discriminator 1 view .LVU275
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 48


 887 0138 009B     		ldr	r3, [sp]
 888 013a 9C42     		cmp	r4, r3
 889 013c 13DA     		bge	.L66
 890              	.LBB71:
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 891              		.loc 1 933 17 view .LVU276
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 892              		.loc 1 933 24 is_stmt 0 view .LVU277
 893 013e A346     		mov	fp, r4
 894 0140 355D     		ldrb	r5, [r6, r4]	@ zero_extendqisi2
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 895              		.loc 1 933 19 view .LVU278
 896 0142 002D     		cmp	r5, #0
 897 0144 F7D0     		beq	.L48
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 898              		.loc 1 934 17 is_stmt 1 view .LVU279
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 899              		.loc 1 934 26 is_stmt 0 view .LVU280
 900 0146 FC2D     		cmp	r5, #252
 901 0148 E2D8     		bhi	.L59
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 902              		.loc 1 934 72 discriminator 1 view .LVU281
 903 014a 019B     		ldr	r3, [sp, #4]
 904 014c 03FB05F5 		mul	r5, r3, r5
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 905              		.loc 1 934 26 discriminator 1 view .LVU282
 906 0150 2D0A     		lsrs	r5, r5, #8
 907 0152 DEE7     		b	.L49
 908              	.LVL114:
 909              	.L65:
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 910              		.loc 1 935 77 discriminator 1 view .LVU283
 911 0154 1FFA8AF3 		uxth	r3, r10
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 912              		.loc 1 935 97 discriminator 1 view .LVU284
 913 0158 38F81B20 		ldrh	r2, [r8, fp, lsl #1]
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 914              		.loc 1 935 59 discriminator 1 view .LVU285
 915 015c 9342     		cmp	r3, r2
 916 015e DFD1     		bne	.L50
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 917              		.loc 1 935 103 discriminator 2 view .LVU286
 918 0160 AE45     		cmp	lr, r5
 919 0162 DDD1     		bne	.L50
 920 0164 E5E7     		b	.L51
 921              	.LVL115:
 922              	.L66:
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 923              		.loc 1 935 103 discriminator 2 view .LVU287
 924              	.LBE71:
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 925              		.loc 1 943 22 discriminator 2 view .LVU288
 926 0166 039D     		ldr	r5, [sp, #12]
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 927              		.loc 1 943 13 is_stmt 1 discriminator 2 view .LVU289
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 928              		.loc 1 943 22 is_stmt 0 discriminator 2 view .LVU290
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 49


 929 0168 059B     		ldr	r3, [sp, #20]
 930 016a 08EB4308 		add	r8, r8, r3, lsl #1
 931              	.LVL116:
 944:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 932              		.loc 1 944 13 is_stmt 1 discriminator 2 view .LVU291
 944:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 933              		.loc 1 944 21 is_stmt 0 discriminator 2 view .LVU292
 934 016e 069B     		ldr	r3, [sp, #24]
 935 0170 09EB4309 		add	r9, r9, r3, lsl #1
 936              	.LVL117:
 945:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 937              		.loc 1 945 13 is_stmt 1 discriminator 2 view .LVU293
 945:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 938              		.loc 1 945 18 is_stmt 0 discriminator 2 view .LVU294
 939 0174 079B     		ldr	r3, [sp, #28]
 940 0176 1E44     		add	r6, r6, r3
 941              	.LVL118:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 942              		.loc 1 931 28 is_stmt 1 discriminator 2 view .LVU295
 943 0178 0135     		adds	r5, r5, #1
 944              	.LVL119:
 945              	.L47:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 946              		.loc 1 931 22 discriminator 1 view .LVU296
 947 017a 049B     		ldr	r3, [sp, #16]
 948 017c 9D42     		cmp	r5, r3
 949 017e BFF669AF 		bge	.L36
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 950              		.loc 1 932 19 is_stmt 0 view .LVU297
 951 0182 0024     		movs	r4, #0
 952 0184 0395     		str	r5, [sp, #12]
 953 0186 D7E7     		b	.L53
 954              	.L68:
 955              		.align	2
 956              	.L67:
 957 0188 00000000 		.word	color_blend_true_color_additive
 958 018c 00000000 		.word	color_blend_true_color_subtractive
 959 0190 00000000 		.word	color_blend_true_color_multiply
 960              	.LBE73:
 961              		.cfi_endproc
 962              	.LFE168:
 964              		.section	.text.color_blend_true_color_additive,"ax",%progbits
 965              		.align	1
 966              		.syntax unified
 967              		.thumb
 968              		.thumb_func
 970              	color_blend_true_color_additive:
 971              	.LVL120:
 972              	.LFB169:
 949:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 950:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 951:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 973              		.loc 1 951 1 is_stmt 1 view -0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 952:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 50


 953:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 977              		.loc 1 953 5 view .LVU299
 978              		.loc 1 953 7 is_stmt 0 view .LVU300
 979 0000 022A     		cmp	r2, #2
 980 0002 23D9     		bls	.L76
 951:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 981              		.loc 1 951 1 view .LVU301
 982 0004 08B5     		push	{r3, lr}
 983              	.LCFI9:
 984              		.cfi_def_cfa_offset 8
 985              		.cfi_offset 3, -8
 986              		.cfi_offset 14, -4
 954:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 955:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint32_t tmp;
 987              		.loc 1 955 5 is_stmt 1 view .LVU302
 956:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 1
 957:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.full + fg.full;
 958:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 959:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 960:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 988              		.loc 1 960 5 view .LVU303
 989              		.loc 1 960 16 is_stmt 0 view .LVU304
 990 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 991              		.loc 1 960 28 view .LVU305
 992 000a C0F3C42C 		ubfx	ip, r0, #11, #5
 993              		.loc 1 960 21 view .LVU306
 994 000e 6344     		add	r3, r3, ip
 995              	.LVL121:
 961:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 962:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 963:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 964:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
 996              		.loc 1 964 5 is_stmt 1 view .LVU307
 997              		.loc 1 964 17 is_stmt 0 view .LVU308
 998 0010 1F2B     		cmp	r3, #31
 999 0012 28BF     		it	cs
 1000 0014 1F23     		movcs	r3, #31
 1001              	.LVL122:
 1002              		.loc 1 964 15 view .LVU309
 1003 0016 63F3CF20 		bfi	r0, r3, #11, #5
 965:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 966:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 967:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 968:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 969:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 970:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 971:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 972:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 973:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
 974:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 1004              		.loc 1 974 5 is_stmt 1 view .LVU310
 1005              		.loc 1 974 16 is_stmt 0 view .LVU311
 1006 001a C1F34513 		ubfx	r3, r1, #5, #6
 1007              		.loc 1 974 30 view .LVU312
 1008 001e C0F3451C 		ubfx	ip, r0, #5, #6
 1009              	.LVL123:
 1010              		.loc 1 974 23 view .LVU313
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 51


 1011 0022 6344     		add	r3, r3, ip
 1012              	.LVL124:
 975:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
 1013              		.loc 1 975 5 is_stmt 1 view .LVU314
 1014              		.loc 1 975 19 is_stmt 0 view .LVU315
 1015 0024 3F2B     		cmp	r3, #63
 1016 0026 28BF     		it	cs
 1017 0028 3F23     		movcs	r3, #63
 1018              	.LVL125:
 1019              		.loc 1 975 17 view .LVU316
 1020 002a 63F34A10 		bfi	r0, r3, #5, #6
 976:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 977:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 978:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MIN(tmp, 63);
 979:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
 980:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 981:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 982:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 983:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 984:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 985:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 986:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 987:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 988:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 1021              		.loc 1 988 5 is_stmt 1 view .LVU317
 1022              		.loc 1 988 16 is_stmt 0 view .LVU318
 1023 002e 01F01F03 		and	r3, r1, #31
 1024              		.loc 1 988 29 view .LVU319
 1025 0032 00F01F0C 		and	ip, r0, #31
 1026              	.LVL126:
 1027              		.loc 1 988 22 view .LVU320
 1028 0036 6344     		add	r3, r3, ip
 1029              	.LVL127:
 989:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 990:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
 991:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 992:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
 1030              		.loc 1 992 5 is_stmt 1 view .LVU321
 1031              		.loc 1 992 18 is_stmt 0 view .LVU322
 1032 0038 1F2B     		cmp	r3, #31
 1033 003a 28BF     		it	cs
 1034 003c 1F23     		movcs	r3, #31
 1035              	.LVL128:
 1036              		.loc 1 992 16 view .LVU323
 1037 003e 63F30400 		bfi	r0, r3, #0, #5
 993:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 994:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
 995:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 996:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 997:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 998:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1038              		.loc 1 998 5 is_stmt 1 view .LVU324
 1039              		.loc 1 998 7 is_stmt 0 view .LVU325
 1040 0042 FF2A     		cmp	r2, #255
 1041 0044 01D0     		beq	.L71
 999:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1000:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 52


 1042              		.loc 1 1000 5 is_stmt 1 view .LVU326
 1043              		.loc 1 1000 12 is_stmt 0 view .LVU327
 1044 0046 FFF7FEFF 		bl	lv_color_mix
 1045              	.LVL129:
 1046              	.L71:
 1047              	.LVL130:
1001:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 1048              		.loc 1 1001 1 view .LVU328
 1049 004a 08BD     		pop	{r3, pc}
 1050              	.LVL131:
 1051              	.L76:
 1052              	.LCFI10:
 1053              		.cfi_def_cfa_offset 0
 1054              		.cfi_restore 3
 1055              		.cfi_restore 14
 953:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1056              		.loc 1 953 27 is_stmt 1 discriminator 1 view .LVU329
 953:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1057              		.loc 1 953 34 is_stmt 0 discriminator 1 view .LVU330
 1058 004c 0846     		mov	r0, r1	@ movhi
 1059              	.LVL132:
 1060              		.loc 1 1001 1 discriminator 1 view .LVU331
 1061 004e 7047     		bx	lr
 1062              		.cfi_endproc
 1063              	.LFE169:
 1065              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 1066              		.align	1
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1071              	color_blend_true_color_subtractive:
 1072              	.LVL133:
 1073              	.LFB170:
1002:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1003:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
1004:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 1074              		.loc 1 1004 1 is_stmt 1 view -0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1078              		.loc 1 1005 5 view .LVU333
 1079              		.loc 1 1005 7 is_stmt 0 view .LVU334
 1080 0000 022A     		cmp	r2, #2
 1081 0002 23D9     		bls	.L84
1004:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1082              		.loc 1 1004 1 view .LVU335
 1083 0004 08B5     		push	{r3, lr}
 1084              	.LCFI11:
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 3, -8
 1087              		.cfi_offset 14, -4
1006:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1007:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t tmp;
 1088              		.loc 1 1007 5 is_stmt 1 view .LVU336
1008:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 1089              		.loc 1 1008 5 view .LVU337
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 53


 1090              		.loc 1 1008 16 is_stmt 0 view .LVU338
 1091 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 1092              		.loc 1 1008 28 view .LVU339
 1093 000a C0F3C42C 		ubfx	ip, r0, #11, #5
 1094              		.loc 1 1008 9 view .LVU340
 1095 000e A3EB0C03 		sub	r3, r3, ip
 1096              	.LVL134:
1009:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 1097              		.loc 1 1009 5 is_stmt 1 view .LVU341
 1098              		.loc 1 1009 17 is_stmt 0 view .LVU342
 1099 0012 23EAE373 		bic	r3, r3, r3, asr #31
 1100              	.LVL135:
 1101              		.loc 1 1009 15 view .LVU343
 1102 0016 63F3CF20 		bfi	r0, r3, #11, #5
1010:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1011:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
1012:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 1103              		.loc 1 1012 5 is_stmt 1 view .LVU344
 1104              		.loc 1 1012 16 is_stmt 0 view .LVU345
 1105 001a C1F34513 		ubfx	r3, r1, #5, #6
 1106              		.loc 1 1012 30 view .LVU346
 1107 001e C0F3451C 		ubfx	ip, r0, #5, #6
 1108              	.LVL136:
 1109              		.loc 1 1012 9 view .LVU347
 1110 0022 A3EB0C03 		sub	r3, r3, ip
 1111              	.LVL137:
1013:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 1112              		.loc 1 1013 5 is_stmt 1 view .LVU348
 1113              		.loc 1 1013 19 is_stmt 0 view .LVU349
 1114 0026 23EAE373 		bic	r3, r3, r3, asr #31
 1115              	.LVL138:
 1116              		.loc 1 1013 17 view .LVU350
 1117 002a 63F34A10 		bfi	r0, r3, #5, #6
1014:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
1015:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1016:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MAX(tmp, 0);
1017:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
1018:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1019:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
1020:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1021:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 1118              		.loc 1 1021 5 is_stmt 1 view .LVU351
 1119              		.loc 1 1021 16 is_stmt 0 view .LVU352
 1120 002e 01F01F03 		and	r3, r1, #31
 1121              		.loc 1 1021 29 view .LVU353
 1122 0032 00F01F0C 		and	ip, r0, #31
 1123              	.LVL139:
 1124              		.loc 1 1021 9 view .LVU354
 1125 0036 A3EB0C03 		sub	r3, r3, ip
 1126              	.LVL140:
1022:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 1127              		.loc 1 1022 5 is_stmt 1 view .LVU355
 1128              		.loc 1 1022 18 is_stmt 0 view .LVU356
 1129 003a 23EAE373 		bic	r3, r3, r3, asr #31
 1130              	.LVL141:
 1131              		.loc 1 1022 16 view .LVU357
 1132 003e 63F30400 		bfi	r0, r3, #0, #5
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 54


1023:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1024:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1133              		.loc 1 1024 5 is_stmt 1 view .LVU358
 1134              		.loc 1 1024 7 is_stmt 0 view .LVU359
 1135 0042 FF2A     		cmp	r2, #255
 1136 0044 01D0     		beq	.L79
1025:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1026:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1137              		.loc 1 1026 5 is_stmt 1 view .LVU360
 1138              		.loc 1 1026 12 is_stmt 0 view .LVU361
 1139 0046 FFF7FEFF 		bl	lv_color_mix
 1140              	.LVL142:
 1141              	.L79:
 1142              	.LVL143:
1027:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 1143              		.loc 1 1027 1 view .LVU362
 1144 004a 08BD     		pop	{r3, pc}
 1145              	.LVL144:
 1146              	.L84:
 1147              	.LCFI12:
 1148              		.cfi_def_cfa_offset 0
 1149              		.cfi_restore 3
 1150              		.cfi_restore 14
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1151              		.loc 1 1005 27 is_stmt 1 discriminator 1 view .LVU363
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1152              		.loc 1 1005 34 is_stmt 0 discriminator 1 view .LVU364
 1153 004c 0846     		mov	r0, r1	@ movhi
 1154              	.LVL145:
 1155              		.loc 1 1027 1 discriminator 1 view .LVU365
 1156 004e 7047     		bx	lr
 1157              		.cfi_endproc
 1158              	.LFE170:
 1160              		.section	.text.color_blend_true_color_multiply,"ax",%progbits
 1161              		.align	1
 1162              		.syntax unified
 1163              		.thumb
 1164              		.thumb_func
 1166              	color_blend_true_color_multiply:
 1167              	.LVL146:
 1168              	.LFB171:
1028:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1029:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
1030:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 1169              		.loc 1 1030 1 is_stmt 1 view -0
 1170              		.cfi_startproc
 1171              		@ args = 0, pretend = 0, frame = 0
 1172              		@ frame_needed = 0, uses_anonymous_args = 0
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1173              		.loc 1 1031 5 view .LVU367
 1174              		.loc 1 1031 7 is_stmt 0 view .LVU368
 1175 0000 022A     		cmp	r2, #2
 1176 0002 22D9     		bls	.L92
1030:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 1177              		.loc 1 1030 1 view .LVU369
 1178 0004 08B5     		push	{r3, lr}
 1179              	.LCFI13:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 55


 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 3, -8
 1182              		.cfi_offset 14, -4
1032:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1033:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 32
1034:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 8;
1035:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 8;
1036:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 8;
1037:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
1038:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 5;
 1183              		.loc 1 1038 5 is_stmt 1 view .LVU370
 1184              		.loc 1 1038 23 is_stmt 0 view .LVU371
 1185 0006 C0F3C423 		ubfx	r3, r0, #11, #5
 1186              		.loc 1 1038 35 view .LVU372
 1187 000a C1F3C42C 		ubfx	ip, r1, #11, #5
 1188              		.loc 1 1038 28 view .LVU373
 1189 000e 0CFB03F3 		mul	r3, ip, r3
 1190              		.loc 1 1038 41 view .LVU374
 1191 0012 C3F34413 		ubfx	r3, r3, #5, #5
 1192              		.loc 1 1038 15 view .LVU375
 1193 0016 63F3CF20 		bfi	r0, r3, #11, #5
1039:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 5;
 1194              		.loc 1 1039 5 is_stmt 1 view .LVU376
 1195              		.loc 1 1039 24 is_stmt 0 view .LVU377
 1196 001a 00F01F03 		and	r3, r0, #31
 1197              		.loc 1 1039 37 view .LVU378
 1198 001e 01F01F0C 		and	ip, r1, #31
 1199              		.loc 1 1039 30 view .LVU379
 1200 0022 0CFB03F3 		mul	r3, ip, r3
 1201              		.loc 1 1039 44 view .LVU380
 1202 0026 5B09     		lsrs	r3, r3, #5
 1203              		.loc 1 1039 16 view .LVU381
 1204 0028 63F30400 		bfi	r0, r3, #0, #5
1040:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     LV_COLOR_SET_G(fg, (LV_COLOR_GET_G(fg) * LV_COLOR_GET_G(bg)) >> 6);
 1205              		.loc 1 1040 5 is_stmt 1 view .LVU382
 1206 002c C0F34513 		ubfx	r3, r0, #5, #6
 1207 0030 C1F3451C 		ubfx	ip, r1, #5, #6
 1208 0034 0CFB03F3 		mul	r3, ip, r3
 1209 0038 C3F38513 		ubfx	r3, r3, #6, #6
 1210 003c 63F34A10 		bfi	r0, r3, #5, #6
1041:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 8
1042:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 3;
1043:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 3;
1044:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 2;
1045:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
1046:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1047:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1211              		.loc 1 1047 5 view .LVU383
 1212              		.loc 1 1047 7 is_stmt 0 view .LVU384
 1213 0040 FF2A     		cmp	r2, #255
 1214 0042 01D0     		beq	.L87
1048:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1049:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1215              		.loc 1 1049 5 is_stmt 1 view .LVU385
 1216              		.loc 1 1049 12 is_stmt 0 view .LVU386
 1217 0044 FFF7FEFF 		bl	lv_color_mix
 1218              	.LVL147:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 56


 1219              	.L87:
 1220              	.LVL148:
1050:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 1221              		.loc 1 1050 1 view .LVU387
 1222 0048 08BD     		pop	{r3, pc}
 1223              	.LVL149:
 1224              	.L92:
 1225              	.LCFI14:
 1226              		.cfi_def_cfa_offset 0
 1227              		.cfi_restore 3
 1228              		.cfi_restore 14
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1229              		.loc 1 1031 27 is_stmt 1 discriminator 1 view .LVU388
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1230              		.loc 1 1031 34 is_stmt 0 discriminator 1 view .LVU389
 1231 004a 0846     		mov	r0, r1	@ movhi
 1232              	.LVL150:
 1233              		.loc 1 1050 1 discriminator 1 view .LVU390
 1234 004c 7047     		bx	lr
 1235              		.cfi_endproc
 1236              	.LFE171:
 1238              		.section	.text.fill_set_px,"ax",%progbits
 1239              		.align	1
 1240              		.syntax unified
 1241              		.thumb
 1242              		.thumb_func
 1244              	fill_set_px:
 1245              	.LVL151:
 1246              	.LFB163:
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1247              		.loc 1 212 1 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 12, pretend = 0, frame = 24
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1251              		.loc 1 212 1 is_stmt 0 view .LVU392
 1252 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1253              	.LCFI15:
 1254              		.cfi_def_cfa_offset 36
 1255              		.cfi_offset 4, -36
 1256              		.cfi_offset 5, -32
 1257              		.cfi_offset 6, -28
 1258              		.cfi_offset 7, -24
 1259              		.cfi_offset 8, -20
 1260              		.cfi_offset 9, -16
 1261              		.cfi_offset 10, -12
 1262              		.cfi_offset 11, -8
 1263              		.cfi_offset 14, -4
 1264 0004 8BB0     		sub	sp, sp, #44
 1265              	.LCFI16:
 1266              		.cfi_def_cfa_offset 80
 1267 0006 0590     		str	r0, [sp, #20]
 1268 0008 0D46     		mov	r5, r1
 1269 000a 0692     		str	r2, [sp, #24]
 1270 000c 9A46     		mov	r10, r3	@ movhi
 1271              	.LVL152:
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 57


 1272              		.loc 1 212 1 view .LVU393
 1273 000e 9DF850B0 		ldrb	fp, [sp, #80]	@ zero_extendqisi2
 1274 0012 159E     		ldr	r6, [sp, #84]
 1275 0014 BDF95830 		ldrsh	r3, [sp, #88]
 1276 0018 0993     		str	r3, [sp, #36]
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1277              		.loc 1 213 5 is_stmt 1 view .LVU394
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1278              		.loc 1 213 24 is_stmt 0 view .LVU395
 1279 001a FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1280              	.LVL153:
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1281              		.loc 1 213 24 view .LVU396
 1282 001e 8146     		mov	r9, r0
 1283              	.LVL154:
 215:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1284              		.loc 1 215 5 is_stmt 1 view .LVU397
 216:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1285              		.loc 1 216 5 view .LVU398
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 1286              		.loc 1 218 5 view .LVU399
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 1287              		.loc 1 218 7 is_stmt 0 view .LVU400
 1288 0020 9EB1     		cbz	r6, .L106
 1289              	.LBB74:
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 1290              		.loc 1 226 9 is_stmt 1 view .LVU401
 1291              	.LVL155:
 1292              	.LBB75:
 1293              	.LBI75:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1294              		.loc 3 123 26 view .LVU402
 1295              	.LBB76:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1296              		.loc 3 125 5 view .LVU403
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1297              		.loc 3 125 31 is_stmt 0 view .LVU404
 1298 0022 AF88     		ldrh	r7, [r5, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1299              		.loc 3 125 44 view .LVU405
 1300 0024 2B88     		ldrh	r3, [r5]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1301              		.loc 3 125 36 view .LVU406
 1302 0026 FF1A     		subs	r7, r7, r3
 1303 0028 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1304              		.loc 3 125 49 view .LVU407
 1305 002a 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1306              		.loc 3 125 12 view .LVU408
 1307 002c 3FB2     		sxth	r7, r7
 1308              	.LVL156:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1309              		.loc 3 125 12 view .LVU409
 1310              	.LBE76:
 1311              	.LBE75:
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 58


 1312              		.loc 1 227 9 is_stmt 1 view .LVU410
 1313              	.LBB77:
 1314              	.LBI77:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1315              		.loc 3 133 26 view .LVU411
 1316              	.LBB78:
 1317              		.loc 3 135 5 view .LVU412
 1318              		.loc 3 135 31 is_stmt 0 view .LVU413
 1319 002e EB88     		ldrh	r3, [r5, #6]
 1320              		.loc 3 135 44 view .LVU414
 1321 0030 6A88     		ldrh	r2, [r5, #2]
 1322              		.loc 3 135 36 view .LVU415
 1323 0032 9B1A     		subs	r3, r3, r2
 1324 0034 9BB2     		uxth	r3, r3
 1325              		.loc 3 135 49 view .LVU416
 1326 0036 0133     		adds	r3, r3, #1
 1327              		.loc 3 135 12 view .LVU417
 1328 0038 0FFA83F8 		sxth	r8, r3
 1329              	.LVL157:
 1330              		.loc 3 135 12 view .LVU418
 1331              	.LBE78:
 1332              	.LBE77:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1333              		.loc 1 229 9 is_stmt 1 view .LVU419
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1334              		.loc 1 229 15 is_stmt 0 view .LVU420
 1335 003c 4FF0000C 		mov	ip, #0
 1336 0040 0790     		str	r0, [sp, #28]
 1337 0042 E146     		mov	r9, ip
 1338 0044 CDF82080 		str	r8, [sp, #32]
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1339              		.loc 1 229 9 view .LVU421
 1340 0048 44E0     		b	.L100
 1341              	.LVL158:
 1342              	.L106:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1343              		.loc 1 229 9 view .LVU422
 1344              	.LBE74:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1345              		.loc 1 219 9 is_stmt 1 view .LVU423
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1346              		.loc 1 219 27 is_stmt 0 view .LVU424
 1347 004a B5F90270 		ldrsh	r7, [r5, #2]
 1348              	.LVL159:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1349              		.loc 1 219 27 view .LVU425
 1350 004e 3A46     		mov	r2, r7
 1351 0050 059E     		ldr	r6, [sp, #20]
 1352 0052 DDF81880 		ldr	r8, [sp, #24]
 1353 0056 5B46     		mov	r3, fp
 1354 0058 AB46     		mov	fp, r5
 1355 005a 1D46     		mov	r5, r3
 1356              	.LVL160:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1357              		.loc 1 219 9 view .LVU426
 1358 005c 13E0     		b	.L95
 1359              	.LVL161:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 59


 1360              	.L97:
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1361              		.loc 1 221 17 is_stmt 1 discriminator 3 view .LVU427
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1362              		.loc 1 221 21 is_stmt 0 discriminator 3 view .LVU428
 1363 005e D9F80000 		ldr	r0, [r9]
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1364              		.loc 1 221 29 discriminator 3 view .LVU429
 1365 0062 C769     		ldr	r7, [r0, #28]
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1366              		.loc 1 221 17 discriminator 3 view .LVU430
 1367 0064 0295     		str	r5, [sp, #8]
 1368 0066 ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1369 006a BDF91430 		ldrsh	r3, [sp, #20]
 1370 006e 0093     		str	r3, [sp]
 1371 0070 23B2     		sxth	r3, r4
 1372 0072 4246     		mov	r2, r8
 1373 0074 3146     		mov	r1, r6
 1374 0076 B847     		blx	r7
 1375              	.LVL162:
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1376              		.loc 1 220 59 is_stmt 1 discriminator 3 view .LVU431
 1377 0078 0134     		adds	r4, r4, #1
 1378              	.LVL163:
 1379              	.L96:
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1380              		.loc 1 220 39 discriminator 1 view .LVU432
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1381              		.loc 1 220 52 is_stmt 0 discriminator 1 view .LVU433
 1382 007a BBF90430 		ldrsh	r3, [fp, #4]
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1383              		.loc 1 220 39 discriminator 1 view .LVU434
 1384 007e A342     		cmp	r3, r4
 1385 0080 EDDA     		bge	.L97
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1386              		.loc 1 219 55 discriminator 2 view .LVU435
 1387 0082 059A     		ldr	r2, [sp, #20]
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1388              		.loc 1 219 55 is_stmt 1 discriminator 2 view .LVU436
 1389 0084 0132     		adds	r2, r2, #1
 1390              	.LVL164:
 1391              	.L95:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1392              		.loc 1 219 35 discriminator 1 view .LVU437
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1393              		.loc 1 219 48 is_stmt 0 discriminator 1 view .LVU438
 1394 0086 BBF90630 		ldrsh	r3, [fp, #6]
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1395              		.loc 1 219 35 discriminator 1 view .LVU439
 1396 008a 9342     		cmp	r3, r2
 1397 008c 27DB     		blt	.L93
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1398              		.loc 1 220 13 is_stmt 1 view .LVU440
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1399              		.loc 1 220 31 is_stmt 0 view .LVU441
 1400 008e BBF90040 		ldrsh	r4, [fp]
 1401              	.LVL165:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 60


 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1402              		.loc 1 220 31 view .LVU442
 1403 0092 0592     		str	r2, [sp, #20]
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1404              		.loc 1 220 13 view .LVU443
 1405 0094 F1E7     		b	.L96
 1406              	.LVL166:
 1407              	.L101:
 1408              	.LBB79:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1409              		.loc 1 230 32 is_stmt 1 discriminator 2 view .LVU444
 1410 0096 0134     		adds	r4, r4, #1
 1411              	.LVL167:
 1412              	.L103:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1413              		.loc 1 230 26 discriminator 1 view .LVU445
 1414 0098 BC42     		cmp	r4, r7
 1415 009a 17DA     		bge	.L107
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1416              		.loc 1 231 17 view .LVU446
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1417              		.loc 1 231 24 is_stmt 0 view .LVU447
 1418 009c 325D     		ldrb	r2, [r6, r4]	@ zero_extendqisi2
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1419              		.loc 1 231 19 view .LVU448
 1420 009e 002A     		cmp	r2, #0
 1421 00a0 F9D0     		beq	.L101
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1422              		.loc 1 233 21 is_stmt 1 view .LVU449
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1423              		.loc 1 233 25 is_stmt 0 view .LVU450
 1424 00a2 079B     		ldr	r3, [sp, #28]
 1425 00a4 1868     		ldr	r0, [r3]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1426              		.loc 1 233 33 view .LVU451
 1427 00a6 D0F81C80 		ldr	r8, [r0, #28]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1428              		.loc 1 233 100 view .LVU452
 1429 00aa 2B88     		ldrh	r3, [r5]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1430              		.loc 1 233 105 view .LVU453
 1431 00ac 2344     		add	r3, r3, r4
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1432              		.loc 1 233 120 view .LVU454
 1433 00ae 6988     		ldrh	r1, [r5, #2]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1434              		.loc 1 233 125 view .LVU455
 1435 00b0 4944     		add	r1, r1, r9
 234:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1436              		.loc 1 234 45 view .LVU456
 1437 00b2 02FB0BF2 		mul	r2, r2, fp
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1438              		.loc 1 233 21 view .LVU457
 1439 00b6 120A     		lsrs	r2, r2, #8
 1440 00b8 0292     		str	r2, [sp, #8]
 1441 00ba ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1442 00be 09B2     		sxth	r1, r1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 61


 1443 00c0 0091     		str	r1, [sp]
 1444 00c2 1BB2     		sxth	r3, r3
 1445 00c4 069A     		ldr	r2, [sp, #24]
 1446 00c6 0599     		ldr	r1, [sp, #20]
 1447 00c8 C047     		blx	r8
 1448              	.LVL168:
 1449 00ca E4E7     		b	.L101
 1450              	.L107:
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1451              		.loc 1 237 13 is_stmt 1 discriminator 2 view .LVU458
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1452              		.loc 1 237 18 is_stmt 0 discriminator 2 view .LVU459
 1453 00cc 099B     		ldr	r3, [sp, #36]
 1454 00ce 1E44     		add	r6, r6, r3
 1455              	.LVL169:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1456              		.loc 1 229 28 is_stmt 1 discriminator 2 view .LVU460
 1457 00d0 09F10109 		add	r9, r9, #1
 1458              	.LVL170:
 1459              	.L100:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1460              		.loc 1 229 22 discriminator 1 view .LVU461
 1461 00d4 089B     		ldr	r3, [sp, #32]
 1462 00d6 9945     		cmp	r9, r3
 1463 00d8 01DA     		bge	.L93
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1464              		.loc 1 230 19 is_stmt 0 view .LVU462
 1465 00da 0024     		movs	r4, #0
 1466 00dc DCE7     		b	.L103
 1467              	.LVL171:
 1468              	.L93:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1469              		.loc 1 230 19 view .LVU463
 1470              	.LBE79:
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1471              		.loc 1 240 1 view .LVU464
 1472 00de 0BB0     		add	sp, sp, #44
 1473              	.LCFI17:
 1474              		.cfi_def_cfa_offset 36
 1475              		@ sp needed
 1476 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1477              		.loc 1 240 1 view .LVU465
 1478              		.cfi_endproc
 1479              	.LFE163:
 1481              		.section	.text.map_set_px,"ax",%progbits
 1482              		.align	1
 1483              		.syntax unified
 1484              		.thumb
 1485              		.thumb_func
 1487              	map_set_px:
 1488              	.LVL172:
 1489              	.LFB166:
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1490              		.loc 1 609 1 is_stmt 1 view -0
 1491              		.cfi_startproc
 1492              		@ args = 16, pretend = 0, frame = 24
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 62


 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1494              		.loc 1 609 1 is_stmt 0 view .LVU467
 1495 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1496              	.LCFI18:
 1497              		.cfi_def_cfa_offset 36
 1498              		.cfi_offset 4, -36
 1499              		.cfi_offset 5, -32
 1500              		.cfi_offset 6, -28
 1501              		.cfi_offset 7, -24
 1502              		.cfi_offset 8, -20
 1503              		.cfi_offset 9, -16
 1504              		.cfi_offset 10, -12
 1505              		.cfi_offset 11, -8
 1506              		.cfi_offset 14, -4
 1507 0004 8BB0     		sub	sp, sp, #44
 1508              	.LCFI19:
 1509              		.cfi_def_cfa_offset 80
 1510 0006 0490     		str	r0, [sp, #16]
 1511 0008 0D46     		mov	r5, r1
 1512 000a 0592     		str	r2, [sp, #20]
 1513 000c 1F46     		mov	r7, r3
 1514 000e BDF95030 		ldrsh	r3, [sp, #80]
 1515              	.LVL173:
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1516              		.loc 1 609 1 view .LVU468
 1517 0012 0893     		str	r3, [sp, #32]
 1518 0014 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 1519 0018 DDF85880 		ldr	r8, [sp, #88]
 1520 001c BDF95C90 		ldrsh	r9, [sp, #92]
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1521              		.loc 1 610 5 is_stmt 1 view .LVU469
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1522              		.loc 1 610 24 is_stmt 0 view .LVU470
 1523 0020 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1524              	.LVL174:
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1525              		.loc 1 610 24 view .LVU471
 1526 0024 8246     		mov	r10, r0
 1527              	.LVL175:
 612:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1528              		.loc 1 612 5 is_stmt 1 view .LVU472
 1529              	.LBB80:
 1530              	.LBI80:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1531              		.loc 3 123 26 view .LVU473
 1532              	.LBB81:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1533              		.loc 3 125 5 view .LVU474
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1534              		.loc 3 125 31 is_stmt 0 view .LVU475
 1535 0026 AE88     		ldrh	r6, [r5, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1536              		.loc 3 125 44 view .LVU476
 1537 0028 2B88     		ldrh	r3, [r5]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1538              		.loc 3 125 36 view .LVU477
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 63


 1539 002a F61A     		subs	r6, r6, r3
 1540 002c B6B2     		uxth	r6, r6
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1541              		.loc 3 125 49 view .LVU478
 1542 002e 0136     		adds	r6, r6, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1543              		.loc 3 125 12 view .LVU479
 1544 0030 36B2     		sxth	r6, r6
 1545              	.LVL176:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1546              		.loc 3 125 12 view .LVU480
 1547              	.LBE81:
 1548              	.LBE80:
 613:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1549              		.loc 1 613 5 is_stmt 1 view .LVU481
 1550              	.LBB82:
 1551              	.LBI82:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1552              		.loc 3 133 26 view .LVU482
 1553              	.LBB83:
 1554              		.loc 3 135 5 view .LVU483
 1555              		.loc 3 135 31 is_stmt 0 view .LVU484
 1556 0032 EB88     		ldrh	r3, [r5, #6]
 1557              		.loc 3 135 44 view .LVU485
 1558 0034 6A88     		ldrh	r2, [r5, #2]
 1559              		.loc 3 135 36 view .LVU486
 1560 0036 9B1A     		subs	r3, r3, r2
 1561 0038 9BB2     		uxth	r3, r3
 1562              		.loc 3 135 49 view .LVU487
 1563 003a 0133     		adds	r3, r3, #1
 1564              		.loc 3 135 12 view .LVU488
 1565 003c 1BB2     		sxth	r3, r3
 1566 003e 0793     		str	r3, [sp, #28]
 1567              	.LVL177:
 1568              		.loc 3 135 12 view .LVU489
 1569              	.LBE83:
 1570              	.LBE82:
 615:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1571              		.loc 1 615 5 is_stmt 1 view .LVU490
 616:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1572              		.loc 1 616 5 view .LVU491
 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1573              		.loc 1 618 5 view .LVU492
 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1574              		.loc 1 618 7 is_stmt 0 view .LVU493
 1575 0040 B8F1000F 		cmp	r8, #0
 1576 0044 27D0     		beq	.L117
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1577              		.loc 1 628 15 view .LVU494
 1578 0046 4FF0000C 		mov	ip, #0
 1579 004a 0690     		str	r0, [sp, #24]
 1580 004c E246     		mov	r10, ip
 1581 004e CDF82490 		str	r9, [sp, #36]
 1582 0052 B946     		mov	r9, r7
 1583 0054 47E0     		b	.L110
 1584              	.LVL178:
 1585              	.L111:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 64


 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1586              		.loc 1 621 17 is_stmt 1 discriminator 3 view .LVU495
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1587              		.loc 1 621 21 is_stmt 0 discriminator 3 view .LVU496
 1588 0056 DAF80000 		ldr	r0, [r10]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1589              		.loc 1 621 29 discriminator 3 view .LVU497
 1590 005a C669     		ldr	r6, [r0, #28]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1591              		.loc 1 621 95 discriminator 3 view .LVU498
 1592 005c 2B88     		ldrh	r3, [r5]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1593              		.loc 1 621 100 discriminator 3 view .LVU499
 1594 005e 2344     		add	r3, r3, r4
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1595              		.loc 1 621 114 discriminator 3 view .LVU500
 1596 0060 6A88     		ldrh	r2, [r5, #2]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1597              		.loc 1 621 119 discriminator 3 view .LVU501
 1598 0062 4A44     		add	r2, r2, r9
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1599              		.loc 1 621 17 discriminator 3 view .LVU502
 1600 0064 CDF808B0 		str	fp, [sp, #8]
 1601 0068 37F81410 		ldrh	r1, [r7, r4, lsl #1]
 1602 006c ADF80410 		strh	r1, [sp, #4]	@ movhi
 1603 0070 12B2     		sxth	r2, r2
 1604 0072 0092     		str	r2, [sp]
 1605 0074 1BB2     		sxth	r3, r3
 1606 0076 059A     		ldr	r2, [sp, #20]
 1607 0078 0499     		ldr	r1, [sp, #16]
 1608 007a B047     		blx	r6
 1609              	.LVL179:
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1610              		.loc 1 620 32 is_stmt 1 discriminator 3 view .LVU503
 1611 007c 0134     		adds	r4, r4, #1
 1612              	.LVL180:
 1613              	.L112:
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1614              		.loc 1 620 26 discriminator 1 view .LVU504
 1615 007e 4445     		cmp	r4, r8
 1616 0080 E9DB     		blt	.L111
 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1617              		.loc 1 624 13 discriminator 2 view .LVU505
 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1618              		.loc 1 624 21 is_stmt 0 discriminator 2 view .LVU506
 1619 0082 089B     		ldr	r3, [sp, #32]
 1620 0084 07EB4307 		add	r7, r7, r3, lsl #1
 1621              	.LVL181:
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1622              		.loc 1 619 28 is_stmt 1 discriminator 2 view .LVU507
 1623 0088 09F10109 		add	r9, r9, #1
 1624              	.LVL182:
 1625              	.L109:
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1626              		.loc 1 619 22 discriminator 1 view .LVU508
 1627 008c 079B     		ldr	r3, [sp, #28]
 1628 008e 9945     		cmp	r9, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 65


 1629 0090 2EDA     		bge	.L108
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1630              		.loc 1 620 19 is_stmt 0 view .LVU509
 1631 0092 0024     		movs	r4, #0
 1632 0094 F3E7     		b	.L112
 1633              	.LVL183:
 1634              	.L117:
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1635              		.loc 1 619 15 view .LVU510
 1636 0096 4FF00009 		mov	r9, #0
 1637 009a B046     		mov	r8, r6
 1638 009c F6E7     		b	.L109
 1639              	.LVL184:
 1640              	.L114:
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1641              		.loc 1 629 32 is_stmt 1 discriminator 2 view .LVU511
 1642 009e 0134     		adds	r4, r4, #1
 1643              	.LVL185:
 1644              	.L116:
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1645              		.loc 1 629 26 discriminator 1 view .LVU512
 1646 00a0 B442     		cmp	r4, r6
 1647 00a2 19DA     		bge	.L121
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1648              		.loc 1 630 17 view .LVU513
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1649              		.loc 1 630 24 is_stmt 0 view .LVU514
 1650 00a4 18F80420 		ldrb	r2, [r8, r4]	@ zero_extendqisi2
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1651              		.loc 1 630 19 view .LVU515
 1652 00a8 002A     		cmp	r2, #0
 1653 00aa F8D0     		beq	.L114
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1654              		.loc 1 631 21 is_stmt 1 view .LVU516
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1655              		.loc 1 631 25 is_stmt 0 view .LVU517
 1656 00ac 069B     		ldr	r3, [sp, #24]
 1657 00ae 1868     		ldr	r0, [r3]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1658              		.loc 1 631 33 view .LVU518
 1659 00b0 C769     		ldr	r7, [r0, #28]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1660              		.loc 1 631 99 view .LVU519
 1661 00b2 2B88     		ldrh	r3, [r5]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1662              		.loc 1 631 104 view .LVU520
 1663 00b4 2344     		add	r3, r3, r4
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1664              		.loc 1 631 118 view .LVU521
 1665 00b6 6988     		ldrh	r1, [r5, #2]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1666              		.loc 1 631 123 view .LVU522
 1667 00b8 5144     		add	r1, r1, r10
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1668              		.loc 1 632 45 view .LVU523
 1669 00ba 02FB0BF2 		mul	r2, r2, fp
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 66


 1670              		.loc 1 631 21 view .LVU524
 1671 00be 120A     		lsrs	r2, r2, #8
 1672 00c0 0292     		str	r2, [sp, #8]
 1673 00c2 39F81420 		ldrh	r2, [r9, r4, lsl #1]
 1674 00c6 ADF80420 		strh	r2, [sp, #4]	@ movhi
 1675 00ca 09B2     		sxth	r1, r1
 1676 00cc 0091     		str	r1, [sp]
 1677 00ce 1BB2     		sxth	r3, r3
 1678 00d0 059A     		ldr	r2, [sp, #20]
 1679 00d2 0499     		ldr	r1, [sp, #16]
 1680 00d4 B847     		blx	r7
 1681              	.LVL186:
 1682 00d6 E2E7     		b	.L114
 1683              	.L121:
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1684              		.loc 1 635 13 is_stmt 1 discriminator 2 view .LVU525
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1685              		.loc 1 635 18 is_stmt 0 discriminator 2 view .LVU526
 1686 00d8 099B     		ldr	r3, [sp, #36]
 1687 00da 9844     		add	r8, r8, r3
 1688              	.LVL187:
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1689              		.loc 1 636 13 is_stmt 1 discriminator 2 view .LVU527
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1690              		.loc 1 636 21 is_stmt 0 discriminator 2 view .LVU528
 1691 00dc 089B     		ldr	r3, [sp, #32]
 1692 00de 09EB4309 		add	r9, r9, r3, lsl #1
 1693              	.LVL188:
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1694              		.loc 1 628 28 is_stmt 1 discriminator 2 view .LVU529
 1695 00e2 0AF1010A 		add	r10, r10, #1
 1696              	.LVL189:
 1697              	.L110:
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1698              		.loc 1 628 22 discriminator 1 view .LVU530
 1699 00e6 079B     		ldr	r3, [sp, #28]
 1700 00e8 9A45     		cmp	r10, r3
 1701 00ea 01DA     		bge	.L108
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1702              		.loc 1 629 19 is_stmt 0 view .LVU531
 1703 00ec 0024     		movs	r4, #0
 1704 00ee D7E7     		b	.L116
 1705              	.LVL190:
 1706              	.L108:
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1707              		.loc 1 639 1 view .LVU532
 1708 00f0 0BB0     		add	sp, sp, #44
 1709              	.LCFI20:
 1710              		.cfi_def_cfa_offset 36
 1711              		@ sp needed
 1712 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1713              		.loc 1 639 1 view .LVU533
 1714              		.cfi_endproc
 1715              	.LFE166:
 1717              		.section	.text.fill_normal,"ax",%progbits
 1718              		.align	1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 67


 1719              		.syntax unified
 1720              		.thumb
 1721              		.thumb_func
 1723              	fill_normal:
 1724              	.LVL191:
 1725              	.LFB164:
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1726              		.loc 1 245 1 is_stmt 1 view -0
 1727              		.cfi_startproc
 1728              		@ args = 12, pretend = 0, frame = 24
 1729              		@ frame_needed = 0, uses_anonymous_args = 0
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1730              		.loc 1 245 1 is_stmt 0 view .LVU535
 1731 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1732              	.LCFI21:
 1733              		.cfi_def_cfa_offset 36
 1734              		.cfi_offset 4, -36
 1735              		.cfi_offset 5, -32
 1736              		.cfi_offset 6, -28
 1737              		.cfi_offset 7, -24
 1738              		.cfi_offset 8, -20
 1739              		.cfi_offset 9, -16
 1740              		.cfi_offset 10, -12
 1741              		.cfi_offset 11, -8
 1742              		.cfi_offset 14, -4
 1743 0004 87B0     		sub	sp, sp, #28
 1744              	.LCFI22:
 1745              		.cfi_def_cfa_offset 64
 1746 0006 0446     		mov	r4, r0
 1747 0008 0192     		str	r2, [sp, #4]
 1748 000a 9946     		mov	r9, r3	@ movhi
 1749              	.LVL192:
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1750              		.loc 1 245 1 view .LVU536
 1751 000c 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 1752 0010 0093     		str	r3, [sp]
 1753 0012 119D     		ldr	r5, [sp, #68]
 1754 0014 BDF948E0 		ldrsh	lr, [sp, #72]
 246:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1755              		.loc 1 246 5 is_stmt 1 view .LVU537
 1756              	.LVL193:
 1757              	.LBB84:
 1758              	.LBI84:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1759              		.loc 3 123 26 view .LVU538
 1760              	.LBB85:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1761              		.loc 3 125 5 view .LVU539
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1762              		.loc 3 125 31 is_stmt 0 view .LVU540
 1763 0018 8F88     		ldrh	r7, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1764              		.loc 3 125 44 view .LVU541
 1765 001a 0B88     		ldrh	r3, [r1]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1766              		.loc 3 125 36 view .LVU542
 1767 001c FF1A     		subs	r7, r7, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 68


 1768 001e BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1769              		.loc 3 125 49 view .LVU543
 1770 0020 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1771              		.loc 3 125 12 view .LVU544
 1772 0022 3FB2     		sxth	r7, r7
 1773              	.LVL194:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1774              		.loc 3 125 12 view .LVU545
 1775              	.LBE85:
 1776              	.LBE84:
 247:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1777              		.loc 1 247 5 is_stmt 1 view .LVU546
 1778              	.LBB86:
 1779              	.LBI86:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1780              		.loc 3 133 26 view .LVU547
 1781              	.LBB87:
 1782              		.loc 3 135 5 view .LVU548
 1783              		.loc 3 135 31 is_stmt 0 view .LVU549
 1784 0024 B1F806B0 		ldrh	fp, [r1, #6]
 1785              		.loc 3 135 44 view .LVU550
 1786 0028 4B88     		ldrh	r3, [r1, #2]
 1787              		.loc 3 135 36 view .LVU551
 1788 002a ABEB030B 		sub	fp, fp, r3
 1789 002e 1FFA8BFB 		uxth	fp, fp
 1790              		.loc 3 135 49 view .LVU552
 1791 0032 0BF1010B 		add	fp, fp, #1
 1792              		.loc 3 135 12 view .LVU553
 1793 0036 0FFA8BFB 		sxth	fp, fp
 1794              	.LVL195:
 1795              		.loc 3 135 12 view .LVU554
 1796              	.LBE87:
 1797              	.LBE86:
 249:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1798              		.loc 1 249 5 is_stmt 1 view .LVU555
 250:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1799              		.loc 1 250 5 view .LVU556
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1800              		.loc 1 253 5 view .LVU557
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1801              		.loc 1 253 7 is_stmt 0 view .LVU558
 1802 003a 85B1     		cbz	r5, .L175
 1803              	.LBB88:
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1804              		.loc 1 292 9 is_stmt 1 view .LVU559
 1805              	.LVL196:
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1806              		.loc 1 292 59 is_stmt 0 view .LVU560
 1807 003c 4FEA0941 		lsl	r1, r9, #16
 1808              	.LVL197:
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1809              		.loc 1 292 18 view .LVU561
 1810 0040 11FA89FA 		uxtah	r10, r1, r9
 1811              	.LVL198:
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 69


 1812              		.loc 1 295 9 is_stmt 1 view .LVU562
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 1813              		.loc 1 295 11 is_stmt 0 view .LVU563
 1814 0044 009B     		ldr	r3, [sp]
 1815 0046 FC2B     		cmp	r3, #252
 1816 0048 40F2E680 		bls	.L132
 1817              	.LBB89:
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1818              		.loc 1 296 13 is_stmt 1 view .LVU564
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1819              		.loc 1 296 21 is_stmt 0 view .LVU565
 1820 004c A7F10408 		sub	r8, r7, #4
 1821              	.LVL199:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1822              		.loc 1 297 13 is_stmt 1 view .LVU566
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1823              		.loc 1 297 19 is_stmt 0 view .LVU567
 1824 0050 0023     		movs	r3, #0
 1825 0052 CDF800B0 		str	fp, [sp]
 1826 0056 9B46     		mov	fp, r3
 1827              	.LVL200:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1828              		.loc 1 297 19 view .LVU568
 1829 0058 CDF808E0 		str	lr, [sp, #8]
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1830              		.loc 1 297 13 view .LVU569
 1831 005c D7E0     		b	.L133
 1832              	.LVL201:
 1833              	.L175:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1834              		.loc 1 297 13 view .LVU570
 1835              	.LBE89:
 1836              	.LBE88:
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1837              		.loc 1 254 9 is_stmt 1 view .LVU571
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1838              		.loc 1 254 11 is_stmt 0 view .LVU572
 1839 005e 009B     		ldr	r3, [sp]
 1840 0060 FC2B     		cmp	r3, #252
 1841 0062 28D8     		bhi	.L167
 1842              	.LBB96:
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 1843              		.loc 1 262 13 is_stmt 1 view .LVU573
 1844              	.LBB97:
 1845              	.LBI97:
 520:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 521:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 522:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 530:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 70


 532:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 534:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 539:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 544:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 549:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 551:lvgl/src/draw/sw/../../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 559:lvgl/src/draw/sw/../../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/draw/sw/../../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/draw/sw/../../misc/lv_color.h ****             /*Info:
 566:lvgl/src/draw/sw/../../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/draw/sw/../../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/draw/sw/../../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 572:lvgl/src/draw/sw/../../misc/lv_color.h ****         }
 573:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 574:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 577:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 578:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 579:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 580:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 581:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 582:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 586:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 588:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t c32;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 71


 589:lvgl/src/draw/sw/../../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/draw/sw/../../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 593:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 596:lvgl/src/draw/sw/../../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 598:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 599:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 601:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/draw/sw/../../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 612:lvgl/src/draw/sw/../../misc/lv_color.h ****         A bit better:
 613:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 620:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 623:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 624:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 628:lvgl/src/draw/sw/../../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 630:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 631:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 632:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 633:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 635:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/draw/sw/../../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 638:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 639:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 641:lvgl/src/draw/sw/../../misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 643:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 644:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/draw/sw/../../misc/lv_color.h **** //!
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 72


 646:lvgl/src/draw/sw/../../misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 648:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 649:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 651:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 653:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 655:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 656:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 662:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 664:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 665:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 671:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 673:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 674:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color color
 676:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 678:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 680:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 681:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 684:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 686:lvgl/src/draw/sw/../../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 687:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 688:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 689:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 690:lvgl/src/draw/sw/../../misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 692:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 694:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 696:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 697:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 698:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 699:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 1846              		.loc 2 699 26 view .LVU574
 700:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 701:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 73


 1847              		.loc 2 701 5 view .LVU575
 1848              	.LVL202:
 1849              	.LBB98:
 1850              	.LBI98:
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1851              		.loc 2 594 26 view .LVU576
 1852              	.LBB99:
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1853              		.loc 2 596 5 view .LVU577
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1854              		.loc 2 596 12 is_stmt 0 view .LVU578
 1855 0064 4FF00001 		mov	r1, #0	@ movhi
 1856              	.LVL203:
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1857              		.loc 2 596 12 view .LVU579
 1858 0068 6FF30401 		bfc	r1, #0, #5
 1859 006c 6FF34A11 		bfc	r1, #5, #6
 1860 0070 6FF3CF21 		bfc	r1, #11, #5
 1861              	.LVL204:
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1862              		.loc 2 596 12 view .LVU580
 1863 0074 0E46     		mov	r6, r1	@ movhi
 1864              	.LVL205:
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1865              		.loc 2 596 12 view .LVU581
 1866              	.LBE99:
 1867              	.LBE98:
 1868              	.LBE97:
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1869              		.loc 1 263 13 is_stmt 1 view .LVU582
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1870              		.loc 1 263 41 is_stmt 0 view .LVU583
 1871 0076 009D     		ldr	r5, [sp]
 1872 0078 2A46     		mov	r2, r5
 1873              	.LVL206:
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1874              		.loc 1 263 41 view .LVU584
 1875 007a 4846     		mov	r0, r9	@ movhi
 1876              	.LVL207:
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1877              		.loc 1 263 41 view .LVU585
 1878 007c FFF7FEFF 		bl	lv_color_mix
 1879              	.LVL208:
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = opa << 3;
 1880              		.loc 1 269 13 is_stmt 1 view .LVU586
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = opa << 3;
 1881              		.loc 1 269 19 is_stmt 0 view .LVU587
 1882 0080 2B46     		mov	r3, r5
 1883 0082 0433     		adds	r3, r3, #4
 1884              	.LVL209:
 270:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1885              		.loc 1 270 13 is_stmt 1 view .LVU588
 270:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1886              		.loc 1 270 17 is_stmt 0 view .LVU589
 1887 0084 03F0F803 		and	r3, r3, #248
 1888              	.LVL210:
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 74


 1889              		.loc 1 273 13 is_stmt 1 view .LVU590
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 1890              		.loc 1 274 13 view .LVU591
 1891              	.LBB100:
 1892              	.LBI100:
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1893              		.loc 2 474 42 view .LVU592
 1894              	.LBB101:
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1895              		.loc 2 477 5 view .LVU593
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1896              		.loc 2 477 24 is_stmt 0 view .LVU594
 1897 0088 C9F3C422 		ubfx	r2, r9, #11, #5
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1898              		.loc 2 477 42 view .LVU595
 1899 008c 03FB02F2 		mul	r2, r3, r2
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1900              		.loc 2 477 12 view .LVU596
 1901 0090 ADF81020 		strh	r2, [sp, #16]	@ movhi
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1902              		.loc 2 478 5 is_stmt 1 view .LVU597
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1903              		.loc 2 478 24 is_stmt 0 view .LVU598
 1904 0094 C9F34512 		ubfx	r2, r9, #5, #6
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1905              		.loc 2 478 42 view .LVU599
 1906 0098 03FB02F2 		mul	r2, r3, r2
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1907              		.loc 2 478 12 view .LVU600
 1908 009c ADF81220 		strh	r2, [sp, #18]	@ movhi
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1909              		.loc 2 479 5 is_stmt 1 view .LVU601
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1910              		.loc 2 479 24 is_stmt 0 view .LVU602
 1911 00a0 09F01F02 		and	r2, r9, #31
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1912              		.loc 2 479 42 view .LVU603
 1913 00a4 03FB02F2 		mul	r2, r3, r2
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1914              		.loc 2 479 12 view .LVU604
 1915 00a8 ADF81420 		strh	r2, [sp, #20]	@ movhi
 1916              	.LVL211:
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1917              		.loc 2 479 12 view .LVU605
 1918              	.LBE101:
 1919              	.LBE100:
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1920              		.loc 1 275 13 is_stmt 1 view .LVU606
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1921              		.loc 1 275 22 is_stmt 0 view .LVU607
 1922 00ac 83F0FF09 		eor	r9, r3, #255
 1923              	.LVL212:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1924              		.loc 1 277 13 is_stmt 1 view .LVU608
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1925              		.loc 1 277 19 is_stmt 0 view .LVU609
 1926 00b0 4FF0000A 		mov	r10, #0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 75


 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1927              		.loc 1 277 13 view .LVU610
 1928 00b4 26E0     		b	.L128
 1929              	.LVL213:
 1930              	.L167:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1931              		.loc 1 277 13 view .LVU611
 1932              	.LBE96:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1933              		.loc 1 255 19 view .LVU612
 1934 00b6 0025     		movs	r5, #0
 1935 00b8 019E     		ldr	r6, [sp, #4]
 1936              	.LVL214:
 1937              	.L124:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1938              		.loc 1 255 26 is_stmt 1 discriminator 1 view .LVU613
 1939 00ba 5D45     		cmp	r5, fp
 1940 00bc 80F2F080 		bge	.L122
 256:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 1941              		.loc 1 256 17 discriminator 3 view .LVU614
 1942 00c0 3A46     		mov	r2, r7
 1943 00c2 4946     		mov	r1, r9	@ movhi
 1944 00c4 2046     		mov	r0, r4
 1945 00c6 FFF7FEFF 		bl	lv_color_fill
 1946              	.LVL215:
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1947              		.loc 1 257 17 discriminator 3 view .LVU615
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1948              		.loc 1 257 26 is_stmt 0 discriminator 3 view .LVU616
 1949 00ca 04EB4604 		add	r4, r4, r6, lsl #1
 1950              	.LVL216:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1951              		.loc 1 255 32 is_stmt 1 discriminator 3 view .LVU617
 1952 00ce 0135     		adds	r5, r5, #1
 1953              	.LVL217:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1954              		.loc 1 255 32 is_stmt 0 discriminator 3 view .LVU618
 1955 00d0 F3E7     		b	.L124
 1956              	.LVL218:
 1957              	.L177:
 1958              	.LBB102:
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 1959              		.loc 1 280 25 is_stmt 1 view .LVU619
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 1960              		.loc 1 280 41 is_stmt 0 view .LVU620
 1961 00d2 34F81560 		ldrh	r6, [r4, r5, lsl #1]
 1962              	.LVL219:
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1963              		.loc 1 281 25 is_stmt 1 view .LVU621
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1964              		.loc 1 281 42 is_stmt 0 view .LVU622
 1965 00d6 4A46     		mov	r2, r9
 1966              	.LVL220:
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1967              		.loc 1 281 42 view .LVU623
 1968 00d8 3146     		mov	r1, r6	@ movhi
 1969 00da 04A8     		add	r0, sp, #16
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 76


 1970              	.LVL221:
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1971              		.loc 1 281 42 view .LVU624
 1972 00dc FFF7FEFF 		bl	lv_color_mix_premult
 1973              	.LVL222:
 1974              	.L129:
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1975              		.loc 1 283 21 is_stmt 1 discriminator 2 view .LVU625
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1976              		.loc 1 283 33 is_stmt 0 discriminator 2 view .LVU626
 1977 00e0 A8F80000 		strh	r0, [r8]	@ movhi
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1978              		.loc 1 278 36 is_stmt 1 discriminator 2 view .LVU627
 1979 00e4 0135     		adds	r5, r5, #1
 1980              	.LVL223:
 1981              	.L131:
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1982              		.loc 1 278 30 discriminator 1 view .LVU628
 1983 00e6 BD42     		cmp	r5, r7
 1984 00e8 07DA     		bge	.L176
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1985              		.loc 1 279 21 view .LVU629
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1986              		.loc 1 279 39 is_stmt 0 view .LVU630
 1987 00ea B3B2     		uxth	r3, r6
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1988              		.loc 1 279 56 view .LVU631
 1989 00ec 04EB4508 		add	r8, r4, r5, lsl #1
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1990              		.loc 1 279 59 view .LVU632
 1991 00f0 34F81520 		ldrh	r2, [r4, r5, lsl #1]
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1992              		.loc 1 279 23 view .LVU633
 1993 00f4 9342     		cmp	r3, r2
 1994 00f6 ECD1     		bne	.L177
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1995              		.loc 1 279 23 view .LVU634
 1996 00f8 F2E7     		b	.L129
 1997              	.L176:
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1998              		.loc 1 285 17 is_stmt 1 discriminator 2 view .LVU635
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1999              		.loc 1 285 26 is_stmt 0 discriminator 2 view .LVU636
 2000 00fa 019B     		ldr	r3, [sp, #4]
 2001 00fc 04EB4304 		add	r4, r4, r3, lsl #1
 2002              	.LVL224:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2003              		.loc 1 277 32 is_stmt 1 discriminator 2 view .LVU637
 2004 0100 0AF1010A 		add	r10, r10, #1
 2005              	.LVL225:
 2006              	.L128:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2007              		.loc 1 277 26 discriminator 1 view .LVU638
 2008 0104 DA45     		cmp	r10, fp
 2009 0106 80F2CB80 		bge	.L122
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 2010              		.loc 1 278 23 is_stmt 0 view .LVU639
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 77


 2011 010a 0025     		movs	r5, #0
 2012 010c EBE7     		b	.L131
 2013              	.LVL226:
 2014              	.L179:
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 2015              		.loc 1 278 23 view .LVU640
 2016              	.LBE102:
 2017              	.LBB103:
 2018              	.LBB94:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2019              		.loc 1 299 21 is_stmt 1 discriminator 1 view .LVU641
 2020 010e A4F80090 		strh	r9, [r4]	@ movhi
 2021              	.L135:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2022              		.loc 1 299 21 discriminator 4 view .LVU642
 2023 0112 0135     		adds	r5, r5, #1
 2024              	.LVL227:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2025              		.loc 1 299 21 discriminator 4 view .LVU643
 2026 0114 0234     		adds	r4, r4, #2
 2027              	.LVL228:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2028              		.loc 1 298 68 discriminator 4 view .LVU644
 2029 0116 0136     		adds	r6, r6, #1
 2030              	.LVL229:
 2031              	.L157:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2032              		.loc 1 298 34 discriminator 2 view .LVU645
 2033 0118 BE42     		cmp	r6, r7
 2034 011a 57DA     		bge	.L173
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2035              		.loc 1 298 34 is_stmt 0 discriminator 3 view .LVU646
 2036 011c 15F0030F 		tst	r5, #3
 2037 0120 08D0     		beq	.L178
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2038              		.loc 1 299 21 is_stmt 1 view .LVU647
 2039 0122 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2040 0124 FF2A     		cmp	r2, #255
 2041 0126 F2D0     		beq	.L179
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2042              		.loc 1 299 21 discriminator 2 view .LVU648
 2043 0128 2188     		ldrh	r1, [r4]
 2044 012a 4846     		mov	r0, r9	@ movhi
 2045 012c FFF7FEFF 		bl	lv_color_mix
 2046              	.LVL230:
 2047 0130 2080     		strh	r0, [r4]	@ movhi
 2048 0132 EEE7     		b	.L135
 2049              	.L178:
 2050 0134 3B46     		mov	r3, r7
 2051 0136 5746     		mov	r7, r10
 2052              	.LVL231:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2053              		.loc 1 299 21 is_stmt 0 discriminator 2 view .LVU649
 2054 0138 9A46     		mov	r10, r3
 2055              	.LVL232:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2056              		.loc 1 299 21 discriminator 2 view .LVU650
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 78


 2057 013a 0BE0     		b	.L151
 2058              	.LVL233:
 2059              	.L181:
 2060              	.LBB90:
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 2061              		.loc 1 306 25 is_stmt 1 view .LVU651
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 2062              		.loc 1 306 27 is_stmt 0 view .LVU652
 2063 013c 14F0030F 		tst	r4, #3
 2064 0140 32D0     		beq	.L139
 2065              	.LBB91:
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 2066              		.loc 1 307 29 is_stmt 1 view .LVU653
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 2067              		.loc 1 307 45 is_stmt 0 view .LVU654
 2068 0142 A4F80090 		strh	r9, [r4]	@ movhi
 308:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 2069              		.loc 1 308 29 is_stmt 1 view .LVU655
 2070              	.LVL234:
 309:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 2071              		.loc 1 309 29 view .LVU656
 309:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 2072              		.loc 1 309 32 is_stmt 0 view .LVU657
 2073 0146 C4F80270 		str	r7, [r4, #2]
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2074              		.loc 1 310 29 is_stmt 1 view .LVU658
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2075              		.loc 1 310 45 is_stmt 0 view .LVU659
 2076 014a A4F80690 		strh	r9, [r4, #6]	@ movhi
 2077              	.LVL235:
 2078              	.L140:
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2079              		.loc 1 310 45 view .LVU660
 2080              	.LBE91:
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 2081              		.loc 1 323 25 is_stmt 1 view .LVU661
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 2082              		.loc 1 323 34 is_stmt 0 view .LVU662
 2083 014e 0834     		adds	r4, r4, #8
 2084              	.LVL236:
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2085              		.loc 1 324 25 is_stmt 1 view .LVU663
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2086              		.loc 1 324 30 is_stmt 0 view .LVU664
 2087 0150 0435     		adds	r5, r5, #4
 2088              	.LVL237:
 2089              	.L141:
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2090              		.loc 1 324 30 view .LVU665
 2091              	.LBE90:
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 2092              		.loc 1 302 38 is_stmt 1 view .LVU666
 2093 0152 0436     		adds	r6, r6, #4
 2094              	.LVL238:
 2095              	.L151:
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 2096              		.loc 1 302 25 discriminator 1 view .LVU667
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 79


 2097 0154 4645     		cmp	r6, r8
 2098 0156 3DDC     		bgt	.L180
 2099              	.LBB93:
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 2100              		.loc 1 303 21 view .LVU668
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 2101              		.loc 1 303 30 is_stmt 0 view .LVU669
 2102 0158 2B68     		ldr	r3, [r5]
 2103              	.LVL239:
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 2104              		.loc 1 304 21 is_stmt 1 view .LVU670
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 2105              		.loc 1 304 23 is_stmt 0 view .LVU671
 2106 015a B3F1FF3F 		cmp	r3, #-1
 2107 015e EDD0     		beq	.L181
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2108              		.loc 1 326 26 is_stmt 1 view .LVU672
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2109              		.loc 1 326 28 is_stmt 0 view .LVU673
 2110 0160 8BB3     		cbz	r3, .L142
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2111              		.loc 1 327 25 is_stmt 1 view .LVU674
 2112 0162 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2113 0164 FF2A     		cmp	r2, #255
 2114 0166 22D0     		beq	.L182
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2115              		.loc 1 327 25 discriminator 2 view .LVU675
 2116 0168 2188     		ldrh	r1, [r4]
 2117 016a 4846     		mov	r0, r9	@ movhi
 2118 016c FFF7FEFF 		bl	lv_color_mix
 2119              	.LVL240:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2120              		.loc 1 327 25 is_stmt 0 discriminator 2 view .LVU676
 2121 0170 2080     		strh	r0, [r4]	@ movhi
 2122              	.L144:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2123              		.loc 1 327 25 is_stmt 1 discriminator 4 view .LVU677
 2124              	.LVL241:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2125              		.loc 1 327 25 discriminator 4 view .LVU678
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2126              		.loc 1 328 25 discriminator 4 view .LVU679
 2127 0172 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2128 0174 FF2A     		cmp	r2, #255
 2129 0176 1DD0     		beq	.L183
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2130              		.loc 1 328 25 discriminator 2 view .LVU680
 2131 0178 6188     		ldrh	r1, [r4, #2]
 2132 017a 4846     		mov	r0, r9	@ movhi
 2133 017c FFF7FEFF 		bl	lv_color_mix
 2134              	.LVL242:
 2135 0180 6080     		strh	r0, [r4, #2]	@ movhi
 2136              	.L146:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2137              		.loc 1 328 25 discriminator 4 view .LVU681
 2138              	.LVL243:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 80


 2139              		.loc 1 328 25 discriminator 4 view .LVU682
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2140              		.loc 1 329 25 discriminator 4 view .LVU683
 2141 0182 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 2142 0184 FF2A     		cmp	r2, #255
 2143 0186 18D0     		beq	.L184
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2144              		.loc 1 329 25 discriminator 2 view .LVU684
 2145 0188 A188     		ldrh	r1, [r4, #4]
 2146 018a 4846     		mov	r0, r9	@ movhi
 2147 018c FFF7FEFF 		bl	lv_color_mix
 2148              	.LVL244:
 2149 0190 A080     		strh	r0, [r4, #4]	@ movhi
 2150              	.L148:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2151              		.loc 1 329 25 discriminator 4 view .LVU685
 2152              	.LVL245:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2153              		.loc 1 329 25 discriminator 4 view .LVU686
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2154              		.loc 1 330 25 discriminator 4 view .LVU687
 2155 0192 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2156 0194 FF2A     		cmp	r2, #255
 2157 0196 13D0     		beq	.L185
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2158              		.loc 1 330 25 discriminator 2 view .LVU688
 2159 0198 E188     		ldrh	r1, [r4, #6]
 2160 019a 4846     		mov	r0, r9	@ movhi
 2161 019c FFF7FEFF 		bl	lv_color_mix
 2162              	.LVL246:
 2163 01a0 E080     		strh	r0, [r4, #6]	@ movhi
 2164              	.L150:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2165              		.loc 1 330 25 discriminator 4 view .LVU689
 2166 01a2 0435     		adds	r5, r5, #4
 2167              	.LVL247:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2168              		.loc 1 330 25 discriminator 4 view .LVU690
 2169 01a4 0834     		adds	r4, r4, #8
 2170              	.LVL248:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2171              		.loc 1 330 25 is_stmt 0 discriminator 4 view .LVU691
 2172 01a6 D4E7     		b	.L141
 2173              	.LVL249:
 2174              	.L139:
 2175              	.LBB92:
 313:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 2176              		.loc 1 313 29 is_stmt 1 view .LVU692
 314:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 2177              		.loc 1 314 29 view .LVU693
 314:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 2178              		.loc 1 314 32 is_stmt 0 view .LVU694
 2179 01a8 2760     		str	r7, [r4]
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2180              		.loc 1 315 29 is_stmt 1 view .LVU695
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2181              		.loc 1 315 38 is_stmt 0 view .LVU696
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 81


 2182 01aa 6760     		str	r7, [r4, #4]
 2183 01ac CFE7     		b	.L140
 2184              	.LVL250:
 2185              	.L182:
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2186              		.loc 1 315 38 view .LVU697
 2187              	.LBE92:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2188              		.loc 1 327 25 is_stmt 1 discriminator 1 view .LVU698
 2189 01ae A4F80090 		strh	r9, [r4]	@ movhi
 2190 01b2 DEE7     		b	.L144
 2191              	.LVL251:
 2192              	.L183:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2193              		.loc 1 328 25 discriminator 1 view .LVU699
 2194 01b4 A4F80290 		strh	r9, [r4, #2]	@ movhi
 2195 01b8 E3E7     		b	.L146
 2196              	.LVL252:
 2197              	.L184:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2198              		.loc 1 329 25 discriminator 1 view .LVU700
 2199 01ba A4F80490 		strh	r9, [r4, #4]	@ movhi
 2200 01be E8E7     		b	.L148
 2201              	.LVL253:
 2202              	.L185:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2203              		.loc 1 330 25 discriminator 1 view .LVU701
 2204 01c0 A4F80690 		strh	r9, [r4, #6]	@ movhi
 2205 01c4 EDE7     		b	.L150
 2206              	.LVL254:
 2207              	.L142:
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 2208              		.loc 1 333 25 view .LVU702
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 2209              		.loc 1 333 30 is_stmt 0 view .LVU703
 2210 01c6 0435     		adds	r5, r5, #4
 2211              	.LVL255:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2212              		.loc 1 334 25 is_stmt 1 view .LVU704
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2213              		.loc 1 334 34 is_stmt 0 view .LVU705
 2214 01c8 0834     		adds	r4, r4, #8
 2215              	.LVL256:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2216              		.loc 1 334 34 view .LVU706
 2217 01ca C2E7     		b	.L141
 2218              	.LVL257:
 2219              	.L173:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2220              		.loc 1 334 34 view .LVU707
 2221 01cc 3B46     		mov	r3, r7
 2222 01ce 5746     		mov	r7, r10
 2223              	.LVL258:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2224              		.loc 1 334 34 view .LVU708
 2225 01d0 9A46     		mov	r10, r3
 2226              	.LVL259:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 82


 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2227              		.loc 1 334 34 view .LVU709
 2228 01d2 BFE7     		b	.L151
 2229              	.LVL260:
 2230              	.L180:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2231              		.loc 1 334 34 view .LVU710
 2232              	.LBE93:
 2233 01d4 5346     		mov	r3, r10
 2234 01d6 BA46     		mov	r10, r7
 2235              	.LVL261:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2236              		.loc 1 334 34 view .LVU711
 2237 01d8 1F46     		mov	r7, r3
 2238              	.LVL262:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2239              		.loc 1 334 34 view .LVU712
 2240 01da 04E0     		b	.L153
 2241              	.LVL263:
 2242              	.L187:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2243              		.loc 1 339 21 is_stmt 1 discriminator 1 view .LVU713
 2244 01dc A4F80090 		strh	r9, [r4]	@ movhi
 2245              	.L155:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2246              		.loc 1 339 21 discriminator 4 view .LVU714
 2247 01e0 0135     		adds	r5, r5, #1
 2248              	.LVL264:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2249              		.loc 1 339 21 discriminator 4 view .LVU715
 2250 01e2 0234     		adds	r4, r4, #2
 2251              	.LVL265:
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2252              		.loc 1 338 32 discriminator 4 view .LVU716
 2253 01e4 0136     		adds	r6, r6, #1
 2254              	.LVL266:
 2255              	.L153:
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2256              		.loc 1 338 25 discriminator 1 view .LVU717
 2257 01e6 BE42     		cmp	r6, r7
 2258 01e8 08DA     		bge	.L186
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2259              		.loc 1 339 21 view .LVU718
 2260 01ea 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2261 01ec FF2A     		cmp	r2, #255
 2262 01ee F5D0     		beq	.L187
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2263              		.loc 1 339 21 discriminator 2 view .LVU719
 2264 01f0 2188     		ldrh	r1, [r4]
 2265 01f2 4846     		mov	r0, r9	@ movhi
 2266 01f4 FFF7FEFF 		bl	lv_color_mix
 2267              	.LVL267:
 2268 01f8 2080     		strh	r0, [r4]	@ movhi
 2269 01fa F1E7     		b	.L155
 2270              	.L186:
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2271              		.loc 1 341 17 discriminator 2 view .LVU720
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 83


 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2272              		.loc 1 341 42 is_stmt 0 discriminator 2 view .LVU721
 2273 01fc 019B     		ldr	r3, [sp, #4]
 2274 01fe DB1B     		subs	r3, r3, r7
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2275              		.loc 1 341 26 discriminator 2 view .LVU722
 2276 0200 04EB4304 		add	r4, r4, r3, lsl #1
 2277              	.LVL268:
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2278              		.loc 1 342 17 is_stmt 1 discriminator 2 view .LVU723
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2279              		.loc 1 342 38 is_stmt 0 discriminator 2 view .LVU724
 2280 0204 029B     		ldr	r3, [sp, #8]
 2281 0206 DB1B     		subs	r3, r3, r7
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2282              		.loc 1 342 22 discriminator 2 view .LVU725
 2283 0208 1D44     		add	r5, r5, r3
 2284              	.LVL269:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2285              		.loc 1 297 32 is_stmt 1 discriminator 2 view .LVU726
 2286 020a 0BF1010B 		add	fp, fp, #1
 2287              	.LVL270:
 2288              	.L133:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2289              		.loc 1 297 26 discriminator 1 view .LVU727
 2290 020e 009B     		ldr	r3, [sp]
 2291 0210 9B45     		cmp	fp, r3
 2292 0212 45DA     		bge	.L122
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2293              		.loc 1 298 23 is_stmt 0 view .LVU728
 2294 0214 0026     		movs	r6, #0
 2295 0216 7FE7     		b	.L157
 2296              	.LVL271:
 2297              	.L132:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2298              		.loc 1 298 23 view .LVU729
 2299              	.LBE94:
 2300              	.LBB95:
 348:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 2301              		.loc 1 348 13 is_stmt 1 view .LVU730
 349:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 2302              		.loc 1 349 13 view .LVU731
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2303              		.loc 1 350 13 view .LVU732
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2304              		.loc 1 351 13 view .LVU733
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2305              		.loc 1 351 47 is_stmt 0 view .LVU734
 2306 0218 0088     		ldrh	r0, [r0]
 2307              	.LVL272:
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2308              		.loc 1 351 34 view .LVU735
 2309 021a 0146     		mov	r1, r0	@ movhi
 2310              	.LVL273:
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 2311              		.loc 1 352 13 is_stmt 1 view .LVU736
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 84


 2312              		.loc 1 353 13 view .LVU737
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2313              		.loc 1 355 13 view .LVU738
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2314              		.loc 1 353 22 is_stmt 0 view .LVU739
 2315 021c 4FF0000A 		mov	r10, #0
 2316              	.LVL274:
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2317              		.loc 1 350 22 view .LVU740
 2318 0220 5346     		mov	r3, r10
 2319 0222 CDF808B0 		str	fp, [sp, #8]
 2320 0226 D346     		mov	fp, r10
 2321              	.LVL275:
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2322              		.loc 1 350 22 view .LVU741
 2323 0228 A046     		mov	r8, r4
 2324 022a CDF80CE0 		str	lr, [sp, #12]
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2325              		.loc 1 355 13 view .LVU742
 2326 022e 32E0     		b	.L158
 2327              	.LVL276:
 2328              	.L170:
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2329              		.loc 1 358 56 view .LVU743
 2330 0230 DDF800A0 		ldr	r10, [sp]
 2331              	.LVL277:
 2332              	.L160:
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2333              		.loc 1 360 25 is_stmt 1 view .LVU744
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2334              		.loc 1 360 27 is_stmt 0 view .LVU745
 2335 0234 9C42     		cmp	r4, r3
 2336 0236 1ED0     		beq	.L188
 2337              	.L161:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2338              		.loc 1 361 29 is_stmt 1 view .LVU746
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2339              		.loc 1 361 31 is_stmt 0 view .LVU747
 2340 0238 BAF1FF0F 		cmp	r10, #255
 2341 023c 21D0     		beq	.L189
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 2342              		.loc 1 362 34 is_stmt 1 view .LVU748
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 2343              		.loc 1 362 51 is_stmt 0 view .LVU749
 2344 023e 5246     		mov	r2, r10
 2345 0240 38F81610 		ldrh	r1, [r8, r6, lsl #1]
 2346              	.LVL278:
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 2347              		.loc 1 362 51 view .LVU750
 2348 0244 4846     		mov	r0, r9	@ movhi
 2349              	.LVL279:
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 2350              		.loc 1 362 51 view .LVU751
 2351 0246 FFF7FEFF 		bl	lv_color_mix
 2352              	.LVL280:
 2353              	.L164:
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 85


 2354              		.loc 1 363 29 is_stmt 1 view .LVU752
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2355              		.loc 1 364 29 view .LVU753
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2356              		.loc 1 364 50 is_stmt 0 view .LVU754
 2357 024a 38F81610 		ldrh	r1, [r8, r6, lsl #1]
 2358              	.LVL281:
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 2359              		.loc 1 363 39 view .LVU755
 2360 024e 2346     		mov	r3, r4
 2361              	.LVL282:
 2362              	.L162:
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2363              		.loc 1 366 25 is_stmt 1 view .LVU756
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2364              		.loc 1 366 37 is_stmt 0 view .LVU757
 2365 0250 28F81600 		strh	r0, [r8, r6, lsl #1]	@ movhi
 2366              	.L159:
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2367              		.loc 1 368 21 is_stmt 1 discriminator 2 view .LVU758
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2368              		.loc 1 368 25 is_stmt 0 discriminator 2 view .LVU759
 2369 0254 0135     		adds	r5, r5, #1
 2370              	.LVL283:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2371              		.loc 1 356 36 is_stmt 1 discriminator 2 view .LVU760
 2372 0256 0136     		adds	r6, r6, #1
 2373              	.LVL284:
 2374              	.L166:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2375              		.loc 1 356 30 discriminator 1 view .LVU761
 2376 0258 BE42     		cmp	r6, r7
 2377 025a 14DA     		bge	.L190
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2378              		.loc 1 357 21 view .LVU762
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2379              		.loc 1 357 24 is_stmt 0 view .LVU763
 2380 025c 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2381              		.loc 1 357 23 view .LVU764
 2382 025e 002C     		cmp	r4, #0
 2383 0260 F8D0     		beq	.L159
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2384              		.loc 1 358 25 is_stmt 1 view .LVU765
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2385              		.loc 1 358 27 is_stmt 0 view .LVU766
 2386 0262 9C42     		cmp	r4, r3
 2387 0264 E6D0     		beq	.L160
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2388              		.loc 1 358 48 is_stmt 1 discriminator 1 view .LVU767
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2389              		.loc 1 358 56 is_stmt 0 discriminator 1 view .LVU768
 2390 0266 FF2C     		cmp	r4, #255
 2391 0268 E2D0     		beq	.L170
 359:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 2392              		.loc 1 359 62 discriminator 2 view .LVU769
 2393 026a 009A     		ldr	r2, [sp]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 86


 2394 026c 04FB02FA 		mul	r10, r4, r2
 2395              	.LVL285:
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2396              		.loc 1 358 56 discriminator 2 view .LVU770
 2397 0270 4FEA1A2A 		lsr	r10, r10, #8
 2398 0274 DEE7     		b	.L160
 2399              	.LVL286:
 2400              	.L188:
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2401              		.loc 1 360 65 discriminator 1 view .LVU771
 2402 0276 8AB2     		uxth	r2, r1
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2403              		.loc 1 360 85 discriminator 1 view .LVU772
 2404 0278 38F816C0 		ldrh	ip, [r8, r6, lsl #1]
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2405              		.loc 1 360 47 discriminator 1 view .LVU773
 2406 027c 6245     		cmp	r2, ip
 2407 027e DBD1     		bne	.L161
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2408              		.loc 1 360 47 discriminator 1 view .LVU774
 2409 0280 E6E7     		b	.L162
 2410              	.L189:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2411              		.loc 1 361 57 is_stmt 1 discriminator 1 view .LVU775
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2412              		.loc 1 361 72 is_stmt 0 discriminator 1 view .LVU776
 2413 0282 4846     		mov	r0, r9	@ movhi
 2414              	.LVL287:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2415              		.loc 1 361 72 discriminator 1 view .LVU777
 2416 0284 E1E7     		b	.L164
 2417              	.LVL288:
 2418              	.L190:
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2419              		.loc 1 370 17 is_stmt 1 discriminator 2 view .LVU778
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2420              		.loc 1 370 26 is_stmt 0 discriminator 2 view .LVU779
 2421 0286 019A     		ldr	r2, [sp, #4]
 2422 0288 08EB4208 		add	r8, r8, r2, lsl #1
 2423              	.LVL289:
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2424              		.loc 1 371 17 is_stmt 1 discriminator 2 view .LVU780
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2425              		.loc 1 371 38 is_stmt 0 discriminator 2 view .LVU781
 2426 028c 039A     		ldr	r2, [sp, #12]
 2427 028e D21B     		subs	r2, r2, r7
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2428              		.loc 1 371 22 discriminator 2 view .LVU782
 2429 0290 1544     		add	r5, r5, r2
 2430              	.LVL290:
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2431              		.loc 1 355 32 is_stmt 1 discriminator 2 view .LVU783
 2432 0292 0BF1010B 		add	fp, fp, #1
 2433              	.LVL291:
 2434              	.L158:
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2435              		.loc 1 355 26 discriminator 1 view .LVU784
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 87


 2436 0296 029A     		ldr	r2, [sp, #8]
 2437 0298 9345     		cmp	fp, r2
 2438 029a 01DA     		bge	.L122
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2439              		.loc 1 356 23 is_stmt 0 view .LVU785
 2440 029c 0026     		movs	r6, #0
 2441 029e DBE7     		b	.L166
 2442              	.LVL292:
 2443              	.L122:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2444              		.loc 1 356 23 view .LVU786
 2445              	.LBE95:
 2446              	.LBE103:
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2447              		.loc 1 375 1 view .LVU787
 2448 02a0 07B0     		add	sp, sp, #28
 2449              	.LCFI23:
 2450              		.cfi_def_cfa_offset 36
 2451              		@ sp needed
 2452 02a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2453              		.loc 1 375 1 view .LVU788
 2454              		.cfi_endproc
 2455              	.LFE164:
 2457              		.section	.text.map_normal,"ax",%progbits
 2458              		.align	1
 2459              		.syntax unified
 2460              		.thumb
 2461              		.thumb_func
 2463              	map_normal:
 2464              	.LVL293:
 2465              	.LFB167:
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2466              		.loc 1 646 1 is_stmt 1 view -0
 2467              		.cfi_startproc
 2468              		@ args = 16, pretend = 0, frame = 24
 2469              		@ frame_needed = 0, uses_anonymous_args = 0
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2470              		.loc 1 646 1 is_stmt 0 view .LVU790
 2471 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2472              	.LCFI24:
 2473              		.cfi_def_cfa_offset 36
 2474              		.cfi_offset 4, -36
 2475              		.cfi_offset 5, -32
 2476              		.cfi_offset 6, -28
 2477              		.cfi_offset 7, -24
 2478              		.cfi_offset 8, -20
 2479              		.cfi_offset 9, -16
 2480              		.cfi_offset 10, -12
 2481              		.cfi_offset 11, -8
 2482              		.cfi_offset 14, -4
 2483 0004 87B0     		sub	sp, sp, #28
 2484              	.LCFI25:
 2485              		.cfi_def_cfa_offset 64
 2486 0006 0646     		mov	r6, r0
 2487 0008 0192     		str	r2, [sp, #4]
 2488 000a 1F46     		mov	r7, r3
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 88


 2489 000c BDF94030 		ldrsh	r3, [sp, #64]
 2490              	.LVL294:
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2491              		.loc 1 646 1 view .LVU791
 2492 0010 0393     		str	r3, [sp, #12]
 2493 0012 9DF844A0 		ldrb	r10, [sp, #68]	@ zero_extendqisi2
 2494 0016 DDF84890 		ldr	r9, [sp, #72]
 2495 001a BDF94CC0 		ldrsh	ip, [sp, #76]
 647:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 2496              		.loc 1 647 5 is_stmt 1 view .LVU792
 2497              	.LVL295:
 2498              	.LBB104:
 2499              	.LBI104:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2500              		.loc 3 123 26 view .LVU793
 2501              	.LBB105:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2502              		.loc 3 125 5 view .LVU794
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2503              		.loc 3 125 31 is_stmt 0 view .LVU795
 2504 001e B1F80480 		ldrh	r8, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2505              		.loc 3 125 44 view .LVU796
 2506 0022 0B88     		ldrh	r3, [r1]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2507              		.loc 3 125 36 view .LVU797
 2508 0024 A8EB0308 		sub	r8, r8, r3
 2509 0028 1FFA88F8 		uxth	r8, r8
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2510              		.loc 3 125 49 view .LVU798
 2511 002c 08F10108 		add	r8, r8, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2512              		.loc 3 125 12 view .LVU799
 2513 0030 0FFA88F8 		sxth	r8, r8
 2514              	.LVL296:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2515              		.loc 3 125 12 view .LVU800
 2516              	.LBE105:
 2517              	.LBE104:
 648:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2518              		.loc 1 648 5 is_stmt 1 view .LVU801
 2519              	.LBB106:
 2520              	.LBI106:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2521              		.loc 3 133 26 view .LVU802
 2522              	.LBB107:
 2523              		.loc 3 135 5 view .LVU803
 2524              		.loc 3 135 31 is_stmt 0 view .LVU804
 2525 0034 CB88     		ldrh	r3, [r1, #6]
 2526              		.loc 3 135 44 view .LVU805
 2527 0036 4A88     		ldrh	r2, [r1, #2]
 2528              	.LVL297:
 2529              		.loc 3 135 36 view .LVU806
 2530 0038 9B1A     		subs	r3, r3, r2
 2531 003a 9BB2     		uxth	r3, r3
 2532              		.loc 3 135 49 view .LVU807
 2533 003c 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 89


 2534              		.loc 3 135 12 view .LVU808
 2535 003e 1BB2     		sxth	r3, r3
 2536 0040 0293     		str	r3, [sp, #8]
 2537              	.LVL298:
 2538              		.loc 3 135 12 view .LVU809
 2539              	.LBE107:
 2540              	.LBE106:
 650:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 2541              		.loc 1 650 5 is_stmt 1 view .LVU810
 651:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2542              		.loc 1 651 5 view .LVU811
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2543              		.loc 1 654 5 view .LVU812
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2544              		.loc 1 654 7 is_stmt 0 view .LVU813
 2545 0042 B9F1000F 		cmp	r9, #0
 2546 0046 0AD0     		beq	.L233
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2547              		.loc 1 675 9 is_stmt 1 view .LVU814
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2548              		.loc 1 675 11 is_stmt 0 view .LVU815
 2549 0048 BAF1FD0F 		cmp	r10, #253
 2550 004c 40F21481 		bls	.L227
 2551              	.LBB108:
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2552              		.loc 1 676 13 is_stmt 1 view .LVU816
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2553              		.loc 1 676 21 is_stmt 0 view .LVU817
 2554 0050 A8F1040A 		sub	r10, r8, #4
 2555              	.LVL299:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2556              		.loc 1 678 13 is_stmt 1 view .LVU818
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2557              		.loc 1 678 19 is_stmt 0 view .LVU819
 2558 0054 4FF0000B 		mov	fp, #0
 2559 0058 CDF814C0 		str	ip, [sp, #20]
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2560              		.loc 1 678 13 view .LVU820
 2561 005c E1E0     		b	.L200
 2562              	.LVL300:
 2563              	.L233:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2564              		.loc 1 678 13 view .LVU821
 2565              	.LBE108:
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2566              		.loc 1 655 9 is_stmt 1 view .LVU822
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2567              		.loc 1 655 11 is_stmt 0 view .LVU823
 2568 005e BAF1FC0F 		cmp	r10, #252
 2569 0062 04D8     		bhi	.L225
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2570              		.loc 1 663 19 view .LVU824
 2571 0064 0025     		movs	r5, #0
 2572 0066 9946     		mov	r9, r3
 2573 0068 DDF80CB0 		ldr	fp, [sp, #12]
 2574 006c 1AE0     		b	.L194
 2575              	.L225:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 90


 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2576              		.loc 1 656 19 view .LVU825
 2577 006e 0024     		movs	r4, #0
 2578 0070 029D     		ldr	r5, [sp, #8]
 2579 0072 DDF80490 		ldr	r9, [sp, #4]
 2580 0076 DDF80CA0 		ldr	r10, [sp, #12]
 2581              	.LVL301:
 2582              	.L193:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2583              		.loc 1 656 26 is_stmt 1 discriminator 1 view .LVU826
 2584 007a AC42     		cmp	r4, r5
 2585 007c 80F20481 		bge	.L191
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 2586              		.loc 1 657 17 discriminator 3 view .LVU827
 2587 0080 4FEA4802 		lsl	r2, r8, #1
 2588 0084 3946     		mov	r1, r7
 2589 0086 3046     		mov	r0, r6
 2590 0088 FFF7FEFF 		bl	lv_memcpy
 2591              	.LVL302:
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2592              		.loc 1 658 17 discriminator 3 view .LVU828
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2593              		.loc 1 658 26 is_stmt 0 discriminator 3 view .LVU829
 2594 008c 06EB4906 		add	r6, r6, r9, lsl #1
 2595              	.LVL303:
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2596              		.loc 1 659 17 is_stmt 1 discriminator 3 view .LVU830
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2597              		.loc 1 659 25 is_stmt 0 discriminator 3 view .LVU831
 2598 0090 07EB4A07 		add	r7, r7, r10, lsl #1
 2599              	.LVL304:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2600              		.loc 1 656 32 is_stmt 1 discriminator 3 view .LVU832
 2601 0094 0134     		adds	r4, r4, #1
 2602              	.LVL305:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2603              		.loc 1 656 32 is_stmt 0 discriminator 3 view .LVU833
 2604 0096 F0E7     		b	.L193
 2605              	.LVL306:
 2606              	.L234:
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2607              		.loc 1 667 17 is_stmt 1 discriminator 2 view .LVU834
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2608              		.loc 1 667 26 is_stmt 0 discriminator 2 view .LVU835
 2609 0098 019B     		ldr	r3, [sp, #4]
 2610 009a 06EB4306 		add	r6, r6, r3, lsl #1
 2611              	.LVL307:
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2612              		.loc 1 668 17 is_stmt 1 discriminator 2 view .LVU836
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2613              		.loc 1 668 25 is_stmt 0 discriminator 2 view .LVU837
 2614 009e 07EB4B07 		add	r7, r7, fp, lsl #1
 2615              	.LVL308:
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2616              		.loc 1 663 32 is_stmt 1 discriminator 2 view .LVU838
 2617 00a2 0135     		adds	r5, r5, #1
 2618              	.LVL309:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 91


 2619              	.L194:
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2620              		.loc 1 663 26 discriminator 1 view .LVU839
 2621 00a4 4D45     		cmp	r5, r9
 2622 00a6 80F2EF80 		bge	.L191
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2623              		.loc 1 664 23 is_stmt 0 view .LVU840
 2624 00aa 0024     		movs	r4, #0
 2625              	.L198:
 2626              	.LVL310:
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2627              		.loc 1 664 30 is_stmt 1 discriminator 1 view .LVU841
 2628 00ac 4445     		cmp	r4, r8
 2629 00ae F3DA     		bge	.L234
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2630              		.loc 1 665 21 discriminator 3 view .LVU842
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2631              		.loc 1 665 35 is_stmt 0 discriminator 3 view .LVU843
 2632 00b0 5246     		mov	r2, r10
 2633 00b2 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2634 00b6 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2635 00ba FFF7FEFF 		bl	lv_color_mix
 2636              	.LVL311:
 2637 00be 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2638              		.loc 1 664 36 is_stmt 1 discriminator 3 view .LVU844
 2639 00c2 0134     		adds	r4, r4, #1
 2640              	.LVL312:
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 2641              		.loc 1 664 36 is_stmt 0 discriminator 3 view .LVU845
 2642 00c4 F2E7     		b	.L198
 2643              	.LVL313:
 2644              	.L236:
 2645              	.LBB111:
 2646              	.LBB109:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2647              		.loc 1 686 21 is_stmt 1 discriminator 3 view .LVU846
 2648 00c6 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2649 00ca 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 2650              	.L201:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2651              		.loc 1 686 21 discriminator 6 view .LVU847
 2652 00ce 0135     		adds	r5, r5, #1
 2653              	.LVL314:
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2654              		.loc 1 685 72 discriminator 6 view .LVU848
 2655 00d0 0134     		adds	r4, r4, #1
 2656              	.LVL315:
 2657              	.L220:
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2658              		.loc 1 685 34 discriminator 2 view .LVU849
 2659 00d2 4445     		cmp	r4, r8
 2660 00d4 7FDA     		bge	.L231
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2661              		.loc 1 685 34 is_stmt 0 discriminator 3 view .LVU850
 2662 00d6 15F0030F 		tst	r5, #3
 2663 00da 0DD0     		beq	.L235
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 92


 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2664              		.loc 1 686 21 is_stmt 1 view .LVU851
 2665 00dc 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2666 00de 002A     		cmp	r2, #0
 2667 00e0 F5D0     		beq	.L201
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2668              		.loc 1 686 21 discriminator 1 view .LVU852
 2669 00e2 FF2A     		cmp	r2, #255
 2670 00e4 EFD0     		beq	.L236
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2671              		.loc 1 686 21 discriminator 4 view .LVU853
 2672 00e6 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2673 00ea 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2674 00ee FFF7FEFF 		bl	lv_color_mix
 2675              	.LVL316:
 2676 00f2 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 2677 00f6 EAE7     		b	.L201
 2678              	.L235:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2679              		.loc 1 686 21 is_stmt 0 discriminator 4 view .LVU854
 2680 00f8 CDF810B0 		str	fp, [sp, #16]
 2681 00fc 14E0     		b	.L214
 2682              	.LVL317:
 2683              	.L238:
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 2684              		.loc 1 693 29 is_stmt 1 view .LVU855
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 2685              		.loc 1 693 41 is_stmt 0 view .LVU856
 2686 00fe 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2687 0102 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2688              		.loc 1 694 29 is_stmt 1 view .LVU857
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2689              		.loc 1 694 54 is_stmt 0 view .LVU858
 2690 0106 631C     		adds	r3, r4, #1
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2691              		.loc 1 694 45 view .LVU859
 2692 0108 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2693 010c 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2694              		.loc 1 695 29 is_stmt 1 view .LVU860
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2695              		.loc 1 695 54 is_stmt 0 view .LVU861
 2696 0110 A31C     		adds	r3, r4, #2
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2697              		.loc 1 695 45 view .LVU862
 2698 0112 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2699 0116 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2700              		.loc 1 696 29 is_stmt 1 view .LVU863
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2701              		.loc 1 696 54 is_stmt 0 view .LVU864
 2702 011a E31C     		adds	r3, r4, #3
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2703              		.loc 1 696 45 view .LVU865
 2704 011c 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2705 0120 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 93


 2706              	.L205:
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2707              		.loc 1 706 21 is_stmt 1 view .LVU866
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2708              		.loc 1 706 27 is_stmt 0 view .LVU867
 2709 0124 0435     		adds	r5, r5, #4
 2710              	.LVL318:
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 2711              		.loc 1 690 37 is_stmt 1 view .LVU868
 2712 0126 0434     		adds	r4, r4, #4
 2713              	.LVL319:
 2714              	.L214:
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 2715              		.loc 1 690 25 discriminator 1 view .LVU869
 2716 0128 5445     		cmp	r4, r10
 2717 012a 57DA     		bge	.L237
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2718              		.loc 1 691 21 view .LVU870
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2719              		.loc 1 691 24 is_stmt 0 view .LVU871
 2720 012c 2B68     		ldr	r3, [r5]
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2721              		.loc 1 691 23 view .LVU872
 2722 012e 002B     		cmp	r3, #0
 2723 0130 F8D0     		beq	.L205
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 2724              		.loc 1 692 25 is_stmt 1 view .LVU873
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 2725              		.loc 1 692 27 is_stmt 0 view .LVU874
 2726 0132 B3F1FF3F 		cmp	r3, #-1
 2727 0136 E2D0     		beq	.L238
 699:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 2728              		.loc 1 699 29 is_stmt 1 view .LVU875
 2729              	.LVL320:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2730              		.loc 1 700 29 view .LVU876
 2731 0138 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2732 013a 4AB1     		cbz	r2, .L207
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2733              		.loc 1 700 29 discriminator 1 view .LVU877
 2734 013c FF2A     		cmp	r2, #255
 2735 013e 33D0     		beq	.L239
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2736              		.loc 1 700 29 discriminator 4 view .LVU878
 2737 0140 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2738 0144 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2739 0148 FFF7FEFF 		bl	lv_color_mix
 2740              	.LVL321:
 2741 014c 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 2742              	.L207:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2743              		.loc 1 700 29 discriminator 6 view .LVU879
 2744              	.LVL322:
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2745              		.loc 1 701 29 discriminator 6 view .LVU880
 2746 0150 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2747 0152 5AB1     		cbz	r2, .L209
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 94


 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2748              		.loc 1 701 29 discriminator 1 view .LVU881
 2749 0154 FF2A     		cmp	r2, #255
 2750 0156 2CD0     		beq	.L240
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2751              		.loc 1 701 29 discriminator 4 view .LVU882
 2752 0158 04F1010B 		add	fp, r4, #1
 2753 015c 36F81B10 		ldrh	r1, [r6, fp, lsl #1]
 2754 0160 37F81B00 		ldrh	r0, [r7, fp, lsl #1]
 2755 0164 FFF7FEFF 		bl	lv_color_mix
 2756              	.LVL323:
 2757 0168 26F81B00 		strh	r0, [r6, fp, lsl #1]	@ movhi
 2758              	.L209:
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2759              		.loc 1 701 29 discriminator 6 view .LVU883
 2760              	.LVL324:
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2761              		.loc 1 702 29 discriminator 6 view .LVU884
 2762 016c AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 2763 016e 5AB1     		cbz	r2, .L211
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2764              		.loc 1 702 29 discriminator 1 view .LVU885
 2765 0170 FF2A     		cmp	r2, #255
 2766 0172 24D0     		beq	.L241
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2767              		.loc 1 702 29 discriminator 4 view .LVU886
 2768 0174 04F1020B 		add	fp, r4, #2
 2769 0178 36F81B10 		ldrh	r1, [r6, fp, lsl #1]
 2770 017c 37F81B00 		ldrh	r0, [r7, fp, lsl #1]
 2771 0180 FFF7FEFF 		bl	lv_color_mix
 2772              	.LVL325:
 2773 0184 26F81B00 		strh	r0, [r6, fp, lsl #1]	@ movhi
 2774              	.L211:
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2775              		.loc 1 702 29 discriminator 6 view .LVU887
 2776              	.LVL326:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2777              		.loc 1 703 29 discriminator 6 view .LVU888
 2778 0188 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2779 018a 002A     		cmp	r2, #0
 2780 018c CAD0     		beq	.L205
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2781              		.loc 1 703 29 discriminator 1 view .LVU889
 2782 018e FF2A     		cmp	r2, #255
 2783 0190 1BD0     		beq	.L242
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2784              		.loc 1 703 29 discriminator 4 view .LVU890
 2785 0192 04F1030B 		add	fp, r4, #3
 2786 0196 36F81B10 		ldrh	r1, [r6, fp, lsl #1]
 2787 019a 37F81B00 		ldrh	r0, [r7, fp, lsl #1]
 2788 019e FFF7FEFF 		bl	lv_color_mix
 2789              	.LVL327:
 2790 01a2 26F81B00 		strh	r0, [r6, fp, lsl #1]	@ movhi
 2791 01a6 BDE7     		b	.L205
 2792              	.LVL328:
 2793              	.L239:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 95


 2794              		.loc 1 700 29 discriminator 3 view .LVU891
 2795 01a8 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2796 01ac 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 2797 01b0 CEE7     		b	.L207
 2798              	.LVL329:
 2799              	.L240:
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2800              		.loc 1 701 29 discriminator 3 view .LVU892
 2801 01b2 631C     		adds	r3, r4, #1
 2802 01b4 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2803 01b8 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2804 01bc D6E7     		b	.L209
 2805              	.LVL330:
 2806              	.L241:
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2807              		.loc 1 702 29 discriminator 3 view .LVU893
 2808 01be A31C     		adds	r3, r4, #2
 2809 01c0 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2810 01c4 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2811 01c8 DEE7     		b	.L211
 2812              	.LVL331:
 2813              	.L242:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2814              		.loc 1 703 29 discriminator 3 view .LVU894
 2815 01ca E31C     		adds	r3, r4, #3
 2816 01cc 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2817 01d0 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2818 01d4 A6E7     		b	.L205
 2819              	.LVL332:
 2820              	.L231:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2821              		.loc 1 703 29 is_stmt 0 discriminator 3 view .LVU895
 2822 01d6 CDF810B0 		str	fp, [sp, #16]
 2823 01da A5E7     		b	.L214
 2824              	.LVL333:
 2825              	.L237:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2826              		.loc 1 703 29 discriminator 3 view .LVU896
 2827 01dc DDF810B0 		ldr	fp, [sp, #16]
 2828 01e0 09E0     		b	.L216
 2829              	.LVL334:
 2830              	.L218:
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2831              		.loc 1 711 21 is_stmt 1 discriminator 4 view .LVU897
 2832 01e2 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2833 01e6 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2834 01ea FFF7FEFF 		bl	lv_color_mix
 2835              	.LVL335:
 2836 01ee 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 2837              	.L217:
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2838              		.loc 1 711 21 discriminator 6 view .LVU898
 2839 01f2 0135     		adds	r5, r5, #1
 2840              	.LVL336:
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2841              		.loc 1 710 32 discriminator 6 view .LVU899
 2842 01f4 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 96


 2843              	.LVL337:
 2844              	.L216:
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2845              		.loc 1 710 25 discriminator 1 view .LVU900
 2846 01f6 4445     		cmp	r4, r8
 2847 01f8 09DA     		bge	.L243
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2848              		.loc 1 711 21 view .LVU901
 2849 01fa 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2850 01fc 002A     		cmp	r2, #0
 2851 01fe F8D0     		beq	.L217
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2852              		.loc 1 711 21 discriminator 1 view .LVU902
 2853 0200 FF2A     		cmp	r2, #255
 2854 0202 EED1     		bne	.L218
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2855              		.loc 1 711 21 discriminator 3 view .LVU903
 2856 0204 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2857 0208 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 2858 020c F1E7     		b	.L217
 2859              	.L243:
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2860              		.loc 1 714 17 discriminator 2 view .LVU904
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2861              		.loc 1 714 26 is_stmt 0 discriminator 2 view .LVU905
 2862 020e 019B     		ldr	r3, [sp, #4]
 2863 0210 06EB4306 		add	r6, r6, r3, lsl #1
 2864              	.LVL338:
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2865              		.loc 1 715 17 is_stmt 1 discriminator 2 view .LVU906
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2866              		.loc 1 715 25 is_stmt 0 discriminator 2 view .LVU907
 2867 0214 039B     		ldr	r3, [sp, #12]
 2868 0216 07EB4307 		add	r7, r7, r3, lsl #1
 2869              	.LVL339:
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2870              		.loc 1 716 17 is_stmt 1 discriminator 2 view .LVU908
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2871              		.loc 1 716 22 is_stmt 0 discriminator 2 view .LVU909
 2872 021a 059B     		ldr	r3, [sp, #20]
 2873 021c 9944     		add	r9, r9, r3
 2874              	.LVL340:
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2875              		.loc 1 716 22 discriminator 2 view .LVU910
 2876              	.LBE109:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2877              		.loc 1 678 32 is_stmt 1 discriminator 2 view .LVU911
 2878 021e 0BF1010B 		add	fp, fp, #1
 2879              	.LVL341:
 2880              	.L200:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2881              		.loc 1 678 26 discriminator 1 view .LVU912
 2882 0222 029B     		ldr	r3, [sp, #8]
 2883 0224 9B45     		cmp	fp, r3
 2884 0226 2FDA     		bge	.L191
 2885              	.LBB110:
 679:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 97


 2886              		.loc 1 679 34 is_stmt 0 view .LVU913
 2887 0228 4D46     		mov	r5, r9
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2888              		.loc 1 685 23 view .LVU914
 2889 022a 0024     		movs	r4, #0
 2890 022c 51E7     		b	.L220
 2891              	.LVL342:
 2892              	.L229:
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 2893              		.loc 1 685 23 view .LVU915
 2894              	.LBE110:
 2895              	.LBE111:
 2896              	.LBB112:
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2897              		.loc 1 724 34 view .LVU916
 2898 022e 5246     		mov	r2, r10
 2899              	.L222:
 2900              	.LVL343:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2901              		.loc 1 725 25 is_stmt 1 discriminator 4 view .LVU917
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2902              		.loc 1 725 39 is_stmt 0 discriminator 4 view .LVU918
 2903 0230 36F81510 		ldrh	r1, [r6, r5, lsl #1]
 2904 0234 3BF81500 		ldrh	r0, [fp, r5, lsl #1]
 2905 0238 FFF7FEFF 		bl	lv_color_mix
 2906              	.LVL344:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2907              		.loc 1 725 39 discriminator 4 view .LVU919
 2908 023c 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
 2909              	.LVL345:
 2910              	.L221:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2911              		.loc 1 725 39 discriminator 4 view .LVU920
 2912              	.LBE112:
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2913              		.loc 1 722 36 is_stmt 1 discriminator 2 view .LVU921
 2914 0240 0134     		adds	r4, r4, #1
 2915              	.LVL346:
 2916              	.L224:
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2917              		.loc 1 722 30 discriminator 1 view .LVU922
 2918 0242 4445     		cmp	r4, r8
 2919 0244 0ADA     		bge	.L244
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2920              		.loc 1 723 21 view .LVU923
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2921              		.loc 1 723 28 is_stmt 0 view .LVU924
 2922 0246 2546     		mov	r5, r4
 2923 0248 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2924              		.loc 1 723 23 view .LVU925
 2925 024c 002A     		cmp	r2, #0
 2926 024e F7D0     		beq	.L221
 2927              	.LBB113:
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2928              		.loc 1 724 25 is_stmt 1 view .LVU926
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 98


 2929              		.loc 1 724 34 is_stmt 0 view .LVU927
 2930 0250 FC2A     		cmp	r2, #252
 2931 0252 ECD8     		bhi	.L229
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2932              		.loc 1 724 80 discriminator 1 view .LVU928
 2933 0254 02FB0AF2 		mul	r2, r2, r10
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2934              		.loc 1 724 34 discriminator 1 view .LVU929
 2935 0258 120A     		lsrs	r2, r2, #8
 2936 025a E9E7     		b	.L222
 2937              	.L244:
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 2938              		.loc 1 724 34 discriminator 1 view .LVU930
 2939              	.LBE113:
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2940              		.loc 1 728 17 is_stmt 1 discriminator 2 view .LVU931
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2941              		.loc 1 728 26 is_stmt 0 discriminator 2 view .LVU932
 2942 025c 019B     		ldr	r3, [sp, #4]
 2943 025e 06EB4306 		add	r6, r6, r3, lsl #1
 2944              	.LVL347:
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2945              		.loc 1 729 17 is_stmt 1 discriminator 2 view .LVU933
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2946              		.loc 1 729 25 is_stmt 0 discriminator 2 view .LVU934
 2947 0262 039B     		ldr	r3, [sp, #12]
 2948 0264 0BEB430B 		add	fp, fp, r3, lsl #1
 2949              	.LVL348:
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2950              		.loc 1 730 17 is_stmt 1 discriminator 2 view .LVU935
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2951              		.loc 1 730 22 is_stmt 0 discriminator 2 view .LVU936
 2952 0268 049B     		ldr	r3, [sp, #16]
 2953 026a 9944     		add	r9, r9, r3
 2954              	.LVL349:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2955              		.loc 1 721 32 is_stmt 1 discriminator 2 view .LVU937
 2956 026c 0137     		adds	r7, r7, #1
 2957              	.LVL350:
 2958              	.L199:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2959              		.loc 1 721 26 discriminator 1 view .LVU938
 2960 026e 029B     		ldr	r3, [sp, #8]
 2961 0270 9F42     		cmp	r7, r3
 2962 0272 09DA     		bge	.L191
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2963              		.loc 1 722 23 is_stmt 0 view .LVU939
 2964 0274 0024     		movs	r4, #0
 2965 0276 E4E7     		b	.L224
 2966              	.LVL351:
 2967              	.L227:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2968              		.loc 1 721 19 view .LVU940
 2969 0278 4FF0000B 		mov	fp, #0
 2970 027c 3B46     		mov	r3, r7
 2971              	.LVL352:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 99


 2972              		.loc 1 721 19 view .LVU941
 2973 027e 5F46     		mov	r7, fp
 2974              	.LVL353:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2975              		.loc 1 721 19 view .LVU942
 2976 0280 CDF810C0 		str	ip, [sp, #16]
 2977 0284 9B46     		mov	fp, r3
 2978 0286 F2E7     		b	.L199
 2979              	.LVL354:
 2980              	.L191:
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2981              		.loc 1 734 1 view .LVU943
 2982 0288 07B0     		add	sp, sp, #28
 2983              	.LCFI26:
 2984              		.cfi_def_cfa_offset 36
 2985              		@ sp needed
 2986 028a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2987              		.loc 1 734 1 view .LVU944
 2988              		.cfi_endproc
 2989              	.LFE167:
 2991              		.section	.text.lv_draw_sw_blend,"ax",%progbits
 2992              		.align	1
 2993              		.global	lv_draw_sw_blend
 2994              		.syntax unified
 2995              		.thumb
 2996              		.thumb_func
 2998              	lv_draw_sw_blend:
 2999              	.LVL355:
 3000              	.LFB161:
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 3001              		.loc 1 96 1 is_stmt 1 view -0
 3002              		.cfi_startproc
 3003              		@ args = 0, pretend = 0, frame = 8
 3004              		@ frame_needed = 0, uses_anonymous_args = 0
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3005              		.loc 1 98 5 view .LVU946
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3006              		.loc 1 98 11 is_stmt 0 view .LVU947
 3007 0000 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3008              		.loc 1 98 7 view .LVU948
 3009 0002 022B     		cmp	r3, #2
 3010 0004 00D8     		bhi	.L253
 3011 0006 7047     		bx	lr
 3012              	.L253:
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 3013              		.loc 1 96 1 view .LVU949
 3014 0008 30B5     		push	{r4, r5, lr}
 3015              	.LCFI27:
 3016              		.cfi_def_cfa_offset 12
 3017              		.cfi_offset 4, -12
 3018              		.cfi_offset 5, -8
 3019              		.cfi_offset 14, -4
 3020 000a 83B0     		sub	sp, sp, #12
 3021              	.LCFI28:
 3022              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 100


 3023 000c 0546     		mov	r5, r0
 3024 000e 0C46     		mov	r4, r1
 100:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 3025              		.loc 1 100 5 is_stmt 1 view .LVU950
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3026              		.loc 1 101 5 view .LVU951
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3027              		.loc 1 101 9 is_stmt 0 view .LVU952
 3028 0010 8268     		ldr	r2, [r0, #8]
 3029 0012 0968     		ldr	r1, [r1]
 3030              	.LVL356:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3031              		.loc 1 101 9 view .LVU953
 3032 0014 6846     		mov	r0, sp
 3033              	.LVL357:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3034              		.loc 1 101 9 view .LVU954
 3035 0016 FFF7FEFF 		bl	_lv_area_intersect
 3036              	.LVL358:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3037              		.loc 1 101 7 view .LVU955
 3038 001a 38B1     		cbz	r0, .L245
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3039              		.loc 1 103 5 is_stmt 1 view .LVU956
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3040              		.loc 1 103 16 is_stmt 0 view .LVU957
 3041 001c 6B6B     		ldr	r3, [r5, #52]
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3042              		.loc 1 103 7 view .LVU958
 3043 001e 0BB1     		cbz	r3, .L247
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3044              		.loc 1 103 35 is_stmt 1 discriminator 1 view .LVU959
 3045 0020 2846     		mov	r0, r5
 3046 0022 9847     		blx	r3
 3047              	.LVL359:
 3048              	.L247:
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 3049              		.loc 1 105 5 view .LVU960
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 3050              		.loc 1 105 35 is_stmt 0 view .LVU961
 3051 0024 6B6D     		ldr	r3, [r5, #84]
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 3052              		.loc 1 105 6 view .LVU962
 3053 0026 2146     		mov	r1, r4
 3054 0028 2846     		mov	r0, r5
 3055 002a 9847     		blx	r3
 3056              	.LVL360:
 3057              	.L245:
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3058              		.loc 1 106 1 view .LVU963
 3059 002c 03B0     		add	sp, sp, #12
 3060              	.LCFI29:
 3061              		.cfi_def_cfa_offset 12
 3062              		@ sp needed
 3063 002e 30BD     		pop	{r4, r5, pc}
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3064              		.loc 1 106 1 view .LVU964
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 101


 3065              		.cfi_endproc
 3066              	.LFE161:
 3068              		.section	.text.lv_draw_sw_blend_basic,"ax",%progbits
 3069              		.align	1
 3070              		.global	lv_draw_sw_blend_basic
 3071              		.syntax unified
 3072              		.thumb
 3073              		.thumb_func
 3075              	lv_draw_sw_blend_basic:
 3076              	.LVL361:
 3077              	.LFB162:
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 3078              		.loc 1 110 1 is_stmt 1 view -0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 16
 3081              		@ frame_needed = 0, uses_anonymous_args = 0
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 3082              		.loc 1 110 1 is_stmt 0 view .LVU966
 3083 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3084              	.LCFI30:
 3085              		.cfi_def_cfa_offset 36
 3086              		.cfi_offset 4, -36
 3087              		.cfi_offset 5, -32
 3088              		.cfi_offset 6, -28
 3089              		.cfi_offset 7, -24
 3090              		.cfi_offset 8, -20
 3091              		.cfi_offset 9, -16
 3092              		.cfi_offset 10, -12
 3093              		.cfi_offset 11, -8
 3094              		.cfi_offset 14, -4
 3095 0004 8BB0     		sub	sp, sp, #44
 3096              	.LCFI31:
 3097              		.cfi_def_cfa_offset 80
 3098 0006 0646     		mov	r6, r0
 3099 0008 0C46     		mov	r4, r1
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 3100              		.loc 1 111 5 is_stmt 1 view .LVU967
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 3101              		.loc 1 112 5 view .LVU968
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 3102              		.loc 1 112 11 is_stmt 0 view .LVU969
 3103 000a CF68     		ldr	r7, [r1, #12]
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3104              		.loc 1 113 5 is_stmt 1 view .LVU970
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3105              		.loc 1 113 7 is_stmt 0 view .LVU971
 3106 000c 0FB1     		cbz	r7, .L255
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3107              		.loc 1 113 28 discriminator 1 view .LVU972
 3108 000e 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3109              		.loc 1 113 22 discriminator 1 view .LVU973
 3110 0010 7BB1     		cbz	r3, .L254
 3111              	.L255:
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 3112              		.loc 1 114 10 is_stmt 1 view .LVU974
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 102


 3113              		.loc 1 114 16 is_stmt 0 view .LVU975
 3114 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 3115              		.loc 1 114 12 view .LVU976
 3116 0014 012B     		cmp	r3, #1
 3117 0016 0FD0     		beq	.L277
 3118              	.L257:
 3119              	.LVL362:
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3120              		.loc 1 117 5 is_stmt 1 view .LVU977
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3121              		.loc 1 117 56 is_stmt 0 view .LVU978
 3122 0018 7368     		ldr	r3, [r6, #4]
 3123              	.LVL363:
 3124              	.LBB114:
 3125              	.LBI114:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 3126              		.loc 3 123 26 is_stmt 1 view .LVU979
 3127              	.LBB115:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3128              		.loc 3 125 5 view .LVU980
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3129              		.loc 3 125 31 is_stmt 0 view .LVU981
 3130 001a 9D88     		ldrh	r5, [r3, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3131              		.loc 3 125 44 view .LVU982
 3132 001c 1B88     		ldrh	r3, [r3]
 3133              	.LVL364:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3134              		.loc 3 125 36 view .LVU983
 3135 001e ED1A     		subs	r5, r5, r3
 3136 0020 ADB2     		uxth	r5, r5
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3137              		.loc 3 125 49 view .LVU984
 3138 0022 0135     		adds	r5, r5, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3139              		.loc 3 125 12 view .LVU985
 3140 0024 2DB2     		sxth	r5, r5
 3141              	.LVL365:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3142              		.loc 3 125 12 view .LVU986
 3143              	.LBE115:
 3144              	.LBE114:
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 3145              		.loc 1 119 5 is_stmt 1 view .LVU987
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3146              		.loc 1 120 5 view .LVU988
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3147              		.loc 1 120 9 is_stmt 0 view .LVU989
 3148 0026 B268     		ldr	r2, [r6, #8]
 3149 0028 2168     		ldr	r1, [r4]
 3150              	.LVL366:
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3151              		.loc 1 120 9 view .LVU990
 3152 002a 08A8     		add	r0, sp, #32
 3153              	.LVL367:
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 103


 3154              		.loc 1 120 9 view .LVU991
 3155 002c FFF7FEFF 		bl	_lv_area_intersect
 3156              	.LVL368:
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3157              		.loc 1 120 7 view .LVU992
 3158 0030 20B9     		cbnz	r0, .L278
 3159              	.LVL369:
 3160              	.L254:
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3161              		.loc 1 204 1 view .LVU993
 3162 0032 0BB0     		add	sp, sp, #44
 3163              	.LCFI32:
 3164              		.cfi_remember_state
 3165              		.cfi_def_cfa_offset 36
 3166              		@ sp needed
 3167 0034 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3168              	.LVL370:
 3169              	.L277:
 3170              	.LCFI33:
 3171              		.cfi_restore_state
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 3172              		.loc 1 114 64 view .LVU994
 3173 0038 0027     		movs	r7, #0
 3174 003a EDE7     		b	.L257
 3175              	.LVL371:
 3176              	.L278:
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 3177              		.loc 1 122 5 is_stmt 1 view .LVU995
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 3178              		.loc 1 122 24 is_stmt 0 view .LVU996
 3179 003c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 3180              	.LVL372:
 3181 0040 0790     		str	r0, [sp, #28]
 3182              	.LVL373:
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 3183              		.loc 1 123 5 is_stmt 1 view .LVU997
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 3184              		.loc 1 123 18 is_stmt 0 view .LVU998
 3185 0042 D6F800B0 		ldr	fp, [r6]
 3186              	.LVL374:
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 3187              		.loc 1 124 5 is_stmt 1 view .LVU999
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 3188              		.loc 1 124 12 is_stmt 0 view .LVU1000
 3189 0046 0368     		ldr	r3, [r0]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 3190              		.loc 1 124 20 view .LVU1001
 3191 0048 DA69     		ldr	r2, [r3, #28]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 3192              		.loc 1 124 7 view .LVU1002
 3193 004a 002A     		cmp	r2, #0
 3194 004c 5ED0     		beq	.L279
 3195              	.LVL375:
 3196              	.L258:
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 3197              		.loc 1 137 5 is_stmt 1 view .LVU1003
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 104


 3198              		.loc 1 137 24 is_stmt 0 view .LVU1004
 3199 004e D4F804A0 		ldr	r10, [r4, #4]
 3200              	.LVL376:
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
 3201              		.loc 1 138 5 is_stmt 1 view .LVU1005
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 3202              		.loc 1 139 5 view .LVU1006
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 3203              		.loc 1 139 7 is_stmt 0 view .LVU1007
 3204 0052 BAF1000F 		cmp	r10, #0
 3205 0056 00F08180 		beq	.L273
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 3206              		.loc 1 140 9 is_stmt 1 view .LVU1008
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 3207              		.loc 1 140 43 is_stmt 0 view .LVU1009
 3208 005a 2268     		ldr	r2, [r4]
 3209              	.LVL377:
 3210              	.LBB116:
 3211              	.LBI116:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 3212              		.loc 3 123 26 is_stmt 1 view .LVU1010
 3213              	.LBB117:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3214              		.loc 3 125 5 view .LVU1011
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3215              		.loc 3 125 31 is_stmt 0 view .LVU1012
 3216 005c B2F80490 		ldrh	r9, [r2, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3217              		.loc 3 125 44 view .LVU1013
 3218 0060 B2F90010 		ldrsh	r1, [r2]
 3219 0064 88B2     		uxth	r0, r1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3220              		.loc 3 125 36 view .LVU1014
 3221 0066 A9EB0009 		sub	r9, r9, r0
 3222 006a 1FFA89F9 		uxth	r9, r9
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3223              		.loc 3 125 49 view .LVU1015
 3224 006e 09F10109 		add	r9, r9, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3225              		.loc 3 125 12 view .LVU1016
 3226 0072 0FFA89F9 		sxth	r9, r9
 3227              	.LVL378:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3228              		.loc 3 125 12 view .LVU1017
 3229              	.LBE117:
 3230              	.LBE116:
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3231              		.loc 1 141 9 is_stmt 1 view .LVU1018
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3232              		.loc 1 141 44 is_stmt 0 view .LVU1019
 3233 0076 BDF92200 		ldrsh	r0, [sp, #34]
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3234              		.loc 1 141 65 view .LVU1020
 3235 007a B2F90220 		ldrsh	r2, [r2, #2]
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3236              		.loc 1 141 48 view .LVU1021
 3237 007e 801A     		subs	r0, r0, r2
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 105


 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3238              		.loc 1 141 84 view .LVU1022
 3239 0080 BDF92020 		ldrsh	r2, [sp, #32]
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3240              		.loc 1 141 88 view .LVU1023
 3241 0084 521A     		subs	r2, r2, r1
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3242              		.loc 1 141 71 view .LVU1024
 3243 0086 00FB0922 		mla	r2, r0, r9, r2
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3244              		.loc 1 141 17 view .LVU1025
 3245 008a 0AEB420A 		add	r10, r10, r2, lsl #1
 3246              	.LVL379:
 3247              	.L260:
 147:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 3248              		.loc 1 147 5 is_stmt 1 view .LVU1026
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 3249              		.loc 1 148 5 view .LVU1027
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 3250              		.loc 1 148 7 is_stmt 0 view .LVU1028
 3251 008e 002F     		cmp	r7, #0
 3252 0090 77D0     		beq	.L274
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 3253              		.loc 1 150 9 is_stmt 1 view .LVU1029
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 3254              		.loc 1 150 39 is_stmt 0 view .LVU1030
 3255 0092 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 3256              		.loc 1 150 11 view .LVU1031
 3257 0094 13F00808 		ands	r8, r3, #8
 3258 0098 63D0     		beq	.L280
 3259              	.L262:
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 3260              		.loc 1 158 9 is_stmt 1 view .LVU1032
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 3261              		.loc 1 158 44 is_stmt 0 view .LVU1033
 3262 009a 6369     		ldr	r3, [r4, #20]
 3263              	.LVL380:
 3264              	.LBB118:
 3265              	.LBI118:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 3266              		.loc 3 123 26 is_stmt 1 view .LVU1034
 3267              	.LBB119:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3268              		.loc 3 125 5 view .LVU1035
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3269              		.loc 3 125 31 is_stmt 0 view .LVU1036
 3270 009c B3F80480 		ldrh	r8, [r3, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3271              		.loc 3 125 44 view .LVU1037
 3272 00a0 B3F90020 		ldrsh	r2, [r3]
 3273 00a4 91B2     		uxth	r1, r2
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3274              		.loc 3 125 36 view .LVU1038
 3275 00a6 A8EB0108 		sub	r8, r8, r1
 3276 00aa 1FFA88F8 		uxth	r8, r8
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 106


 3277              		.loc 3 125 49 view .LVU1039
 3278 00ae 08F10108 		add	r8, r8, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3279              		.loc 3 125 12 view .LVU1040
 3280 00b2 0FFA88F8 		sxth	r8, r8
 3281              	.LVL381:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3282              		.loc 3 125 12 view .LVU1041
 3283              	.LBE119:
 3284              	.LBE118:
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3285              		.loc 1 159 9 is_stmt 1 view .LVU1042
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3286              		.loc 1 159 42 is_stmt 0 view .LVU1043
 3287 00b6 BDF92210 		ldrsh	r1, [sp, #34]
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3288              		.loc 1 159 62 view .LVU1044
 3289 00ba B3F90230 		ldrsh	r3, [r3, #2]
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3290              		.loc 1 159 46 view .LVU1045
 3291 00be C91A     		subs	r1, r1, r3
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3292              		.loc 1 159 81 view .LVU1046
 3293 00c0 BDF92030 		ldrsh	r3, [sp, #32]
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3294              		.loc 1 159 85 view .LVU1047
 3295 00c4 9B1A     		subs	r3, r3, r2
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3296              		.loc 1 159 68 view .LVU1048
 3297 00c6 01FB0833 		mla	r3, r1, r8, r3
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3298              		.loc 1 159 14 view .LVU1049
 3299 00ca 1F44     		add	r7, r7, r3
 3300              	.LVL382:
 3301              	.L261:
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3302              		.loc 1 166 5 is_stmt 1 view .LVU1050
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3303              		.loc 1 166 40 is_stmt 0 view .LVU1051
 3304 00cc 7368     		ldr	r3, [r6, #4]
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3305              		.loc 1 166 50 view .LVU1052
 3306 00ce 1988     		ldrh	r1, [r3]
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3307              		.loc 1 166 75 view .LVU1053
 3308 00d0 5A88     		ldrh	r2, [r3, #2]
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3309              		.loc 1 166 5 view .LVU1054
 3310 00d2 5242     		rsbs	r2, r2, #0
 3311 00d4 4942     		rsbs	r1, r1, #0
 3312 00d6 12B2     		sxth	r2, r2
 3313 00d8 09B2     		sxth	r1, r1
 3314 00da 08A8     		add	r0, sp, #32
 3315 00dc FFF7FEFF 		bl	lv_area_move
 3316              	.LVL383:
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3317              		.loc 1 168 5 is_stmt 1 view .LVU1055
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 107


 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3318              		.loc 1 168 12 is_stmt 0 view .LVU1056
 3319 00e0 079B     		ldr	r3, [sp, #28]
 3320 00e2 1B68     		ldr	r3, [r3]
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3321              		.loc 1 168 20 view .LVU1057
 3322 00e4 DB69     		ldr	r3, [r3, #28]
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3323              		.loc 1 168 7 view .LVU1058
 3324 00e6 002B     		cmp	r3, #0
 3325 00e8 5AD0     		beq	.L266
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3326              		.loc 1 169 9 is_stmt 1 view .LVU1059
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3327              		.loc 1 169 15 is_stmt 0 view .LVU1060
 3328 00ea 6368     		ldr	r3, [r4, #4]
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3329              		.loc 1 169 11 view .LVU1061
 3330 00ec 002B     		cmp	r3, #0
 3331 00ee 4BD0     		beq	.L281
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3332              		.loc 1 173 13 is_stmt 1 view .LVU1062
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3333              		.loc 1 173 84 is_stmt 0 view .LVU1063
 3334 00f0 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3335              		.loc 1 173 13 view .LVU1064
 3336 00f2 CDF80C80 		str	r8, [sp, #12]
 3337 00f6 0297     		str	r7, [sp, #8]
 3338 00f8 0193     		str	r3, [sp, #4]
 3339 00fa CDF80090 		str	r9, [sp]
 3340 00fe 5346     		mov	r3, r10
 3341 0100 2A46     		mov	r2, r5
 3342 0102 08A9     		add	r1, sp, #32
 3343 0104 5846     		mov	r0, fp
 3344 0106 FFF7FEFF 		bl	map_set_px
 3345              	.LVL384:
 3346 010a 92E7     		b	.L254
 3347              	.LVL385:
 3348              	.L279:
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 3349              		.loc 1 125 9 is_stmt 1 view .LVU1065
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 3350              		.loc 1 125 40 is_stmt 0 view .LVU1066
 3351 010c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 3352              		.loc 1 125 11 view .LVU1067
 3353 010e 12F0400F 		tst	r2, #64
 3354 0112 0FD1     		bne	.L259
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3355              		.loc 1 126 13 is_stmt 1 view .LVU1068
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3356              		.loc 1 126 50 is_stmt 0 view .LVU1069
 3357 0114 BDF92210 		ldrsh	r1, [sp, #34]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3358              		.loc 1 126 64 view .LVU1070
 3359 0118 7068     		ldr	r0, [r6, #4]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 108


 3360              	.LVL386:
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3361              		.loc 1 126 74 view .LVU1071
 3362 011a B0F90220 		ldrsh	r2, [r0, #2]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3363              		.loc 1 126 54 view .LVU1072
 3364 011e 891A     		subs	r1, r1, r2
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3365              		.loc 1 126 93 view .LVU1073
 3366 0120 BDF92020 		ldrsh	r2, [sp, #32]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3367              		.loc 1 126 117 view .LVU1074
 3368 0124 B0F90000 		ldrsh	r0, [r0]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3369              		.loc 1 126 97 view .LVU1075
 3370 0128 121A     		subs	r2, r2, r0
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3371              		.loc 1 126 80 view .LVU1076
 3372 012a 01FB0522 		mla	r2, r1, r5, r2
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3373              		.loc 1 126 22 view .LVU1077
 3374 012e 0BEB420B 		add	fp, fp, r2, lsl #1
 3375              	.LVL387:
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3376              		.loc 1 126 22 view .LVU1078
 3377 0132 8CE7     		b	.L258
 3378              	.LVL388:
 3379              	.L259:
 3380              	.LBB120:
 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) * LV_IMG_PX_SIZE_AL
 3381              		.loc 1 130 13 is_stmt 1 view .LVU1079
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3382              		.loc 1 131 13 view .LVU1080
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3383              		.loc 1 131 51 is_stmt 0 view .LVU1081
 3384 0134 BDF92220 		ldrsh	r2, [sp, #34]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3385              		.loc 1 131 65 view .LVU1082
 3386 0138 7068     		ldr	r0, [r6, #4]
 3387              	.LVL389:
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3388              		.loc 1 131 75 view .LVU1083
 3389 013a B0F90210 		ldrsh	r1, [r0, #2]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3390              		.loc 1 131 55 view .LVU1084
 3391 013e 521A     		subs	r2, r2, r1
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3392              		.loc 1 131 38 view .LVU1085
 3393 0140 05FB02F2 		mul	r2, r5, r2
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 3394              		.loc 1 131 81 view .LVU1086
 3395 0144 02EB4202 		add	r2, r2, r2, lsl #1
 3396              	.LVL390:
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3397              		.loc 1 132 13 is_stmt 1 view .LVU1087
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3398              		.loc 1 132 37 is_stmt 0 view .LVU1088
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 109


 3399 0148 BDF92010 		ldrsh	r1, [sp, #32]
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3400              		.loc 1 132 61 view .LVU1089
 3401 014c B0F90000 		ldrsh	r0, [r0]
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3402              		.loc 1 132 41 view .LVU1090
 3403 0150 091A     		subs	r1, r1, r0
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3404              		.loc 1 132 67 view .LVU1091
 3405 0152 01EB4101 		add	r1, r1, r1, lsl #1
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3406              		.loc 1 132 23 view .LVU1092
 3407 0156 0A44     		add	r2, r2, r1
 3408              	.LVL391:
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 3409              		.loc 1 132 23 view .LVU1093
 3410 0158 9344     		add	fp, fp, r2
 3411              	.LVL392:
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3412              		.loc 1 133 13 is_stmt 1 view .LVU1094
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3413              		.loc 1 133 13 is_stmt 0 view .LVU1095
 3414 015a 78E7     		b	.L258
 3415              	.LVL393:
 3416              	.L273:
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3417              		.loc 1 133 13 view .LVU1096
 3418              	.LBE120:
 144:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3419              		.loc 1 144 20 view .LVU1097
 3420 015c 4FF00009 		mov	r9, #0
 3421 0160 95E7     		b	.L260
 3422              	.LVL394:
 3423              	.L280:
 3424              	.LBB121:
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 3425              		.loc 1 151 13 is_stmt 1 view .LVU1098
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 3426              		.loc 1 151 33 is_stmt 0 view .LVU1099
 3427 0162 6069     		ldr	r0, [r4, #20]
 3428 0164 FFF7FEFF 		bl	lv_area_get_size
 3429              	.LVL395:
 152:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(i = 0; i < mask_size; i++) {
 3430              		.loc 1 152 13 is_stmt 1 view .LVU1100
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3431              		.loc 1 153 13 view .LVU1101
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3432              		.loc 1 153 19 is_stmt 0 view .LVU1102
 3433 0168 0023     		movs	r3, #0
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3434              		.loc 1 153 13 view .LVU1103
 3435 016a 02E0     		b	.L263
 3436              	.LVL396:
 3437              	.L275:
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3438              		.loc 1 154 25 view .LVU1104
 3439 016c 4146     		mov	r1, r8
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 110


 3440              	.L264:
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3441              		.loc 1 154 25 discriminator 4 view .LVU1105
 3442 016e 1170     		strb	r1, [r2]
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3443              		.loc 1 153 40 is_stmt 1 discriminator 4 view .LVU1106
 3444 0170 0133     		adds	r3, r3, #1
 3445              	.LVL397:
 3446              	.L263:
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 3447              		.loc 1 153 26 discriminator 2 view .LVU1107
 3448 0172 8342     		cmp	r3, r0
 3449 0174 91DA     		bge	.L262
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3450              		.loc 1 154 17 view .LVU1108
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3451              		.loc 1 154 31 is_stmt 0 view .LVU1109
 3452 0176 FA18     		adds	r2, r7, r3
 3453 0178 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3454              		.loc 1 154 25 view .LVU1110
 3455 017a 8029     		cmp	r1, #128
 3456 017c F6D9     		bls	.L275
 3457 017e FF21     		movs	r1, #255
 3458 0180 F5E7     		b	.L264
 3459              	.LVL398:
 3460              	.L274:
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3461              		.loc 1 154 25 view .LVU1111
 3462              	.LBE121:
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3463              		.loc 1 163 21 view .LVU1112
 3464 0182 4FF00008 		mov	r8, #0
 3465 0186 A1E7     		b	.L261
 3466              	.LVL399:
 3467              	.L281:
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3468              		.loc 1 170 13 is_stmt 1 view .LVU1113
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3469              		.loc 1 170 76 is_stmt 0 view .LVU1114
 3470 0188 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3471              		.loc 1 170 13 view .LVU1115
 3472 018a CDF80880 		str	r8, [sp, #8]
 3473 018e 0197     		str	r7, [sp, #4]
 3474 0190 0093     		str	r3, [sp]
 3475 0192 2389     		ldrh	r3, [r4, #8]
 3476 0194 2A46     		mov	r2, r5
 3477 0196 08A9     		add	r1, sp, #32
 3478 0198 5846     		mov	r0, fp
 3479 019a FFF7FEFF 		bl	fill_set_px
 3480              	.LVL400:
 3481 019e 48E7     		b	.L254
 3482              	.L266:
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3483              		.loc 1 186 10 is_stmt 1 view .LVU1116
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 111


 3484              		.loc 1 186 16 is_stmt 0 view .LVU1117
 3485 01a0 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3486              		.loc 1 186 12 view .LVU1118
 3487 01a2 DBB9     		cbnz	r3, .L269
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3488              		.loc 1 187 9 is_stmt 1 view .LVU1119
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3489              		.loc 1 187 15 is_stmt 0 view .LVU1120
 3490 01a4 6368     		ldr	r3, [r4, #4]
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3491              		.loc 1 187 11 view .LVU1121
 3492 01a6 6BB1     		cbz	r3, .L282
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3493              		.loc 1 191 13 is_stmt 1 view .LVU1122
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3494              		.loc 1 191 84 is_stmt 0 view .LVU1123
 3495 01a8 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3496              		.loc 1 191 13 view .LVU1124
 3497 01aa CDF80C80 		str	r8, [sp, #12]
 3498 01ae 0297     		str	r7, [sp, #8]
 3499 01b0 0193     		str	r3, [sp, #4]
 3500 01b2 CDF80090 		str	r9, [sp]
 3501 01b6 5346     		mov	r3, r10
 3502 01b8 2A46     		mov	r2, r5
 3503 01ba 08A9     		add	r1, sp, #32
 3504 01bc 5846     		mov	r0, fp
 3505 01be FFF7FEFF 		bl	map_normal
 3506              	.LVL401:
 3507 01c2 36E7     		b	.L254
 3508              	.L282:
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3509              		.loc 1 188 13 is_stmt 1 view .LVU1125
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3510              		.loc 1 188 76 is_stmt 0 view .LVU1126
 3511 01c4 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3512              		.loc 1 188 13 view .LVU1127
 3513 01c6 CDF80880 		str	r8, [sp, #8]
 3514 01ca 0197     		str	r7, [sp, #4]
 3515 01cc 0093     		str	r3, [sp]
 3516 01ce 2389     		ldrh	r3, [r4, #8]
 3517 01d0 2A46     		mov	r2, r5
 3518 01d2 08A9     		add	r1, sp, #32
 3519 01d4 5846     		mov	r0, fp
 3520 01d6 FFF7FEFF 		bl	fill_normal
 3521              	.LVL402:
 3522 01da 2AE7     		b	.L254
 3523              	.L269:
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 3524              		.loc 1 196 9 is_stmt 1 view .LVU1128
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 3525              		.loc 1 196 15 is_stmt 0 view .LVU1129
 3526 01dc 6268     		ldr	r2, [r4, #4]
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 3527              		.loc 1 196 11 view .LVU1130
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 112


 3528 01de 72B1     		cbz	r2, .L283
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3529              		.loc 1 200 13 is_stmt 1 view .LVU1131
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3530              		.loc 1 200 85 is_stmt 0 view .LVU1132
 3531 01e0 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3532              		.loc 1 200 13 view .LVU1133
 3533 01e2 0493     		str	r3, [sp, #16]
 3534 01e4 CDF80C80 		str	r8, [sp, #12]
 3535 01e8 0297     		str	r7, [sp, #8]
 3536 01ea 0192     		str	r2, [sp, #4]
 3537 01ec CDF80090 		str	r9, [sp]
 3538 01f0 5346     		mov	r3, r10
 3539 01f2 2A46     		mov	r2, r5
 3540 01f4 08A9     		add	r1, sp, #32
 3541 01f6 5846     		mov	r0, fp
 3542 01f8 FFF7FEFF 		bl	map_blended
 3543              	.LVL403:
 3544 01fc 19E7     		b	.L254
 3545              	.L283:
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3546              		.loc 1 197 13 is_stmt 1 view .LVU1134
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3547              		.loc 1 197 77 is_stmt 0 view .LVU1135
 3548 01fe 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3549              		.loc 1 197 13 view .LVU1136
 3550 0200 0393     		str	r3, [sp, #12]
 3551 0202 CDF80880 		str	r8, [sp, #8]
 3552 0206 0197     		str	r7, [sp, #4]
 3553 0208 0092     		str	r2, [sp]
 3554 020a 2389     		ldrh	r3, [r4, #8]
 3555 020c 2A46     		mov	r2, r5
 3556 020e 08A9     		add	r1, sp, #32
 3557 0210 5846     		mov	r0, fp
 3558 0212 FFF7FEFF 		bl	fill_blended
 3559              	.LVL404:
 3560 0216 0CE7     		b	.L254
 3561              		.cfi_endproc
 3562              	.LFE162:
 3564              		.text
 3565              	.Letext0:
 3566              		.file 4 "/usr/local/include/sys/_types/_int8_t.h"
 3567              		.file 5 "/usr/local/include/sys/_types/_int16_t.h"
 3568              		.file 6 "/usr/local/include/sys/_types/_int32_t.h"
 3569              		.file 7 "/usr/local/include/_types/_uint8_t.h"
 3570              		.file 8 "/usr/local/include/_types/_uint16_t.h"
 3571              		.file 9 "/usr/local/include/_types/_uint32_t.h"
 3572              		.file 10 "/usr/local/include/arm/_types.h"
 3573              		.file 11 "/usr/local/include/sys/_types/_uintptr_t.h"
 3574              		.file 12 "lvgl/src/draw/sw/../../misc/lv_types.h"
 3575              		.file 13 "/usr/local/include/sys/_types/_size_t.h"
 3576              		.file 14 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 3577              		.file 15 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 3578              		.file 16 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 3579              		.file 17 "lvgl/src/draw/sw/../../misc/lv_style.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 113


 3580              		.file 18 "lvgl/src/draw/sw/../lv_draw_mask.h"
 3581              		.file 19 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 3582              		.file 20 "lvgl/src/draw/sw/../lv_img_buf.h"
 3583              		.file 21 "lvgl/src/draw/sw/../../core/lv_obj.h"
 3584              		.file 22 "lvgl/src/draw/sw/../lv_draw_rect.h"
 3585              		.file 23 "lvgl/src/draw/sw/../lv_draw_label.h"
 3586              		.file 24 "lvgl/src/draw/sw/../lv_draw_img.h"
 3587              		.file 25 "lvgl/src/draw/sw/../lv_draw_line.h"
 3588              		.file 26 "lvgl/src/draw/sw/../lv_draw_arc.h"
 3589              		.file 27 "lvgl/src/draw/sw/../lv_draw_layer.h"
 3590              		.file 28 "lvgl/src/draw/sw/../lv_draw.h"
 3591              		.file 29 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 3592              		.file 30 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 3593              		.file 31 "lvgl/src/draw/sw/../../core/lv_group.h"
 3594              		.file 32 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 3595              		.file 33 "lvgl/src/draw/sw/lv_draw_sw.h"
 3596              		.file 34 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 3597              		.file 35 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 3598              		.file 36 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
 3599              		.file 37 "lvgl/src/draw/sw/../../core/lv_event.h"
 3600              		.file 38 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 3601              		.file 39 "lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s 			page 114


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_blend.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:21     .text.lv_color_mix:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:26     .text.lv_color_mix:00000000 lv_color_mix
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:82     .text.lv_color_mix:0000002c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:87     .text.lv_color_mix_premult:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:92     .text.lv_color_mix_premult:00000000 lv_color_mix_premult
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:151    .text.fill_blended:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:156    .text.fill_blended:00000000 fill_blended
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:519    .text.fill_blended:00000150 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:970    .text.color_blend_true_color_additive:00000000 color_blend_true_color_additive
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1071   .text.color_blend_true_color_subtractive:00000000 color_blend_true_color_subtractive
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1166   .text.color_blend_true_color_multiply:00000000 color_blend_true_color_multiply
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:527    .text.map_blended:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:532    .text.map_blended:00000000 map_blended
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:957    .text.map_blended:00000188 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:965    .text.color_blend_true_color_additive:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1066   .text.color_blend_true_color_subtractive:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1161   .text.color_blend_true_color_multiply:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1239   .text.fill_set_px:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1244   .text.fill_set_px:00000000 fill_set_px
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1482   .text.map_set_px:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1487   .text.map_set_px:00000000 map_set_px
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1718   .text.fill_normal:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:1723   .text.fill_normal:00000000 fill_normal
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:2458   .text.map_normal:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:2463   .text.map_normal:00000000 map_normal
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:2992   .text.lv_draw_sw_blend:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:2998   .text.lv_draw_sw_blend:00000000 lv_draw_sw_blend
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:3069   .text.lv_draw_sw_blend_basic:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//cc86Ryaj.s:3075   .text.lv_draw_sw_blend_basic:00000000 lv_draw_sw_blend_basic

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_color_fill
lv_memcpy
_lv_area_intersect
lv_area_move
lv_area_get_size
