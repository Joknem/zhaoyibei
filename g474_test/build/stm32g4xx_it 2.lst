ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32g4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/stm32g4xx_it.c"
  20              		.section	.text.NMI_Handler,"ax",%progbits
  21              		.align	1
  22              		.global	NMI_Handler
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB132:
   1:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32g4xx_it.c **** /**
   3:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32g4xx_it.c ****   * @file    stm32g4xx_it.c
   5:Core/Src/stm32g4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32g4xx_it.c ****   * @attention
   8:Core/Src/stm32g4xx_it.c ****   *
   9:Core/Src/stm32g4xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32g4xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32g4xx_it.c ****   *
  12:Core/Src/stm32g4xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32g4xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32g4xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32g4xx_it.c ****   *
  16:Core/Src/stm32g4xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32g4xx_it.c ****   */
  18:Core/Src/stm32g4xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32g4xx_it.c **** 
  20:Core/Src/stm32g4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32g4xx_it.c **** #include "main.h"
  22:Core/Src/stm32g4xx_it.c **** #include "stm32g4xx_it.h"
  23:Core/Src/stm32g4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32g4xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32g4xx_it.c **** 
  27:Core/Src/stm32g4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32g4xx_it.c **** 
  30:Core/Src/stm32g4xx_it.c **** /* USER CODE END TD */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 2


  31:Core/Src/stm32g4xx_it.c **** 
  32:Core/Src/stm32g4xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32g4xx_it.c **** 
  35:Core/Src/stm32g4xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32g4xx_it.c **** 
  37:Core/Src/stm32g4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32g4xx_it.c **** 
  40:Core/Src/stm32g4xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32g4xx_it.c **** 
  42:Core/Src/stm32g4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32g4xx_it.c **** 
  45:Core/Src/stm32g4xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32g4xx_it.c **** 
  47:Core/Src/stm32g4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32g4xx_it.c **** 
  50:Core/Src/stm32g4xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32g4xx_it.c **** 
  52:Core/Src/stm32g4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32g4xx_it.c **** 
  55:Core/Src/stm32g4xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32g4xx_it.c **** 
  57:Core/Src/stm32g4xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_i2c2_tx;
  59:Core/Src/stm32g4xx_it.c **** extern I2C_HandleTypeDef hi2c2;
  60:Core/Src/stm32g4xx_it.c **** extern DMA_HandleTypeDef hdma_tim1_ch1;
  61:Core/Src/stm32g4xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32g4xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32g4xx_it.c **** extern TIM_HandleTypeDef htim2;
  64:Core/Src/stm32g4xx_it.c **** 
  65:Core/Src/stm32g4xx_it.c **** /* USER CODE BEGIN EV */
  66:Core/Src/stm32g4xx_it.c **** 
  67:Core/Src/stm32g4xx_it.c **** /* USER CODE END EV */
  68:Core/Src/stm32g4xx_it.c **** 
  69:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32g4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
  72:Core/Src/stm32g4xx_it.c **** /**
  73:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Core/Src/stm32g4xx_it.c ****   */
  75:Core/Src/stm32g4xx_it.c **** void NMI_Handler(void)
  76:Core/Src/stm32g4xx_it.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  77:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32g4xx_it.c **** 
  79:Core/Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 3


  81:Core/Src/stm32g4xx_it.c ****   while (1)
  36              		.loc 1 81 3 discriminator 1 view .LVU1
  82:Core/Src/stm32g4xx_it.c ****   {
  83:Core/Src/stm32g4xx_it.c ****   }
  37              		.loc 1 83 3 discriminator 1 view .LVU2
  81:Core/Src/stm32g4xx_it.c ****   {
  38              		.loc 1 81 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE132:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB133:
  84:Core/Src/stm32g4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  85:Core/Src/stm32g4xx_it.c **** }
  86:Core/Src/stm32g4xx_it.c **** 
  87:Core/Src/stm32g4xx_it.c **** /**
  88:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  89:Core/Src/stm32g4xx_it.c ****   */
  90:Core/Src/stm32g4xx_it.c **** void HardFault_Handler(void)
  91:Core/Src/stm32g4xx_it.c **** {
  52              		.loc 1 91 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  92:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  93:Core/Src/stm32g4xx_it.c **** 
  94:Core/Src/stm32g4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  95:Core/Src/stm32g4xx_it.c ****   while (1)
  59              		.loc 1 95 3 discriminator 1 view .LVU5
  96:Core/Src/stm32g4xx_it.c ****   {
  97:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  98:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  99:Core/Src/stm32g4xx_it.c ****   }
  60              		.loc 1 99 3 discriminator 1 view .LVU6
  95:Core/Src/stm32g4xx_it.c ****   {
  61              		.loc 1 95 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE133:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB134:
 100:Core/Src/stm32g4xx_it.c **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 4


 101:Core/Src/stm32g4xx_it.c **** 
 102:Core/Src/stm32g4xx_it.c **** /**
 103:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Memory management fault.
 104:Core/Src/stm32g4xx_it.c ****   */
 105:Core/Src/stm32g4xx_it.c **** void MemManage_Handler(void)
 106:Core/Src/stm32g4xx_it.c **** {
  75              		.loc 1 106 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 107:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 108:Core/Src/stm32g4xx_it.c **** 
 109:Core/Src/stm32g4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 110:Core/Src/stm32g4xx_it.c ****   while (1)
  82              		.loc 1 110 3 discriminator 1 view .LVU9
 111:Core/Src/stm32g4xx_it.c ****   {
 112:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 113:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 114:Core/Src/stm32g4xx_it.c ****   }
  83              		.loc 1 114 3 discriminator 1 view .LVU10
 110:Core/Src/stm32g4xx_it.c ****   {
  84              		.loc 1 110 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE134:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB135:
 115:Core/Src/stm32g4xx_it.c **** }
 116:Core/Src/stm32g4xx_it.c **** 
 117:Core/Src/stm32g4xx_it.c **** /**
 118:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 119:Core/Src/stm32g4xx_it.c ****   */
 120:Core/Src/stm32g4xx_it.c **** void BusFault_Handler(void)
 121:Core/Src/stm32g4xx_it.c **** {
  98              		.loc 1 121 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 122:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 123:Core/Src/stm32g4xx_it.c **** 
 124:Core/Src/stm32g4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 125:Core/Src/stm32g4xx_it.c ****   while (1)
 105              		.loc 1 125 3 discriminator 1 view .LVU13
 126:Core/Src/stm32g4xx_it.c ****   {
 127:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 5


 128:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 129:Core/Src/stm32g4xx_it.c ****   }
 106              		.loc 1 129 3 discriminator 1 view .LVU14
 125:Core/Src/stm32g4xx_it.c ****   {
 107              		.loc 1 125 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE135:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB136:
 130:Core/Src/stm32g4xx_it.c **** }
 131:Core/Src/stm32g4xx_it.c **** 
 132:Core/Src/stm32g4xx_it.c **** /**
 133:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 134:Core/Src/stm32g4xx_it.c ****   */
 135:Core/Src/stm32g4xx_it.c **** void UsageFault_Handler(void)
 136:Core/Src/stm32g4xx_it.c **** {
 121              		.loc 1 136 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 137:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 138:Core/Src/stm32g4xx_it.c **** 
 139:Core/Src/stm32g4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 140:Core/Src/stm32g4xx_it.c ****   while (1)
 128              		.loc 1 140 3 discriminator 1 view .LVU17
 141:Core/Src/stm32g4xx_it.c ****   {
 142:Core/Src/stm32g4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 143:Core/Src/stm32g4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 144:Core/Src/stm32g4xx_it.c ****   }
 129              		.loc 1 144 3 discriminator 1 view .LVU18
 140:Core/Src/stm32g4xx_it.c ****   {
 130              		.loc 1 140 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE136:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB137:
 145:Core/Src/stm32g4xx_it.c **** }
 146:Core/Src/stm32g4xx_it.c **** 
 147:Core/Src/stm32g4xx_it.c **** /**
 148:Core/Src/stm32g4xx_it.c ****   * @brief This function handles Debug monitor.
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 6


 149:Core/Src/stm32g4xx_it.c ****   */
 150:Core/Src/stm32g4xx_it.c **** void DebugMon_Handler(void)
 151:Core/Src/stm32g4xx_it.c **** {
 144              		.loc 1 151 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 152:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 153:Core/Src/stm32g4xx_it.c **** 
 154:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 155:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 156:Core/Src/stm32g4xx_it.c **** 
 157:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 158:Core/Src/stm32g4xx_it.c **** }
 149              		.loc 1 158 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE137:
 154              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
 155              		.align	1
 156              		.global	EXTI1_IRQHandler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	EXTI1_IRQHandler:
 162              	.LFB138:
 159:Core/Src/stm32g4xx_it.c **** 
 160:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
 161:Core/Src/stm32g4xx_it.c **** /* STM32G4xx Peripheral Interrupt Handlers                                    */
 162:Core/Src/stm32g4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 163:Core/Src/stm32g4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 164:Core/Src/stm32g4xx_it.c **** /* please refer to the startup file (startup_stm32g4xx.s).                    */
 165:Core/Src/stm32g4xx_it.c **** /******************************************************************************/
 166:Core/Src/stm32g4xx_it.c **** 
 167:Core/Src/stm32g4xx_it.c **** /**
 168:Core/Src/stm32g4xx_it.c ****   * @brief This function handles EXTI line1 interrupt.
 169:Core/Src/stm32g4xx_it.c ****   */
 170:Core/Src/stm32g4xx_it.c **** void EXTI1_IRQHandler(void)
 171:Core/Src/stm32g4xx_it.c **** {
 163              		.loc 1 171 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 173:Core/Src/stm32g4xx_it.c **** 
 174:Core/Src/stm32g4xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 175:Core/Src/stm32g4xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(user_button_Pin);
 172              		.loc 1 175 3 view .LVU23
 173 0002 0220     		movs	r0, #2
 174 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 175              	.LVL0:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 7


 176:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 177:Core/Src/stm32g4xx_it.c **** 
 178:Core/Src/stm32g4xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 179:Core/Src/stm32g4xx_it.c **** }
 176              		.loc 1 179 1 is_stmt 0 view .LVU24
 177 0008 08BD     		pop	{r3, pc}
 178              		.cfi_endproc
 179              	.LFE138:
 181              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 182              		.align	1
 183              		.global	DMA1_Channel1_IRQHandler
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	DMA1_Channel1_IRQHandler:
 189              	.LFB139:
 180:Core/Src/stm32g4xx_it.c **** 
 181:Core/Src/stm32g4xx_it.c **** /**
 182:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 183:Core/Src/stm32g4xx_it.c ****   */
 184:Core/Src/stm32g4xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 185:Core/Src/stm32g4xx_it.c **** {
 190              		.loc 1 185 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		@ args = 0, pretend = 0, frame = 0
 193              		@ frame_needed = 0, uses_anonymous_args = 0
 194 0000 08B5     		push	{r3, lr}
 195              	.LCFI1:
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 3, -8
 198              		.cfi_offset 14, -4
 186:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 187:Core/Src/stm32g4xx_it.c **** 
 188:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 189:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim1_ch1);
 199              		.loc 1 189 3 view .LVU26
 200 0002 0248     		ldr	r0, .L16
 201 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 202              	.LVL1:
 190:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 191:Core/Src/stm32g4xx_it.c **** 
 192:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 193:Core/Src/stm32g4xx_it.c **** }
 203              		.loc 1 193 1 is_stmt 0 view .LVU27
 204 0008 08BD     		pop	{r3, pc}
 205              	.L17:
 206 000a 00BF     		.align	2
 207              	.L16:
 208 000c 00000000 		.word	hdma_tim1_ch1
 209              		.cfi_endproc
 210              	.LFE139:
 212              		.section	.text.TIM1_TRG_COM_TIM17_IRQHandler,"ax",%progbits
 213              		.align	1
 214              		.global	TIM1_TRG_COM_TIM17_IRQHandler
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 8


 219              	TIM1_TRG_COM_TIM17_IRQHandler:
 220              	.LFB140:
 194:Core/Src/stm32g4xx_it.c **** 
 195:Core/Src/stm32g4xx_it.c **** /**
 196:Core/Src/stm32g4xx_it.c ****   * @brief This function handles TIM1 trigger and commutation interrupts and TIM17 global interrupt
 197:Core/Src/stm32g4xx_it.c ****   */
 198:Core/Src/stm32g4xx_it.c **** void TIM1_TRG_COM_TIM17_IRQHandler(void)
 199:Core/Src/stm32g4xx_it.c **** {
 221              		.loc 1 199 1 is_stmt 1 view -0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225 0000 08B5     		push	{r3, lr}
 226              	.LCFI2:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 3, -8
 229              		.cfi_offset 14, -4
 200:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */
 201:Core/Src/stm32g4xx_it.c **** 
 202:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
 203:Core/Src/stm32g4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 230              		.loc 1 203 3 view .LVU29
 231 0002 0248     		ldr	r0, .L20
 232 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 233              	.LVL2:
 204:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 1 */
 205:Core/Src/stm32g4xx_it.c **** 
 206:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 1 */
 207:Core/Src/stm32g4xx_it.c **** }
 234              		.loc 1 207 1 is_stmt 0 view .LVU30
 235 0008 08BD     		pop	{r3, pc}
 236              	.L21:
 237 000a 00BF     		.align	2
 238              	.L20:
 239 000c 00000000 		.word	htim1
 240              		.cfi_endproc
 241              	.LFE140:
 243              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 244              		.align	1
 245              		.global	TIM2_IRQHandler
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	TIM2_IRQHandler:
 251              	.LFB141:
 208:Core/Src/stm32g4xx_it.c **** 
 209:Core/Src/stm32g4xx_it.c **** /**
 210:Core/Src/stm32g4xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 211:Core/Src/stm32g4xx_it.c ****   */
 212:Core/Src/stm32g4xx_it.c **** void TIM2_IRQHandler(void)
 213:Core/Src/stm32g4xx_it.c **** {
 252              		.loc 1 213 1 is_stmt 1 view -0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 08B5     		push	{r3, lr}
 257              	.LCFI3:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 9


 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 3, -8
 260              		.cfi_offset 14, -4
 214:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 215:Core/Src/stm32g4xx_it.c **** 
 216:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 217:Core/Src/stm32g4xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 261              		.loc 1 217 3 view .LVU32
 262 0002 0248     		ldr	r0, .L24
 263 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 264              	.LVL3:
 218:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 219:Core/Src/stm32g4xx_it.c **** 
 220:Core/Src/stm32g4xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 221:Core/Src/stm32g4xx_it.c **** }
 265              		.loc 1 221 1 is_stmt 0 view .LVU33
 266 0008 08BD     		pop	{r3, pc}
 267              	.L25:
 268 000a 00BF     		.align	2
 269              	.L24:
 270 000c 00000000 		.word	htim2
 271              		.cfi_endproc
 272              	.LFE141:
 274              		.section	.text.I2C2_ER_IRQHandler,"ax",%progbits
 275              		.align	1
 276              		.global	I2C2_ER_IRQHandler
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	I2C2_ER_IRQHandler:
 282              	.LFB142:
 222:Core/Src/stm32g4xx_it.c **** 
 223:Core/Src/stm32g4xx_it.c **** /**
 224:Core/Src/stm32g4xx_it.c ****   * @brief This function handles I2C2 error interrupt.
 225:Core/Src/stm32g4xx_it.c ****   */
 226:Core/Src/stm32g4xx_it.c **** void I2C2_ER_IRQHandler(void)
 227:Core/Src/stm32g4xx_it.c **** {
 283              		.loc 1 227 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 08B5     		push	{r3, lr}
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 228:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN I2C2_ER_IRQn 0 */
 229:Core/Src/stm32g4xx_it.c **** 
 230:Core/Src/stm32g4xx_it.c ****   /* USER CODE END I2C2_ER_IRQn 0 */
 231:Core/Src/stm32g4xx_it.c ****   HAL_I2C_ER_IRQHandler(&hi2c2);
 292              		.loc 1 231 3 view .LVU35
 293 0002 0248     		ldr	r0, .L28
 294 0004 FFF7FEFF 		bl	HAL_I2C_ER_IRQHandler
 295              	.LVL4:
 232:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN I2C2_ER_IRQn 1 */
 233:Core/Src/stm32g4xx_it.c **** 
 234:Core/Src/stm32g4xx_it.c ****   /* USER CODE END I2C2_ER_IRQn 1 */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 10


 235:Core/Src/stm32g4xx_it.c **** }
 296              		.loc 1 235 1 is_stmt 0 view .LVU36
 297 0008 08BD     		pop	{r3, pc}
 298              	.L29:
 299 000a 00BF     		.align	2
 300              	.L28:
 301 000c 00000000 		.word	hi2c2
 302              		.cfi_endproc
 303              	.LFE142:
 305              		.section	.text.USART1_IRQHandler,"ax",%progbits
 306              		.align	1
 307              		.global	USART1_IRQHandler
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	USART1_IRQHandler:
 313              	.LFB143:
 236:Core/Src/stm32g4xx_it.c **** 
 237:Core/Src/stm32g4xx_it.c **** /**
 238:Core/Src/stm32g4xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXTI li
 239:Core/Src/stm32g4xx_it.c ****   */
 240:Core/Src/stm32g4xx_it.c **** void USART1_IRQHandler(void)
 241:Core/Src/stm32g4xx_it.c **** {
 314              		.loc 1 241 1 is_stmt 1 view -0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 08B5     		push	{r3, lr}
 319              	.LCFI5:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
 242:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 243:Core/Src/stm32g4xx_it.c **** 
 244:Core/Src/stm32g4xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 245:Core/Src/stm32g4xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 323              		.loc 1 245 3 view .LVU38
 324 0002 0248     		ldr	r0, .L32
 325 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 326              	.LVL5:
 246:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 247:Core/Src/stm32g4xx_it.c **** 
 248:Core/Src/stm32g4xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 249:Core/Src/stm32g4xx_it.c **** }
 327              		.loc 1 249 1 is_stmt 0 view .LVU39
 328 0008 08BD     		pop	{r3, pc}
 329              	.L33:
 330 000a 00BF     		.align	2
 331              	.L32:
 332 000c 00000000 		.word	huart1
 333              		.cfi_endproc
 334              	.LFE143:
 336              		.section	.text.DMA2_Channel1_IRQHandler,"ax",%progbits
 337              		.align	1
 338              		.global	DMA2_Channel1_IRQHandler
 339              		.syntax unified
 340              		.thumb
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 11


 341              		.thumb_func
 343              	DMA2_Channel1_IRQHandler:
 344              	.LFB144:
 250:Core/Src/stm32g4xx_it.c **** 
 251:Core/Src/stm32g4xx_it.c **** /**
 252:Core/Src/stm32g4xx_it.c ****   * @brief This function handles DMA2 channel1 global interrupt.
 253:Core/Src/stm32g4xx_it.c ****   */
 254:Core/Src/stm32g4xx_it.c **** void DMA2_Channel1_IRQHandler(void)
 255:Core/Src/stm32g4xx_it.c **** {
 345              		.loc 1 255 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 08B5     		push	{r3, lr}
 350              	.LCFI6:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 3, -8
 353              		.cfi_offset 14, -4
 256:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA2_Channel1_IRQn 0 */
 257:Core/Src/stm32g4xx_it.c **** 
 258:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA2_Channel1_IRQn 0 */
 259:Core/Src/stm32g4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_i2c2_tx);
 354              		.loc 1 259 3 view .LVU41
 355 0002 0248     		ldr	r0, .L36
 356 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 357              	.LVL6:
 260:Core/Src/stm32g4xx_it.c ****   /* USER CODE BEGIN DMA2_Channel1_IRQn 1 */
 261:Core/Src/stm32g4xx_it.c **** 
 262:Core/Src/stm32g4xx_it.c ****   /* USER CODE END DMA2_Channel1_IRQn 1 */
 263:Core/Src/stm32g4xx_it.c **** }
 358              		.loc 1 263 1 is_stmt 0 view .LVU42
 359 0008 08BD     		pop	{r3, pc}
 360              	.L37:
 361 000a 00BF     		.align	2
 362              	.L36:
 363 000c 00000000 		.word	hdma_i2c2_tx
 364              		.cfi_endproc
 365              	.LFE144:
 367              		.text
 368              	.Letext0:
 369              		.file 2 "/usr/local/include/_types/_uint8_t.h"
 370              		.file 3 "/usr/local/include/_types/_uint16_t.h"
 371              		.file 4 "/usr/local/include/_types/_uint32_t.h"
 372              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 373              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 374              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 375              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_i2c.h"
 376              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 377              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 378              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g4xx_it.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:21     .text.NMI_Handler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:27     .text.NMI_Handler:00000000 NMI_Handler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:44     .text.HardFault_Handler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:67     .text.MemManage_Handler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:90     .text.BusFault_Handler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:113    .text.UsageFault_Handler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:136    .text.DebugMon_Handler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:142    .text.DebugMon_Handler:00000000 DebugMon_Handler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:155    .text.EXTI1_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:161    .text.EXTI1_IRQHandler:00000000 EXTI1_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:182    .text.DMA1_Channel1_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:188    .text.DMA1_Channel1_IRQHandler:00000000 DMA1_Channel1_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:208    .text.DMA1_Channel1_IRQHandler:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:213    .text.TIM1_TRG_COM_TIM17_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:219    .text.TIM1_TRG_COM_TIM17_IRQHandler:00000000 TIM1_TRG_COM_TIM17_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:239    .text.TIM1_TRG_COM_TIM17_IRQHandler:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:244    .text.TIM2_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:250    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:270    .text.TIM2_IRQHandler:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:275    .text.I2C2_ER_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:281    .text.I2C2_ER_IRQHandler:00000000 I2C2_ER_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:301    .text.I2C2_ER_IRQHandler:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:306    .text.USART1_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:312    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:332    .text.USART1_IRQHandler:0000000c $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:337    .text.DMA2_Channel1_IRQHandler:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:343    .text.DMA2_Channel1_IRQHandler:00000000 DMA2_Channel1_IRQHandler
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccIBQJAw.s:363    .text.DMA2_Channel1_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_GPIO_EXTI_IRQHandler
HAL_DMA_IRQHandler
hdma_tim1_ch1
HAL_TIM_IRQHandler
htim1
htim2
HAL_I2C_ER_IRQHandler
hi2c2
HAL_UART_IRQHandler
huart1
hdma_i2c2_tx
