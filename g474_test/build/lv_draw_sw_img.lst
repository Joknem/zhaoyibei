ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"lv_draw_sw_img.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_img.c"
  20              		.section	.text.lv_color_mix_premult,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_color_mix_premult:
  27              	.LVL0:
  28              	.LFB8:
  29              		.file 2 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 2


  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  38:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  39:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  42:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  56:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  57:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 3


  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 4


 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 193:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 199:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 5


 201:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 208:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 224:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 234:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 243:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 257:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 6


 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 281:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 298:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 300:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 307:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 309:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 314:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 7


 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 316:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 321:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 323:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 324:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 325:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 326:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 332:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 348:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 349:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 350:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 356:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 8


 372:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 373:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 374:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 380:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 417:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 427:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 428:lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 9


 429:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 432:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 440:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 442:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/sw/../../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/sw/../../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 447:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 457:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 467:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 470:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 471:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 473:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 476:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 481:lvgl/src/draw/sw/../../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 10


 486:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 487:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 488:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 489:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 490:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 491:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/draw/sw/../../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 499:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  30              		.loc 2 500 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 2 500 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 8446     		mov	ip, r0
 501:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
  40              		.loc 2 501 5 is_stmt 1 view .LVU2
 502:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
  41              		.loc 2 504 5 view .LVU3
  42 0004 0388     		ldrh	r3, [r0]
  43 0006 C1F3C420 		ubfx	r0, r1, #11, #5
  44              	.LVL1:
  45              		.loc 2 504 5 is_stmt 0 view .LVU4
  46 000a 02FB0033 		mla	r3, r2, r0, r3
  47 000e 03EB0320 		add	r0, r3, r3, lsl #8
  48 0012 03EBC013 		add	r3, r3, r0, lsl #7
  49 0016 C3F3C453 		ubfx	r3, r3, #23, #5
  50 001a 4FF00000 		mov	r0, #0	@ movhi
  51              	.LVL2:
  52              		.loc 2 504 5 view .LVU5
  53 001e 63F3CF20 		bfi	r0, r3, #11, #5
  54              	.LVL3:
 505:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
  55              		.loc 2 505 5 is_stmt 1 view .LVU6
  56 0022 BCF80230 		ldrh	r3, [ip, #2]
  57 0026 C1F3451E 		ubfx	lr, r1, #5, #6
  58 002a 0EFB0233 		mla	r3, lr, r2, r3
  59 002e 03EB032E 		add	lr, r3, r3, lsl #8
  60 0032 03EBCE13 		add	r3, r3, lr, lsl #7
  61 0036 C3F3C553 		ubfx	r3, r3, #23, #6
  62 003a 63F34A10 		bfi	r0, r3, #5, #6
 506:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
  63              		.loc 2 506 5 view .LVU7
  64 003e BCF80430 		ldrh	r3, [ip, #4]
  65 0042 01F01F01 		and	r1, r1, #31
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 11


  66              	.LVL4:
  67              		.loc 2 506 5 is_stmt 0 view .LVU8
  68 0046 01FB0232 		mla	r2, r1, r2, r3
  69              	.LVL5:
  70              		.loc 2 506 5 view .LVU9
  71 004a 02EB0223 		add	r3, r2, r2, lsl #8
  72 004e 02EBC312 		add	r2, r2, r3, lsl #7
  73 0052 C2F3C452 		ubfx	r2, r2, #23, #5
  74 0056 62F30400 		bfi	r0, r2, #0, #5
 507:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
  75              		.loc 2 507 5 is_stmt 1 view .LVU10
  76              		.loc 2 507 5 view .LVU11
  77              		.loc 2 507 5 view .LVU12
 508:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 509:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 517:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 518:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
  78              		.loc 2 518 5 view .LVU13
  79              	.LVL6:
 519:lvgl/src/draw/sw/../../misc/lv_color.h **** }
  80              		.loc 2 519 1 is_stmt 0 view .LVU14
  81 005a 5DF804FB 		ldr	pc, [sp], #4
  82              		.cfi_endproc
  83              	.LFE8:
  85              		.section	.text.convert_cb,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	convert_cb:
  92              	.LVL7:
  93              	.LFB162:
   1:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_img.c ****  * @file lv_draw_img.c
   3:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_img.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_img.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../lv_img_cache.h"
  11:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../hal/lv_hal_disp.h"
  12:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../misc/lv_log.h"
  13:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../core/lv_refr.h"
  14:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../misc/lv_mem.h"
  15:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../misc/lv_math.h"
  16:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  17:lvgl/src/draw/sw/lv_draw_sw_img.c **** /*********************
  18:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      DEFINES
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 12


  19:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *********************/
  20:lvgl/src/draw/sw/lv_draw_sw_img.c **** #define MAX_BUF_SIZE (uint32_t) lv_disp_get_hor_res(_lv_refr_get_disp_refreshing())
  21:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  22:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  23:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      TYPEDEFS
  24:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  25:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  26:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  27:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *  STATIC PROTOTYPES
  28:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  29:lvgl/src/draw/sw/lv_draw_sw_img.c **** static void convert_cb(const lv_area_t * dest_area, const void * src_buf, lv_coord_t src_w, lv_coor
  30:lvgl/src/draw/sw/lv_draw_sw_img.c ****                        lv_coord_t src_stride, const lv_draw_img_dsc_t * draw_dsc, lv_img_cf_t cf, l
  31:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  32:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  33:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *  STATIC VARIABLES
  34:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  35:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  36:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  37:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      MACROS
  38:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  39:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  40:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  41:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *   GLOBAL FUNCTIONS
  42:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  43:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  44:lvgl/src/draw/sw/lv_draw_sw_img.c **** void LV_ATTRIBUTE_FAST_MEM lv_draw_sw_img_decoded(struct _lv_draw_ctx_t * draw_ctx,
  45:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                   const lv_draw_img_dsc_t * draw_dsc,
  46:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                   const lv_area_t * coords, const uint8_t * src_buf
  47:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                   lv_img_cf_t cf)
  48:lvgl/src/draw/sw/lv_draw_sw_img.c **** {
  49:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*Use the clip area as draw area*/
  50:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_area_t draw_area;
  51:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_area_copy(&draw_area, draw_ctx->clip_area);
  52:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  53:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool mask_any = lv_draw_mask_is_any(&draw_area);
  54:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
  55:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  56:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_area_t blend_area;
  57:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_draw_sw_blend_dsc_t blend_dsc;
  58:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  59:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_memset_00(&blend_dsc, sizeof(lv_draw_sw_blend_dsc_t));
  60:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.opa = draw_dsc->opa;
  61:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_mode = draw_dsc->blend_mode;
  62:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_area = &blend_area;
  63:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  64:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*The simplest case just copy the pixels into the draw_buf*/
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****     if(!mask_any && !transform && cf == LV_IMG_CF_TRUE_COLOR && draw_dsc->recolor_opa == LV_OPA_TRA
  66:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
  67:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  68:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
  69:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
  70:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
  71:lvgl/src/draw/sw/lv_draw_sw_img.c ****     else if(!mask_any && !transform && cf == LV_IMG_CF_ALPHA_8BIT) {
  72:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_area_t clipped_coords;
  73:lvgl/src/draw/sw/lv_draw_sw_img.c ****         if(!_lv_area_intersect(&clipped_coords, coords, draw_ctx->clip_area)) return;
  74:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  75:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = (lv_opa_t *)src_buf;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 13


  76:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = coords;
  77:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = NULL;
  78:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.color = draw_dsc->recolor;
  79:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
  80:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  81:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
  82:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
  83:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
  84:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 16
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****     else if(!mask_any && !transform && cf == LV_IMG_CF_RGB565A8 && draw_dsc->recolor_opa == LV_OPA_
  86:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
  87:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_h = lv_area_get_height(coords);
  88:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = (lv_opa_t *)src_buf;
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf += sizeof(lv_color_t) * src_w * src_h;
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
  92:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = coords;
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
  94:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
  95:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
  96:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
  97:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*In the other cases every pixel need to be checked one-by-one*/
  98:lvgl/src/draw/sw/lv_draw_sw_img.c ****     else {
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x1 = draw_ctx->clip_area->x1;
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x2 = draw_ctx->clip_area->x2;
 101:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y1 = draw_ctx->clip_area->y1;
 102:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = draw_ctx->clip_area->y2;
 103:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 104:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_h = lv_area_get_height(coords);
 106:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t blend_h = lv_area_get_height(&blend_area);
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t blend_w = lv_area_get_width(&blend_area);
 108:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 109:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t max_buf_size = MAX_BUF_SIZE;
 110:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t blend_size = lv_area_get_size(&blend_area);
 111:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_h;
 112:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_w = blend_w;
 113:lvgl/src/draw/sw/lv_draw_sw_img.c ****         if(blend_size <= max_buf_size) {
 114:lvgl/src/draw/sw/lv_draw_sw_img.c ****             buf_h = blend_h;
 115:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 116:lvgl/src/draw/sw/lv_draw_sw_img.c ****         else {
 117:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Round to full lines*/
 118:lvgl/src/draw/sw/lv_draw_sw_img.c ****             buf_h = max_buf_size / blend_w;
 119:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 120:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 121:lvgl/src/draw/sw/lv_draw_sw_img.c ****         /*Create buffers and masks*/
 122:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_size = buf_w * buf_h;
 123:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_color_t * rgb_buf = lv_mem_buf_get(buf_size * sizeof(lv_color_t));
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_opa_t * mask_buf = lv_mem_buf_get(buf_size);
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = mask_buf;
 127:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = &blend_area;
 128:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 129:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = rgb_buf;
 130:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t y_last = blend_area.y2;
 131:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = blend_area.y1 + buf_h - 1;
 132:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 14


 133:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_mask_res_t mask_res_def = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 134:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                            draw_dsc->zoom != LV_IMG_ZOOM_NONE) ?
 135:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                           LV_DRAW_MASK_RES_CHANGED : LV_DRAW_MASK_RES_FULL_COVER;
 136:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = mask_res_def;
 137:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****         while(blend_area.y1 <= y_last) {
 139:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply transformations if any or separate the channels*/
 140:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_area_t transform_area;
 141:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_area_copy(&transform_area, &blend_area);
 142:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_area_move(&transform_area, -coords->x1, -coords->y1);
 143:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(transform) {
 144:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_transform(draw_ctx, &transform_area, src_buf, src_w, src_h, src_w,
 145:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                   draw_dsc, cf, rgb_buf, mask_buf);
 146:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 147:lvgl/src/draw/sw/lv_draw_sw_img.c ****             else {
 148:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 convert_cb(&transform_area, src_buf, src_w, src_h, src_w, draw_dsc, cf, rgb_buf, ma
 149:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 150:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 151:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply recolor*/
 152:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(draw_dsc->recolor_opa > LV_OPA_MIN) {
 153:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint16_t premult_v[3];
 154:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_opa_t recolor_opa = draw_dsc->recolor_opa;
 155:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_color_t recolor = draw_dsc->recolor;
 156:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_color_premult(recolor, recolor_opa, premult_v);
 157:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 recolor_opa = 255 - recolor_opa;
 158:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint32_t i;
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(i = 0; i < buf_size; i++) {
 160:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 161:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 162:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 163:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 164:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply the masks if any*/
 165:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(mask_any) {
 166:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_coord_t y;
 167:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_opa_t * mask_buf_tmp = mask_buf;
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(y = blend_area.y1; y <= blend_area.y2; y++) {
 169:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 170:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_res_line = lv_draw_mask_apply(mask_buf_tmp, blend_area.x1, y, blend_w);
 171:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 172:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(mask_res_line == LV_DRAW_MASK_RES_TRANSP) {
 173:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_00(mask_buf_tmp, blend_w);
 174:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 175:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 176:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     else if(mask_res_line == LV_DRAW_MASK_RES_CHANGED) {
 177:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 178:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 179:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_buf_tmp += blend_w;
 180:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 181:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 182:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 183:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 184:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Blend*/
 185:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_draw_sw_blend(draw_ctx, &blend_dsc);
 186:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 187:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Go the the next lines*/
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_area.y1 = blend_area.y2 + 1;
 189:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_area.y2 = blend_area.y1 + buf_h - 1;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 15


 190:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y2 > y_last) blend_area.y2 = y_last;
 191:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 192:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 193:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_mem_buf_release(mask_buf);
 194:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_mem_buf_release(rgb_buf);
 195:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 196:lvgl/src/draw/sw/lv_draw_sw_img.c **** }
 197:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 198:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
 199:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *   STATIC FUNCTIONS
 200:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
 201:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 202:lvgl/src/draw/sw/lv_draw_sw_img.c **** /* Separate the image channels to RGB and Alpha to match LV_COLOR_DEPTH settings*/
 203:lvgl/src/draw/sw/lv_draw_sw_img.c **** static void convert_cb(const lv_area_t * dest_area, const void * src_buf, lv_coord_t src_w, lv_coor
 204:lvgl/src/draw/sw/lv_draw_sw_img.c ****                        lv_coord_t src_stride, const lv_draw_img_dsc_t * draw_dsc, lv_img_cf_t cf, l
 205:lvgl/src/draw/sw/lv_draw_sw_img.c **** {
  94              		.loc 1 205 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 20, pretend = 0, frame = 24
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 1 205 1 is_stmt 0 view .LVU16
  99 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 36
 102              		.cfi_offset 4, -36
 103              		.cfi_offset 5, -32
 104              		.cfi_offset 6, -28
 105              		.cfi_offset 7, -24
 106              		.cfi_offset 8, -20
 107              		.cfi_offset 9, -16
 108              		.cfi_offset 10, -12
 109              		.cfi_offset 11, -8
 110              		.cfi_offset 14, -4
 111 0004 87B0     		sub	sp, sp, #28
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 64
 114 0006 8346     		mov	fp, r0
 115 0008 0191     		str	r1, [sp, #4]
 116 000a 0292     		str	r2, [sp, #8]
 117 000c 0393     		str	r3, [sp, #12]
 118 000e BDF940A0 		ldrsh	r10, [sp, #64]
 119 0012 9DF84830 		ldrb	r3, [sp, #72]	@ zero_extendqisi2
 120              	.LVL8:
 121              		.loc 1 205 1 view .LVU17
 122 0016 0493     		str	r3, [sp, #16]
 123 0018 139C     		ldr	r4, [sp, #76]
 124 001a 149D     		ldr	r5, [sp, #80]
 206:lvgl/src/draw/sw/lv_draw_sw_img.c ****     LV_UNUSED(draw_dsc);
 125              		.loc 1 206 5 is_stmt 1 view .LVU18
 207:lvgl/src/draw/sw/lv_draw_sw_img.c ****     LV_UNUSED(src_h);
 126              		.loc 1 207 5 view .LVU19
 208:lvgl/src/draw/sw/lv_draw_sw_img.c ****     LV_UNUSED(src_w);
 127              		.loc 1 208 5 view .LVU20
 209:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 210:lvgl/src/draw/sw/lv_draw_sw_img.c ****     const uint8_t * src_tmp8 = (const uint8_t *)src_buf;
 128              		.loc 1 210 5 view .LVU21
 129              	.LVL9:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 16


 211:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_coord_t y;
 130              		.loc 1 211 5 view .LVU22
 212:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_coord_t x;
 131              		.loc 1 212 5 view .LVU23
 213:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 214:lvgl/src/draw/sw/lv_draw_sw_img.c ****     if(cf == LV_IMG_CF_TRUE_COLOR || cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 132              		.loc 1 214 5 view .LVU24
 133 001c 043B     		subs	r3, r3, #4
 134 001e 102B     		cmp	r3, #16
 135 0020 00F2DD80 		bhi	.L3
 136 0024 DFE803F0 		tbb	[pc, r3]
 137              	.LVL10:
 138              	.L6:
 139 0028 09       		.byte	(.L7-.L6)/2
 140 0029 4C       		.byte	(.L8-.L6)/2
 141 002a 09       		.byte	(.L7-.L6)/2
 142 002b DB       		.byte	(.L3-.L6)/2
 143 002c DB       		.byte	(.L3-.L6)/2
 144 002d DB       		.byte	(.L3-.L6)/2
 145 002e DB       		.byte	(.L3-.L6)/2
 146 002f DB       		.byte	(.L3-.L6)/2
 147 0030 DB       		.byte	(.L3-.L6)/2
 148 0031 DB       		.byte	(.L3-.L6)/2
 149 0032 DB       		.byte	(.L3-.L6)/2
 150 0033 DB       		.byte	(.L3-.L6)/2
 151 0034 DB       		.byte	(.L3-.L6)/2
 152 0035 DB       		.byte	(.L3-.L6)/2
 153 0036 DB       		.byte	(.L3-.L6)/2
 154 0037 DB       		.byte	(.L3-.L6)/2
 155 0038 8C       		.byte	(.L5-.L6)/2
 156 0039 00       		.p2align 1
 157              	.L7:
 158              	.LBB45:
 215:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t px_cnt = lv_area_get_size(dest_area);
 159              		.loc 1 215 9 view .LVU25
 160              		.loc 1 215 27 is_stmt 0 view .LVU26
 161 003a FFF7FEFF 		bl	lv_area_get_size
 162              	.LVL11:
 163              		.loc 1 215 27 view .LVU27
 164 003e 0146     		mov	r1, r0
 165 0040 0290     		str	r0, [sp, #8]
 166              	.LVL12:
 216:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_memset_ff(abuf, px_cnt);
 167              		.loc 1 216 9 is_stmt 1 view .LVU28
 168 0042 2846     		mov	r0, r5
 169              	.LVL13:
 170              		.loc 1 216 9 is_stmt 0 view .LVU29
 171 0044 FFF7FEFF 		bl	lv_memset_ff
 172              	.LVL14:
 217:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 218:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 += (src_stride * dest_area->y1 * sizeof(lv_color_t)) + dest_area->x1 * sizeof(lv_c
 173              		.loc 1 218 9 is_stmt 1 view .LVU30
 174              		.loc 1 218 44 is_stmt 0 view .LVU31
 175 0048 BBF90260 		ldrsh	r6, [fp, #2]
 176              		.loc 1 218 82 view .LVU32
 177 004c BBF90030 		ldrsh	r3, [fp]
 178              		.loc 1 218 71 view .LVU33
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 17


 179 0050 06FB0A37 		mla	r7, r6, r10, r3
 180              		.loc 1 218 18 view .LVU34
 181 0054 019A     		ldr	r2, [sp, #4]
 182 0056 02EB4707 		add	r7, r2, r7, lsl #1
 183              	.LVL15:
 219:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t dest_w = lv_area_get_width(dest_area);
 184              		.loc 1 219 9 is_stmt 1 view .LVU35
 185              	.LBB46:
 186              	.LBI46:
 187              		.file 3 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 18


  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 19


 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 188              		.loc 3 123 26 view .LVU36
 189              	.LBB47:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 190              		.loc 3 125 5 view .LVU37
 191              		.loc 3 125 31 is_stmt 0 view .LVU38
 192 005a BBF80480 		ldrh	r8, [fp, #4]
 193              		.loc 3 125 44 view .LVU39
 194 005e 9BB2     		uxth	r3, r3
 195              		.loc 3 125 36 view .LVU40
 196 0060 A8EB0308 		sub	r8, r8, r3
 197 0064 1FFA88F8 		uxth	r8, r8
 198              		.loc 3 125 49 view .LVU41
 199 0068 08F10108 		add	r8, r8, #1
 200              		.loc 3 125 12 view .LVU42
 201 006c 0FFA88F8 		sxth	r8, r8
 202              	.LVL16:
 203              		.loc 3 125 12 view .LVU43
 204              	.LBE47:
 205              	.LBE46:
 220:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t dest_w_byte = dest_w * sizeof(lv_color_t);
 206              		.loc 1 220 9 is_stmt 1 view .LVU44
 207              		.loc 1 220 18 is_stmt 0 view .LVU45
 208 0070 4FEA4808 		lsl	r8, r8, #1
 209              	.LVL17:
 221:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 222:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_stride_byte = src_stride * sizeof(lv_color_t);
 210              		.loc 1 222 9 is_stmt 1 view .LVU46
 211              		.loc 1 222 20 is_stmt 0 view .LVU47
 212 0074 4FEA4A0A 		lsl	r10, r10, #1
 213 0078 0FFA8AFA 		sxth	r10, r10
 214              	.LVL18:
 223:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_color_t * cbuf_tmp = cbuf;
 215              		.loc 1 223 9 is_stmt 1 view .LVU48
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****         for(y = dest_area->y1; y <= dest_area->y2; y++) {
 216              		.loc 1 224 9 view .LVU49
 223:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_color_t * cbuf_tmp = cbuf;
 217              		.loc 1 223 22 is_stmt 0 view .LVU50
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 20


 218 007c A146     		mov	r9, r4
 219              		.loc 1 224 9 view .LVU51
 220 007e 08E0     		b	.L9
 221              	.LVL19:
 222              	.L10:
 225:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf_tmp, src_tmp8, dest_w_byte);
 223              		.loc 1 225 13 is_stmt 1 discriminator 3 view .LVU52
 224 0080 4246     		mov	r2, r8
 225 0082 3946     		mov	r1, r7
 226 0084 4846     		mov	r0, r9
 227 0086 FFF7FEFF 		bl	lv_memcpy
 228              	.LVL20:
 226:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_tmp8 += src_stride_byte;
 229              		.loc 1 226 13 discriminator 3 view .LVU53
 230              		.loc 1 226 22 is_stmt 0 discriminator 3 view .LVU54
 231 008a 5744     		add	r7, r7, r10
 232              	.LVL21:
 227:lvgl/src/draw/sw/lv_draw_sw_img.c ****             cbuf_tmp += dest_w;
 233              		.loc 1 227 13 is_stmt 1 discriminator 3 view .LVU55
 234              		.loc 1 227 22 is_stmt 0 discriminator 3 view .LVU56
 235 008c C144     		add	r9, r9, r8
 236              	.LVL22:
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf_tmp, src_tmp8, dest_w_byte);
 237              		.loc 1 224 53 is_stmt 1 discriminator 3 view .LVU57
 238 008e 0136     		adds	r6, r6, #1
 239              	.LVL23:
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf_tmp, src_tmp8, dest_w_byte);
 240              		.loc 1 224 53 is_stmt 0 discriminator 3 view .LVU58
 241 0090 36B2     		sxth	r6, r6
 242              	.LVL24:
 243              	.L9:
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf_tmp, src_tmp8, dest_w_byte);
 244              		.loc 1 224 34 is_stmt 1 discriminator 1 view .LVU59
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf_tmp, src_tmp8, dest_w_byte);
 245              		.loc 1 224 46 is_stmt 0 discriminator 1 view .LVU60
 246 0092 BBF90630 		ldrsh	r3, [fp, #6]
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf_tmp, src_tmp8, dest_w_byte);
 247              		.loc 1 224 34 discriminator 1 view .LVU61
 248 0096 B342     		cmp	r3, r6
 249 0098 F2DA     		bge	.L10
 228:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 229:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 230:lvgl/src/draw/sw/lv_draw_sw_img.c ****         /*Make "holes" for with Chroma keying*/
 231:lvgl/src/draw/sw/lv_draw_sw_img.c ****         if(cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 250              		.loc 1 231 9 is_stmt 1 view .LVU62
 251              		.loc 1 231 11 is_stmt 0 view .LVU63
 252 009a 049B     		ldr	r3, [sp, #16]
 253 009c 062B     		cmp	r3, #6
 254 009e 40F09E80 		bne	.L3
 255              	.LBB48:
 232:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t i;
 256              		.loc 1 232 13 is_stmt 1 view .LVU64
 233:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t chk = LV_COLOR_CHROMA_KEY;
 257              		.loc 1 233 13 view .LVU65
 258              	.LVL25:
 259              	.LBB49:
 260              	.LBI49:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 21


 520:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 521:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 522:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 530:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 534:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 539:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 544:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 549:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 551:lvgl/src/draw/sw/../../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 559:lvgl/src/draw/sw/../../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/draw/sw/../../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/draw/sw/../../misc/lv_color.h ****             /*Info:
 566:lvgl/src/draw/sw/../../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/draw/sw/../../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/draw/sw/../../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 572:lvgl/src/draw/sw/../../misc/lv_color.h ****         }
 573:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 574:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 22


 577:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 578:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 579:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 580:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 581:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 582:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 586:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 588:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/draw/sw/../../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/draw/sw/../../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 593:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 596:lvgl/src/draw/sw/../../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 598:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 599:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 261              		.loc 2 599 26 view .LVU66
 262              	.LBB50:
 600:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 601:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 263              		.loc 2 602 5 view .LVU67
 603:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/draw/sw/../../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 612:lvgl/src/draw/sw/../../misc/lv_color.h ****         A bit better:
 613:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 264              		.loc 2 618 5 view .LVU68
 619:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 620:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 623:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 265              		.loc 2 623 5 view .LVU69
 266              		.loc 2 623 5 is_stmt 0 view .LVU70
 267              	.LBE50:
 268              	.LBE49:
 234:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 235:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint8_t * cbuf_uint = (uint8_t *)cbuf;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 23


 236:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint8_t chk_v = chk.full;
 237:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 16
 238:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint16_t * cbuf_uint = (uint16_t *)cbuf;
 269              		.loc 1 238 13 is_stmt 1 view .LVU71
 239:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint16_t chk_v = chk.full;
 270              		.loc 1 239 13 view .LVU72
 240:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 241:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t * cbuf_uint = (uint32_t *)cbuf;
 242:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t chk_v = chk.full;
 243:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 244:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(i = 0; i < px_cnt; i++) {
 271              		.loc 1 244 13 view .LVU73
 272              		.loc 1 244 19 is_stmt 0 view .LVU74
 273 00a2 0023     		movs	r3, #0
 274 00a4 0299     		ldr	r1, [sp, #8]
 275              		.loc 1 244 13 view .LVU75
 276 00a6 00E0     		b	.L11
 277              	.LVL26:
 278              	.L12:
 279              		.loc 1 244 37 is_stmt 1 discriminator 2 view .LVU76
 280 00a8 0133     		adds	r3, r3, #1
 281              	.LVL27:
 282              	.L11:
 283              		.loc 1 244 26 discriminator 1 view .LVU77
 284 00aa 8B42     		cmp	r3, r1
 285 00ac 80F09780 		bcs	.L3
 245:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(chk_v == cbuf_uint[i]) abuf[i] = 0x00;
 286              		.loc 1 245 17 view .LVU78
 287              		.loc 1 245 38 is_stmt 0 view .LVU79
 288 00b0 34F81320 		ldrh	r2, [r4, r3, lsl #1]
 289              		.loc 1 245 19 view .LVU80
 290 00b4 B2F5FC6F 		cmp	r2, #2016
 291 00b8 F6D1     		bne	.L12
 292              		.loc 1 245 43 is_stmt 1 discriminator 1 view .LVU81
 293              		.loc 1 245 51 is_stmt 0 discriminator 1 view .LVU82
 294 00ba 0022     		movs	r2, #0
 295 00bc EA54     		strb	r2, [r5, r3]
 296 00be F3E7     		b	.L12
 297              	.LVL28:
 298              	.L8:
 299              		.loc 1 245 51 discriminator 1 view .LVU83
 300              	.LBE48:
 301              	.LBE45:
 302              	.LBB51:
 246:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 247:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 248:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 249:lvgl/src/draw/sw/lv_draw_sw_img.c ****     else if(cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 250:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 += (src_stride * dest_area->y1 * LV_IMG_PX_SIZE_ALPHA_BYTE) + dest_area->x1 * LV_I
 303              		.loc 1 250 9 is_stmt 1 view .LVU84
 304              		.loc 1 250 44 is_stmt 0 view .LVU85
 305 00c0 B0F90230 		ldrsh	r3, [r0, #2]
 306              		.loc 1 250 89 view .LVU86
 307 00c4 B0F90010 		ldrsh	r1, [r0]
 308              	.LVL29:
 309              		.loc 1 250 78 view .LVU87
 310 00c8 03FB0A12 		mla	r2, r3, r10, r1
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 24


 311 00cc 02EB4202 		add	r2, r2, r2, lsl #1
 312              		.loc 1 250 18 view .LVU88
 313 00d0 0198     		ldr	r0, [sp, #4]
 314              	.LVL30:
 315              		.loc 1 250 18 view .LVU89
 316 00d2 1044     		add	r0, r0, r2
 317 00d4 0246     		mov	r2, r0
 318              	.LVL31:
 251:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 252:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_new_line_step_px = (src_stride - lv_area_get_width(dest_area));
 319              		.loc 1 252 9 is_stmt 1 view .LVU90
 320              	.LBB52:
 321              	.LBI52:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 322              		.loc 3 123 26 view .LVU91
 323              	.LBB53:
 324              		.loc 3 125 5 view .LVU92
 325              		.loc 3 125 31 is_stmt 0 view .LVU93
 326 00d6 BBF80460 		ldrh	r6, [fp, #4]
 327              		.loc 3 125 44 view .LVU94
 328 00da 89B2     		uxth	r1, r1
 329              		.loc 3 125 36 view .LVU95
 330 00dc 761A     		subs	r6, r6, r1
 331 00de B6B2     		uxth	r6, r6
 332              		.loc 3 125 49 view .LVU96
 333 00e0 0136     		adds	r6, r6, #1
 334 00e2 1FFA86FC 		uxth	ip, r6
 335              		.loc 3 125 12 view .LVU97
 336 00e6 36B2     		sxth	r6, r6
 337              	.LVL32:
 338              		.loc 3 125 12 view .LVU98
 339              	.LBE53:
 340              	.LBE52:
 341              		.loc 1 252 55 view .LVU99
 342 00e8 AAEB0C0C 		sub	ip, r10, ip
 343 00ec 1FFA8CFC 		uxth	ip, ip
 344              	.LVL33:
 253:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_new_line_step_byte = src_new_line_step_px * LV_IMG_PX_SIZE_ALPHA_BYTE;
 345              		.loc 1 253 9 is_stmt 1 view .LVU100
 346              		.loc 1 253 66 is_stmt 0 view .LVU101
 347 00f0 0CEB4C0C 		add	ip, ip, ip, lsl #1
 348              	.LVL34:
 349              		.loc 1 253 20 view .LVU102
 350 00f4 0FFA8CFC 		sxth	ip, ip
 351              	.LVL35:
 254:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 255:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t dest_h = lv_area_get_height(dest_area);
 352              		.loc 1 255 9 is_stmt 1 view .LVU103
 353              	.LBB54:
 354              	.LBI54:
 126:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 25


 133:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 355              		.loc 3 133 26 view .LVU104
 356              	.LBB55:
 134:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 357              		.loc 3 135 5 view .LVU105
 358              		.loc 3 135 31 is_stmt 0 view .LVU106
 359 00f8 BBF806E0 		ldrh	lr, [fp, #6]
 360              		.loc 3 135 44 view .LVU107
 361 00fc 9BB2     		uxth	r3, r3
 362              		.loc 3 135 36 view .LVU108
 363 00fe AEEB030E 		sub	lr, lr, r3
 364 0102 1FFA8EFE 		uxth	lr, lr
 365              		.loc 3 135 49 view .LVU109
 366 0106 0EF1010E 		add	lr, lr, #1
 367              		.loc 3 135 12 view .LVU110
 368 010a 0FFA8EFE 		sxth	lr, lr
 369              	.LVL36:
 370              		.loc 3 135 12 view .LVU111
 371              	.LBE55:
 372              	.LBE54:
 256:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t dest_w = lv_area_get_width(dest_area);
 373              		.loc 1 256 9 is_stmt 1 view .LVU112
 257:lvgl/src/draw/sw/lv_draw_sw_img.c ****         for(y = 0; y < dest_h; y++) {
 374              		.loc 1 257 9 view .LVU113
 375              		.loc 1 257 15 is_stmt 0 view .LVU114
 376 010e 0027     		movs	r7, #0
 377              		.loc 1 257 9 view .LVU115
 378 0110 12E0     		b	.L14
 379              	.LVL37:
 380              	.L15:
 258:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(x = 0; x < dest_w; x++) {
 259:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 abuf[x] = src_tmp8[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 381              		.loc 1 259 17 is_stmt 1 discriminator 3 view .LVU116
 382              		.loc 1 259 35 is_stmt 0 discriminator 3 view .LVU117
 383 0112 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 384              		.loc 1 259 25 discriminator 3 view .LVU118
 385 0114 E954     		strb	r1, [r5, r3]
 260:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 261:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 cbuf[x].full = *src_tmp8;
 262:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 16
 263:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 cbuf[x].full = *src_tmp8 + ((*(src_tmp8 + 1)) << 8);
 386              		.loc 1 263 17 is_stmt 1 discriminator 3 view .LVU119
 387              		.loc 1 263 32 is_stmt 0 discriminator 3 view .LVU120
 388 0116 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 389              		.loc 1 263 46 discriminator 3 view .LVU121
 390 0118 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 391              		.loc 1 263 42 discriminator 3 view .LVU122
 392 011a 01EB0021 		add	r1, r1, r0, lsl #8
 393              		.loc 1 263 30 discriminator 3 view .LVU123
 394 011e 24F81310 		strh	r1, [r4, r3, lsl #1]	@ movhi
 264:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 265:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 cbuf[x] = *((lv_color_t *) src_tmp8);
 266:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 cbuf[x].ch.alpha = 0xff;
 267:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 268:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 src_tmp8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 395              		.loc 1 268 17 is_stmt 1 discriminator 3 view .LVU124
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 26


 396              		.loc 1 268 26 is_stmt 0 discriminator 3 view .LVU125
 397 0122 0332     		adds	r2, r2, #3
 398              	.LVL38:
 258:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 abuf[x] = src_tmp8[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 399              		.loc 1 258 37 is_stmt 1 discriminator 3 view .LVU126
 400 0124 0133     		adds	r3, r3, #1
 401              	.LVL39:
 258:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 abuf[x] = src_tmp8[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 402              		.loc 1 258 37 is_stmt 0 discriminator 3 view .LVU127
 403 0126 1BB2     		sxth	r3, r3
 404              	.LVL40:
 405              	.L16:
 258:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 abuf[x] = src_tmp8[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 406              		.loc 1 258 26 is_stmt 1 discriminator 1 view .LVU128
 407 0128 B342     		cmp	r3, r6
 408 012a F2DB     		blt	.L15
 269:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 270:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 271:lvgl/src/draw/sw/lv_draw_sw_img.c ****             cbuf += dest_w;
 409              		.loc 1 271 13 discriminator 2 view .LVU129
 410              		.loc 1 271 18 is_stmt 0 discriminator 2 view .LVU130
 411 012c 04EB4604 		add	r4, r4, r6, lsl #1
 412              	.LVL41:
 272:lvgl/src/draw/sw/lv_draw_sw_img.c ****             abuf += dest_w;
 413              		.loc 1 272 13 is_stmt 1 discriminator 2 view .LVU131
 414              		.loc 1 272 18 is_stmt 0 discriminator 2 view .LVU132
 415 0130 3544     		add	r5, r5, r6
 416              	.LVL42:
 273:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_tmp8 += src_new_line_step_byte;
 417              		.loc 1 273 13 is_stmt 1 discriminator 2 view .LVU133
 418              		.loc 1 273 22 is_stmt 0 discriminator 2 view .LVU134
 419 0132 6244     		add	r2, r2, ip
 420              	.LVL43:
 257:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(x = 0; x < dest_w; x++) {
 421              		.loc 1 257 33 is_stmt 1 discriminator 2 view .LVU135
 422 0134 0137     		adds	r7, r7, #1
 423              	.LVL44:
 257:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(x = 0; x < dest_w; x++) {
 424              		.loc 1 257 33 is_stmt 0 discriminator 2 view .LVU136
 425 0136 3FB2     		sxth	r7, r7
 426              	.LVL45:
 427              	.L14:
 257:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(x = 0; x < dest_w; x++) {
 428              		.loc 1 257 22 is_stmt 1 discriminator 1 view .LVU137
 429 0138 7745     		cmp	r7, lr
 430 013a 50DA     		bge	.L3
 258:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 abuf[x] = src_tmp8[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 431              		.loc 1 258 19 is_stmt 0 view .LVU138
 432 013c 0023     		movs	r3, #0
 433 013e F3E7     		b	.L16
 434              	.LVL46:
 435              	.L5:
 258:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 abuf[x] = src_tmp8[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 436              		.loc 1 258 19 view .LVU139
 437              	.LBE51:
 438              	.LBB56:
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 27


 275:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 276:lvgl/src/draw/sw/lv_draw_sw_img.c ****     else if(cf == LV_IMG_CF_RGB565A8) {
 277:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 += (src_stride * dest_area->y1 * sizeof(lv_color_t)) + dest_area->x1 * sizeof(lv_c
 439              		.loc 1 277 9 is_stmt 1 view .LVU140
 440              		.loc 1 277 44 is_stmt 0 view .LVU141
 441 0140 B0F90220 		ldrsh	r2, [r0, #2]
 442              		.loc 1 277 82 view .LVU142
 443 0144 B0F90030 		ldrsh	r3, [r0]
 444              		.loc 1 277 71 view .LVU143
 445 0148 02FB0A38 		mla	r8, r2, r10, r3
 446              		.loc 1 277 18 view .LVU144
 447 014c 0199     		ldr	r1, [sp, #4]
 448              	.LVL47:
 449              		.loc 1 277 18 view .LVU145
 450 014e 01EB4808 		add	r8, r1, r8, lsl #1
 451              	.LVL48:
 278:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 279:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_stride_byte = src_stride * sizeof(lv_color_t);
 452              		.loc 1 279 9 is_stmt 1 view .LVU146
 453              		.loc 1 279 20 is_stmt 0 view .LVU147
 454 0152 4FEA4A01 		lsl	r1, r10, #1
 455 0156 09B2     		sxth	r1, r1
 456              	.LVL49:
 280:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 281:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t dest_h = lv_area_get_height(dest_area);
 457              		.loc 1 281 9 is_stmt 1 view .LVU148
 458              	.LBB57:
 459              	.LBI57:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 460              		.loc 3 133 26 view .LVU149
 461              	.LBB58:
 462              		.loc 3 135 5 view .LVU150
 463              		.loc 3 135 31 is_stmt 0 view .LVU151
 464 0158 B0F80690 		ldrh	r9, [r0, #6]
 465              		.loc 3 135 44 view .LVU152
 466 015c 92B2     		uxth	r2, r2
 467              		.loc 3 135 36 view .LVU153
 468 015e A9EB0209 		sub	r9, r9, r2
 469 0162 1FFA89F9 		uxth	r9, r9
 470              		.loc 3 135 49 view .LVU154
 471 0166 09F10109 		add	r9, r9, #1
 472              		.loc 3 135 12 view .LVU155
 473 016a 0FFA89F9 		sxth	r9, r9
 474              	.LVL50:
 475              		.loc 3 135 12 view .LVU156
 476              	.LBE58:
 477              	.LBE57:
 282:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t dest_w = lv_area_get_width(dest_area);
 478              		.loc 1 282 9 is_stmt 1 view .LVU157
 479              	.LBB59:
 480              	.LBI59:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 481              		.loc 3 123 26 view .LVU158
 482              	.LBB60:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 483              		.loc 3 125 5 view .LVU159
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 28


 484              		.loc 3 125 31 is_stmt 0 view .LVU160
 485 016e 8788     		ldrh	r7, [r0, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 486              		.loc 3 125 44 view .LVU161
 487 0170 9BB2     		uxth	r3, r3
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 488              		.loc 3 125 36 view .LVU162
 489 0172 FF1A     		subs	r7, r7, r3
 490 0174 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 491              		.loc 3 125 49 view .LVU163
 492 0176 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 493              		.loc 3 125 12 view .LVU164
 494 0178 3FB2     		sxth	r7, r7
 495              	.LVL51:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 496              		.loc 3 125 12 view .LVU165
 497              	.LBE60:
 498              	.LBE59:
 283:lvgl/src/draw/sw/lv_draw_sw_img.c ****         for(y = 0; y < dest_h; y++) {
 499              		.loc 1 283 9 is_stmt 1 view .LVU166
 500              		.loc 1 283 15 is_stmt 0 view .LVU167
 501 017a 0026     		movs	r6, #0
 502 017c 0490     		str	r0, [sp, #16]
 503 017e 8B46     		mov	fp, r1
 504 0180 CDF814A0 		str	r10, [sp, #20]
 505              		.loc 1 283 9 view .LVU168
 506 0184 0AE0     		b	.L17
 507              	.LVL52:
 508              	.L18:
 284:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf, src_tmp8, dest_w * sizeof(lv_color_t));
 509              		.loc 1 284 13 is_stmt 1 discriminator 3 view .LVU169
 510 0186 4FEA470A 		lsl	r10, r7, #1
 511 018a 5246     		mov	r2, r10
 512 018c 4146     		mov	r1, r8
 513 018e 2046     		mov	r0, r4
 514 0190 FFF7FEFF 		bl	lv_memcpy
 515              	.LVL53:
 285:lvgl/src/draw/sw/lv_draw_sw_img.c ****             cbuf += dest_w;
 516              		.loc 1 285 13 discriminator 3 view .LVU170
 517              		.loc 1 285 18 is_stmt 0 discriminator 3 view .LVU171
 518 0194 5444     		add	r4, r4, r10
 519              	.LVL54:
 286:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_tmp8 += src_stride_byte;
 520              		.loc 1 286 13 is_stmt 1 discriminator 3 view .LVU172
 521              		.loc 1 286 22 is_stmt 0 discriminator 3 view .LVU173
 522 0196 D844     		add	r8, r8, fp
 523              	.LVL55:
 283:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf, src_tmp8, dest_w * sizeof(lv_color_t));
 524              		.loc 1 283 33 is_stmt 1 discriminator 3 view .LVU174
 525 0198 0136     		adds	r6, r6, #1
 526              	.LVL56:
 283:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf, src_tmp8, dest_w * sizeof(lv_color_t));
 527              		.loc 1 283 33 is_stmt 0 discriminator 3 view .LVU175
 528 019a 36B2     		sxth	r6, r6
 529              	.LVL57:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 29


 530              	.L17:
 283:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(cbuf, src_tmp8, dest_w * sizeof(lv_color_t));
 531              		.loc 1 283 22 is_stmt 1 discriminator 1 view .LVU176
 532 019c 4E45     		cmp	r6, r9
 533 019e F2DB     		blt	.L18
 287:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 288:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 289:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 = (const uint8_t *)src_buf;
 290:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 += sizeof(lv_color_t) * src_w * src_h;
 534              		.loc 1 290 48 is_stmt 0 view .LVU177
 535 01a0 DDF810B0 		ldr	fp, [sp, #16]
 536              	.LVL58:
 537              		.loc 1 290 48 view .LVU178
 538 01a4 DDF814A0 		ldr	r10, [sp, #20]
 289:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 += sizeof(lv_color_t) * src_w * src_h;
 539              		.loc 1 289 9 is_stmt 1 view .LVU179
 540              	.LVL59:
 541              		.loc 1 290 9 view .LVU180
 542              		.loc 1 290 48 is_stmt 0 view .LVU181
 543 01a8 029B     		ldr	r3, [sp, #8]
 544 01aa 039A     		ldr	r2, [sp, #12]
 545 01ac 02FB03F3 		mul	r3, r2, r3
 546              	.LVL60:
 291:lvgl/src/draw/sw/lv_draw_sw_img.c ****         src_tmp8 += src_stride * dest_area->y1 + dest_area->x1;
 547              		.loc 1 291 9 is_stmt 1 view .LVU182
 548              		.loc 1 291 43 is_stmt 0 view .LVU183
 549 01b0 BBF90210 		ldrsh	r1, [fp, #2]
 550              		.loc 1 291 59 view .LVU184
 551 01b4 BBF90020 		ldrsh	r2, [fp]
 552              		.loc 1 291 48 view .LVU185
 553 01b8 01FB0A22 		mla	r2, r1, r10, r2
 554              		.loc 1 291 18 view .LVU186
 555 01bc 02EB4303 		add	r3, r2, r3, lsl #1
 556              	.LVL61:
 557              		.loc 1 291 18 view .LVU187
 558 01c0 019E     		ldr	r6, [sp, #4]
 559              	.LVL62:
 560              		.loc 1 291 18 view .LVU188
 561 01c2 1E44     		add	r6, r6, r3
 562              	.LVL63:
 292:lvgl/src/draw/sw/lv_draw_sw_img.c ****         for(y = 0; y < dest_h; y++) {
 563              		.loc 1 292 9 is_stmt 1 view .LVU189
 564              		.loc 1 292 15 is_stmt 0 view .LVU190
 565 01c4 0024     		movs	r4, #0
 566              	.LVL64:
 567              		.loc 1 292 9 view .LVU191
 568 01c6 08E0     		b	.L19
 569              	.LVL65:
 570              	.L20:
 293:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(abuf, src_tmp8, dest_w);
 571              		.loc 1 293 13 is_stmt 1 discriminator 3 view .LVU192
 572 01c8 3A46     		mov	r2, r7
 573 01ca 3146     		mov	r1, r6
 574 01cc 2846     		mov	r0, r5
 575 01ce FFF7FEFF 		bl	lv_memcpy
 576              	.LVL66:
 294:lvgl/src/draw/sw/lv_draw_sw_img.c ****             abuf += dest_w;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 30


 577              		.loc 1 294 13 discriminator 3 view .LVU193
 578              		.loc 1 294 18 is_stmt 0 discriminator 3 view .LVU194
 579 01d2 3D44     		add	r5, r5, r7
 580              	.LVL67:
 295:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_tmp8 += src_stride;
 581              		.loc 1 295 13 is_stmt 1 discriminator 3 view .LVU195
 582              		.loc 1 295 22 is_stmt 0 discriminator 3 view .LVU196
 583 01d4 5644     		add	r6, r6, r10
 584              	.LVL68:
 292:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(abuf, src_tmp8, dest_w);
 585              		.loc 1 292 33 is_stmt 1 discriminator 3 view .LVU197
 586 01d6 0134     		adds	r4, r4, #1
 587              	.LVL69:
 292:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(abuf, src_tmp8, dest_w);
 588              		.loc 1 292 33 is_stmt 0 discriminator 3 view .LVU198
 589 01d8 24B2     		sxth	r4, r4
 590              	.LVL70:
 591              	.L19:
 292:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(abuf, src_tmp8, dest_w);
 592              		.loc 1 292 22 is_stmt 1 discriminator 1 view .LVU199
 593 01da 4C45     		cmp	r4, r9
 594 01dc F4DB     		blt	.L20
 595              	.LVL71:
 596              	.L3:
 292:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memcpy(abuf, src_tmp8, dest_w);
 597              		.loc 1 292 22 is_stmt 0 discriminator 1 view .LVU200
 598              	.LBE56:
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 297:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 298:lvgl/src/draw/sw/lv_draw_sw_img.c **** }
 599              		.loc 1 298 1 view .LVU201
 600 01de 07B0     		add	sp, sp, #28
 601              	.LCFI3:
 602              		.cfi_def_cfa_offset 36
 603              		@ sp needed
 604 01e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 605              		.loc 1 298 1 view .LVU202
 606              		.cfi_endproc
 607              	.LFE162:
 609              		.section	.text.lv_draw_sw_img_decoded,"ax",%progbits
 610              		.align	1
 611              		.global	lv_draw_sw_img_decoded
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 616              	lv_draw_sw_img_decoded:
 617              	.LVL72:
 618              	.LFB161:
  48:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*Use the clip area as draw area*/
 619              		.loc 1 48 1 is_stmt 1 view -0
 620              		.cfi_startproc
 621              		@ args = 4, pretend = 0, frame = 104
 622              		@ frame_needed = 0, uses_anonymous_args = 0
  48:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*Use the clip area as draw area*/
 623              		.loc 1 48 1 is_stmt 0 view .LVU204
 624 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 625              	.LCFI4:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 31


 626              		.cfi_def_cfa_offset 36
 627              		.cfi_offset 4, -36
 628              		.cfi_offset 5, -32
 629              		.cfi_offset 6, -28
 630              		.cfi_offset 7, -24
 631              		.cfi_offset 8, -20
 632              		.cfi_offset 9, -16
 633              		.cfi_offset 10, -12
 634              		.cfi_offset 11, -8
 635              		.cfi_offset 14, -4
 636 0004 A1B0     		sub	sp, sp, #132
 637              	.LCFI5:
 638              		.cfi_def_cfa_offset 168
 639 0006 0790     		str	r0, [sp, #28]
 640 0008 0F46     		mov	r7, r1
 641 000a 9046     		mov	r8, r2
 642 000c 0C93     		str	r3, [sp, #48]
 643 000e 9DF8A830 		ldrb	r3, [sp, #168]	@ zero_extendqisi2
 644              	.LVL73:
  48:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*Use the clip area as draw area*/
 645              		.loc 1 48 1 view .LVU205
 646 0012 0993     		str	r3, [sp, #36]
  50:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_area_copy(&draw_area, draw_ctx->clip_area);
 647              		.loc 1 50 5 is_stmt 1 view .LVU206
  51:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 648              		.loc 1 51 5 view .LVU207
 649 0014 8368     		ldr	r3, [r0, #8]
 650              	.LVL74:
 651              	.LBB61:
 652              	.LBI61:
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 653              		.loc 3 110 20 view .LVU208
 654              	.LBB62:
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 655              		.loc 3 112 5 view .LVU209
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 656              		.loc 3 112 19 is_stmt 0 view .LVU210
 657 0016 B3F90020 		ldrsh	r2, [r3]
 658              	.LVL75:
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 659              		.loc 3 112 14 view .LVU211
 660 001a ADF87820 		strh	r2, [sp, #120]	@ movhi
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 661              		.loc 3 113 5 is_stmt 1 view .LVU212
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 662              		.loc 3 113 19 is_stmt 0 view .LVU213
 663 001e B3F90220 		ldrsh	r2, [r3, #2]
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 664              		.loc 3 113 14 view .LVU214
 665 0022 ADF87A20 		strh	r2, [sp, #122]	@ movhi
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 666              		.loc 3 114 5 is_stmt 1 view .LVU215
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 667              		.loc 3 114 19 is_stmt 0 view .LVU216
 668 0026 B3F90420 		ldrsh	r2, [r3, #4]
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 669              		.loc 3 114 14 view .LVU217
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 32


 670 002a ADF87C20 		strh	r2, [sp, #124]	@ movhi
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 671              		.loc 3 115 5 is_stmt 1 view .LVU218
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 672              		.loc 3 115 19 is_stmt 0 view .LVU219
 673 002e B3F90630 		ldrsh	r3, [r3, #6]
 674              	.LVL76:
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 675              		.loc 3 115 14 view .LVU220
 676 0032 ADF87E30 		strh	r3, [sp, #126]	@ movhi
 677              	.LVL77:
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 678              		.loc 3 115 14 view .LVU221
 679              	.LBE62:
 680              	.LBE61:
  53:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
 681              		.loc 1 53 5 is_stmt 1 view .LVU222
  53:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
 682              		.loc 1 53 21 is_stmt 0 view .LVU223
 683 0036 1EA8     		add	r0, sp, #120
 684              	.LVL78:
  53:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
 685              		.loc 1 53 21 view .LVU224
 686 0038 FFF7FEFF 		bl	lv_draw_mask_is_any
 687              	.LVL79:
  53:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
 688              		.loc 1 53 21 view .LVU225
 689 003c 0546     		mov	r5, r0
 690 003e 0B90     		str	r0, [sp, #44]
 691              	.LVL80:
  54:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 692              		.loc 1 54 5 is_stmt 1 view .LVU226
  54:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 693              		.loc 1 54 43 is_stmt 0 view .LVU227
 694 0040 3C68     		ldr	r4, [r7]
 695 0042 0A94     		str	r4, [sp, #40]
 696              	.LVL81:
  56:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_draw_sw_blend_dsc_t blend_dsc;
 697              		.loc 1 56 5 is_stmt 1 view .LVU228
  57:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 698              		.loc 1 57 5 view .LVU229
  59:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.opa = draw_dsc->opa;
 699              		.loc 1 59 5 view .LVU230
 700 0044 1C21     		movs	r1, #28
 701 0046 15A8     		add	r0, sp, #84
 702 0048 FFF7FEFF 		bl	lv_memset_00
 703              	.LVL82:
  60:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_mode = draw_dsc->blend_mode;
 704              		.loc 1 60 5 view .LVU231
  60:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_mode = draw_dsc->blend_mode;
 705              		.loc 1 60 29 is_stmt 0 view .LVU232
 706 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  60:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_mode = draw_dsc->blend_mode;
 707              		.loc 1 60 19 view .LVU233
 708 004e 8DF86C30 		strb	r3, [sp, #108]
  61:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_area = &blend_area;
 709              		.loc 1 61 5 is_stmt 1 view .LVU234
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 33


  61:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_area = &blend_area;
 710              		.loc 1 61 36 is_stmt 0 view .LVU235
 711 0052 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 712 0054 C3F30303 		ubfx	r3, r3, #0, #4
  61:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_area = &blend_area;
 713              		.loc 1 61 26 view .LVU236
 714 0058 8DF86D30 		strb	r3, [sp, #109]
  62:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 715              		.loc 1 62 5 is_stmt 1 view .LVU237
  62:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 716              		.loc 1 62 26 is_stmt 0 view .LVU238
 717 005c 1CAB     		add	r3, sp, #112
 718 005e 1593     		str	r3, [sp, #84]
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 719              		.loc 1 65 5 is_stmt 1 view .LVU239
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 720              		.loc 1 65 7 is_stmt 0 view .LVU240
 721 0060 45B9     		cbnz	r5, .L25
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 722              		.loc 1 65 18 discriminator 1 view .LVU241
 723 0062 B4F1807F 		cmp	r4, #16777216
 724 0066 00F0BE80 		beq	.L50
 725              	.L26:
  71:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_area_t clipped_coords;
 726              		.loc 1 71 10 is_stmt 1 discriminator 1 view .LVU242
  71:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_area_t clipped_coords;
 727              		.loc 1 71 23 is_stmt 0 discriminator 1 view .LVU243
 728 006a 0A9B     		ldr	r3, [sp, #40]
 729 006c B3F1807F 		cmp	r3, #16777216
 730 0070 00F0CA80 		beq	.L51
 731              	.L25:
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 732              		.loc 1 85 10 is_stmt 1 view .LVU244
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 733              		.loc 1 85 12 is_stmt 0 view .LVU245
 734 0074 0B9B     		ldr	r3, [sp, #44]
 735 0076 23B9     		cbnz	r3, .L30
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 736              		.loc 1 85 23 discriminator 1 view .LVU246
 737 0078 0A9B     		ldr	r3, [sp, #40]
 738 007a B3F1807F 		cmp	r3, #16777216
 739 007e 00F0E380 		beq	.L52
 740              	.L30:
 741              	.LBB63:
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x2 = draw_ctx->clip_area->x2;
 742              		.loc 1 99 9 is_stmt 1 view .LVU247
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x2 = draw_ctx->clip_area->x2;
 743              		.loc 1 99 33 is_stmt 0 view .LVU248
 744 0082 079B     		ldr	r3, [sp, #28]
 745 0084 9A68     		ldr	r2, [r3, #8]
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x2 = draw_ctx->clip_area->x2;
 746              		.loc 1 99 44 view .LVU249
 747 0086 B2F90010 		ldrsh	r1, [r2]
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x2 = draw_ctx->clip_area->x2;
 748              		.loc 1 99 23 view .LVU250
 749 008a ADF87010 		strh	r1, [sp, #112]	@ movhi
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y1 = draw_ctx->clip_area->y1;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 34


 750              		.loc 1 100 9 is_stmt 1 view .LVU251
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y1 = draw_ctx->clip_area->y1;
 751              		.loc 1 100 44 is_stmt 0 view .LVU252
 752 008e B2F90430 		ldrsh	r3, [r2, #4]
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y1 = draw_ctx->clip_area->y1;
 753              		.loc 1 100 23 view .LVU253
 754 0092 ADF87430 		strh	r3, [sp, #116]	@ movhi
 101:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = draw_ctx->clip_area->y2;
 755              		.loc 1 101 9 is_stmt 1 view .LVU254
 101:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = draw_ctx->clip_area->y2;
 756              		.loc 1 101 44 is_stmt 0 view .LVU255
 757 0096 B2F90250 		ldrsh	r5, [r2, #2]
 758              	.LVL83:
 101:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = draw_ctx->clip_area->y2;
 759              		.loc 1 101 23 view .LVU256
 760 009a ADF87250 		strh	r5, [sp, #114]	@ movhi
 102:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 761              		.loc 1 102 9 is_stmt 1 view .LVU257
 102:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 762              		.loc 1 102 44 is_stmt 0 view .LVU258
 763 009e B2F90620 		ldrsh	r2, [r2, #6]
 102:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 764              		.loc 1 102 23 view .LVU259
 765 00a2 ADF87620 		strh	r2, [sp, #118]	@ movhi
 104:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_h = lv_area_get_height(coords);
 766              		.loc 1 104 9 is_stmt 1 view .LVU260
 767              	.LVL84:
 768              	.LBB64:
 769              	.LBI64:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 770              		.loc 3 123 26 view .LVU261
 771              	.LBB65:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 772              		.loc 3 125 5 view .LVU262
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 773              		.loc 3 125 31 is_stmt 0 view .LVU263
 774 00a6 B8F80400 		ldrh	r0, [r8, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 775              		.loc 3 125 44 view .LVU264
 776 00aa B8F80040 		ldrh	r4, [r8]
 777              	.LVL85:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 778              		.loc 3 125 36 view .LVU265
 779 00ae 001B     		subs	r0, r0, r4
 780 00b0 80B2     		uxth	r0, r0
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 781              		.loc 3 125 49 view .LVU266
 782 00b2 0130     		adds	r0, r0, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 783              		.loc 3 125 12 view .LVU267
 784 00b4 00B2     		sxth	r0, r0
 785 00b6 0F90     		str	r0, [sp, #60]
 786              	.LVL86:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 787              		.loc 3 125 12 view .LVU268
 788              	.LBE65:
 789              	.LBE64:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 35


 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t blend_h = lv_area_get_height(&blend_area);
 790              		.loc 1 105 9 is_stmt 1 view .LVU269
 791              	.LBB66:
 792              	.LBI66:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 793              		.loc 3 133 26 view .LVU270
 794              	.LBB67:
 795              		.loc 3 135 5 view .LVU271
 796              		.loc 3 135 31 is_stmt 0 view .LVU272
 797 00b8 B8F80600 		ldrh	r0, [r8, #6]
 798              		.loc 3 135 44 view .LVU273
 799 00bc B8F80240 		ldrh	r4, [r8, #2]
 800              		.loc 3 135 36 view .LVU274
 801 00c0 001B     		subs	r0, r0, r4
 802 00c2 80B2     		uxth	r0, r0
 803              		.loc 3 135 49 view .LVU275
 804 00c4 0130     		adds	r0, r0, #1
 805              		.loc 3 135 12 view .LVU276
 806 00c6 00B2     		sxth	r0, r0
 807 00c8 0E90     		str	r0, [sp, #56]
 808              	.LVL87:
 809              		.loc 3 135 12 view .LVU277
 810              	.LBE67:
 811              	.LBE66:
 106:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t blend_w = lv_area_get_width(&blend_area);
 812              		.loc 1 106 9 is_stmt 1 view .LVU278
 813              	.LBB68:
 814              	.LBI68:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 815              		.loc 3 133 26 view .LVU279
 816              	.LBB69:
 817              		.loc 3 135 5 view .LVU280
 818              		.loc 3 135 31 is_stmt 0 view .LVU281
 819 00ca 94B2     		uxth	r4, r2
 820              		.loc 3 135 44 view .LVU282
 821 00cc ADB2     		uxth	r5, r5
 822              		.loc 3 135 36 view .LVU283
 823 00ce 641B     		subs	r4, r4, r5
 824 00d0 A4B2     		uxth	r4, r4
 825              		.loc 3 135 49 view .LVU284
 826 00d2 0134     		adds	r4, r4, #1
 827              		.loc 3 135 12 view .LVU285
 828 00d4 24B2     		sxth	r4, r4
 829              	.LVL88:
 830              		.loc 3 135 12 view .LVU286
 831              	.LBE69:
 832              	.LBE68:
 107:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 833              		.loc 1 107 9 is_stmt 1 view .LVU287
 834              	.LBB70:
 835              	.LBI70:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 836              		.loc 3 123 26 view .LVU288
 837              	.LBB71:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 838              		.loc 3 125 5 view .LVU289
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 36


 839              		.loc 3 125 31 is_stmt 0 view .LVU290
 840 00d6 9DB2     		uxth	r5, r3
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 841              		.loc 3 125 44 view .LVU291
 842 00d8 89B2     		uxth	r1, r1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 843              		.loc 3 125 36 view .LVU292
 844 00da 6D1A     		subs	r5, r5, r1
 845 00dc ADB2     		uxth	r5, r5
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 846              		.loc 3 125 49 view .LVU293
 847 00de 0135     		adds	r5, r5, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 848              		.loc 3 125 12 view .LVU294
 849 00e0 2DB2     		sxth	r5, r5
 850              	.LVL89:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 851              		.loc 3 125 12 view .LVU295
 852              	.LBE71:
 853              	.LBE70:
 109:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t blend_size = lv_area_get_size(&blend_area);
 854              		.loc 1 109 9 is_stmt 1 view .LVU296
 109:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t blend_size = lv_area_get_size(&blend_area);
 855              		.loc 1 109 33 is_stmt 0 view .LVU297
 856 00e2 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 857              	.LVL90:
 858 00e6 FFF7FEFF 		bl	lv_disp_get_hor_res
 859              	.LVL91:
 860 00ea 0646     		mov	r6, r0
 861              	.LVL92:
 110:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_h;
 862              		.loc 1 110 9 is_stmt 1 view .LVU298
 110:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_h;
 863              		.loc 1 110 31 is_stmt 0 view .LVU299
 864 00ec 1CA8     		add	r0, sp, #112
 865              	.LVL93:
 110:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_h;
 866              		.loc 1 110 31 view .LVU300
 867 00ee FFF7FEFF 		bl	lv_area_get_size
 868              	.LVL94:
 111:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t buf_w = blend_w;
 869              		.loc 1 111 9 is_stmt 1 view .LVU301
 112:lvgl/src/draw/sw/lv_draw_sw_img.c ****         if(blend_size <= max_buf_size) {
 870              		.loc 1 112 9 view .LVU302
 113:lvgl/src/draw/sw/lv_draw_sw_img.c ****             buf_h = blend_h;
 871              		.loc 1 113 9 view .LVU303
 113:lvgl/src/draw/sw/lv_draw_sw_img.c ****             buf_h = blend_h;
 872              		.loc 1 113 11 is_stmt 0 view .LVU304
 873 00f2 8642     		cmp	r6, r0
 874 00f4 01D2     		bcs	.L32
 118:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 875              		.loc 1 118 13 is_stmt 1 view .LVU305
 118:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 876              		.loc 1 118 19 is_stmt 0 view .LVU306
 877 00f6 B6FBF5F4 		udiv	r4, r6, r5
 878              	.LVL95:
 879              	.L32:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 37


 122:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 880              		.loc 1 122 9 is_stmt 1 view .LVU307
 122:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 881              		.loc 1 122 18 is_stmt 0 view .LVU308
 882 00fa 05FB04F9 		mul	r9, r5, r4
 883              	.LVL96:
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_opa_t * mask_buf = lv_mem_buf_get(buf_size);
 884              		.loc 1 124 9 is_stmt 1 view .LVU309
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_opa_t * mask_buf = lv_mem_buf_get(buf_size);
 885              		.loc 1 124 32 is_stmt 0 view .LVU310
 886 00fe 4FEA4900 		lsl	r0, r9, #1
 887              	.LVL97:
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_opa_t * mask_buf = lv_mem_buf_get(buf_size);
 888              		.loc 1 124 32 view .LVU311
 889 0102 FFF7FEFF 		bl	lv_mem_buf_get
 890              	.LVL98:
 891 0106 0646     		mov	r6, r0
 892              	.LVL99:
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = mask_buf;
 893              		.loc 1 125 9 is_stmt 1 view .LVU312
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = mask_buf;
 894              		.loc 1 125 31 is_stmt 0 view .LVU313
 895 0108 4846     		mov	r0, r9
 896              	.LVL100:
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = mask_buf;
 897              		.loc 1 125 31 view .LVU314
 898 010a FFF7FEFF 		bl	lv_mem_buf_get
 899              	.LVL101:
 900 010e 0890     		str	r0, [sp, #32]
 901              	.LVL102:
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = &blend_area;
 902              		.loc 1 126 9 is_stmt 1 view .LVU315
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = &blend_area;
 903              		.loc 1 126 28 is_stmt 0 view .LVU316
 904 0110 1890     		str	r0, [sp, #96]
 127:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 905              		.loc 1 127 9 is_stmt 1 view .LVU317
 127:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 906              		.loc 1 127 29 is_stmt 0 view .LVU318
 907 0112 1CAB     		add	r3, sp, #112
 908 0114 1A93     		str	r3, [sp, #104]
 128:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = rgb_buf;
 909              		.loc 1 128 9 is_stmt 1 view .LVU319
 128:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = rgb_buf;
 910              		.loc 1 128 28 is_stmt 0 view .LVU320
 911 0116 0223     		movs	r3, #2
 912 0118 8DF86430 		strb	r3, [sp, #100]
 129:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t y_last = blend_area.y2;
 913              		.loc 1 129 9 is_stmt 1 view .LVU321
 129:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t y_last = blend_area.y2;
 914              		.loc 1 129 27 is_stmt 0 view .LVU322
 915 011c 1696     		str	r6, [sp, #88]
 130:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = blend_area.y1 + buf_h - 1;
 916              		.loc 1 130 9 is_stmt 1 view .LVU323
 130:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = blend_area.y1 + buf_h - 1;
 917              		.loc 1 130 20 is_stmt 0 view .LVU324
 918 011e BDF976A0 		ldrsh	r10, [sp, #118]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 38


 919              	.LVL103:
 131:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 920              		.loc 1 131 9 is_stmt 1 view .LVU325
 131:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 921              		.loc 1 131 35 is_stmt 0 view .LVU326
 922 0122 BDF87230 		ldrh	r3, [sp, #114]
 131:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 923              		.loc 1 131 39 view .LVU327
 924 0126 A2B2     		uxth	r2, r4
 925 0128 0D92     		str	r2, [sp, #52]
 926 012a 1344     		add	r3, r3, r2
 927 012c 9BB2     		uxth	r3, r3
 131:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 928              		.loc 1 131 47 view .LVU328
 929 012e 013B     		subs	r3, r3, #1
 131:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 930              		.loc 1 131 23 view .LVU329
 931 0130 ADF87630 		strh	r3, [sp, #118]	@ movhi
 133:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                            draw_dsc->zoom != LV_IMG_ZOOM_NONE) ?
 932              		.loc 1 133 9 is_stmt 1 view .LVU330
 133:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                            draw_dsc->zoom != LV_IMG_ZOOM_NONE) ?
 933              		.loc 1 133 28 is_stmt 0 view .LVU331
 934 0134 099B     		ldr	r3, [sp, #36]
 935 0136 042B     		cmp	r3, #4
 936 0138 00F0B280 		beq	.L53
 937 013c 0223     		movs	r3, #2
 938              	.L33:
 939              	.LVL104:
 136:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 940              		.loc 1 136 9 is_stmt 1 discriminator 6 view .LVU332
 136:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 941              		.loc 1 136 28 is_stmt 0 discriminator 6 view .LVU333
 942 013e 8DF86430 		strb	r3, [sp, #100]
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply transformations if any or separate the channels*/
 943              		.loc 1 138 9 is_stmt 1 discriminator 6 view .LVU334
 944              	.LVL105:
 945              	.L34:
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply transformations if any or separate the channels*/
 946              		.loc 1 138 29 view .LVU335
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply transformations if any or separate the channels*/
 947              		.loc 1 138 25 is_stmt 0 view .LVU336
 948 0142 BDF97230 		ldrsh	r3, [sp, #114]
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Apply transformations if any or separate the channels*/
 949              		.loc 1 138 29 view .LVU337
 950 0146 5345     		cmp	r3, r10
 951 0148 00F30781 		bgt	.L54
 952              	.LBB72:
 140:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_area_copy(&transform_area, &blend_area);
 953              		.loc 1 140 13 is_stmt 1 view .LVU338
 141:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_area_move(&transform_area, -coords->x1, -coords->y1);
 954              		.loc 1 141 13 view .LVU339
 955              	.LVL106:
 956              	.LBB73:
 957              	.LBI73:
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 958              		.loc 3 110 20 view .LVU340
 959              	.LBB74:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 39


 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 960              		.loc 3 112 5 view .LVU341
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 961              		.loc 3 112 19 is_stmt 0 view .LVU342
 962 014c BDF97020 		ldrsh	r2, [sp, #112]
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 963              		.loc 3 112 14 view .LVU343
 964 0150 ADF84C20 		strh	r2, [sp, #76]	@ movhi
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 965              		.loc 3 113 5 is_stmt 1 view .LVU344
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 966              		.loc 3 113 14 is_stmt 0 view .LVU345
 967 0154 ADF84E30 		strh	r3, [sp, #78]	@ movhi
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 968              		.loc 3 114 5 is_stmt 1 view .LVU346
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 969              		.loc 3 114 19 is_stmt 0 view .LVU347
 970 0158 BDF97430 		ldrsh	r3, [sp, #116]
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 971              		.loc 3 114 14 view .LVU348
 972 015c ADF85030 		strh	r3, [sp, #80]	@ movhi
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 973              		.loc 3 115 5 is_stmt 1 view .LVU349
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 974              		.loc 3 115 19 is_stmt 0 view .LVU350
 975 0160 BDF97630 		ldrsh	r3, [sp, #118]
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 976              		.loc 3 115 14 view .LVU351
 977 0164 ADF85230 		strh	r3, [sp, #82]	@ movhi
 978              	.LVL107:
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 979              		.loc 3 115 14 view .LVU352
 980              	.LBE74:
 981              	.LBE73:
 142:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(transform) {
 982              		.loc 1 142 13 is_stmt 1 view .LVU353
 142:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(transform) {
 983              		.loc 1 142 50 is_stmt 0 view .LVU354
 984 0168 B8F80010 		ldrh	r1, [r8]
 142:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(transform) {
 985              		.loc 1 142 63 view .LVU355
 986 016c B8F80220 		ldrh	r2, [r8, #2]
 142:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(transform) {
 987              		.loc 1 142 13 view .LVU356
 988 0170 5242     		rsbs	r2, r2, #0
 989 0172 4942     		rsbs	r1, r1, #0
 990 0174 12B2     		sxth	r2, r2
 991 0176 09B2     		sxth	r1, r1
 992 0178 13A8     		add	r0, sp, #76
 993 017a FFF7FEFF 		bl	lv_area_move
 994              	.LVL108:
 143:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_transform(draw_ctx, &transform_area, src_buf, src_w, src_h, src_w,
 995              		.loc 1 143 13 is_stmt 1 view .LVU357
 143:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_transform(draw_ctx, &transform_area, src_buf, src_w, src_h, src_w,
 996              		.loc 1 143 15 is_stmt 0 view .LVU358
 997 017e 0A9B     		ldr	r3, [sp, #40]
 998 0180 B3F1807F 		cmp	r3, #16777216
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 40


 999 0184 00F09480 		beq	.L35
 144:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                   draw_dsc, cf, rgb_buf, mask_buf);
 1000              		.loc 1 144 17 is_stmt 1 view .LVU359
 1001 0188 089B     		ldr	r3, [sp, #32]
 1002 018a 0593     		str	r3, [sp, #20]
 1003 018c 0496     		str	r6, [sp, #16]
 1004 018e 099B     		ldr	r3, [sp, #36]
 1005 0190 0393     		str	r3, [sp, #12]
 1006 0192 0297     		str	r7, [sp, #8]
 1007 0194 0F9B     		ldr	r3, [sp, #60]
 1008 0196 0193     		str	r3, [sp, #4]
 1009 0198 0E9A     		ldr	r2, [sp, #56]
 1010 019a 0092     		str	r2, [sp]
 1011 019c 0C9A     		ldr	r2, [sp, #48]
 1012 019e 13A9     		add	r1, sp, #76
 1013 01a0 0798     		ldr	r0, [sp, #28]
 1014 01a2 FFF7FEFF 		bl	lv_draw_transform
 1015              	.LVL109:
 1016              	.L36:
 152:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint16_t premult_v[3];
 1017              		.loc 1 152 13 view .LVU360
 152:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint16_t premult_v[3];
 1018              		.loc 1 152 24 is_stmt 0 view .LVU361
 1019 01a6 97F80AB0 		ldrb	fp, [r7, #10]	@ zero_extendqisi2
 152:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint16_t premult_v[3];
 1020              		.loc 1 152 15 view .LVU362
 1021 01aa BBF1020F 		cmp	fp, #2
 1022 01ae 00F28D80 		bhi	.L55
 1023              	.L37:
 165:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_coord_t y;
 1024              		.loc 1 165 13 is_stmt 1 view .LVU363
 165:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_coord_t y;
 1025              		.loc 1 165 15 is_stmt 0 view .LVU364
 1026 01b2 0B9B     		ldr	r3, [sp, #44]
 1027 01b4 002B     		cmp	r3, #0
 1028 01b6 40F0AE80 		bne	.L56
 1029              	.L40:
 185:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1030              		.loc 1 185 13 is_stmt 1 view .LVU365
 1031 01ba 15A9     		add	r1, sp, #84
 1032 01bc 0798     		ldr	r0, [sp, #28]
 1033 01be FFF7FEFF 		bl	lv_draw_sw_blend
 1034              	.LVL110:
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_area.y2 = blend_area.y1 + buf_h - 1;
 1035              		.loc 1 188 13 view .LVU366
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_area.y2 = blend_area.y1 + buf_h - 1;
 1036              		.loc 1 188 39 is_stmt 0 view .LVU367
 1037 01c2 BDF87630 		ldrh	r3, [sp, #118]
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_area.y2 = blend_area.y1 + buf_h - 1;
 1038              		.loc 1 188 43 view .LVU368
 1039 01c6 0133     		adds	r3, r3, #1
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_area.y2 = blend_area.y1 + buf_h - 1;
 1040              		.loc 1 188 27 view .LVU369
 1041 01c8 ADF87230 		strh	r3, [sp, #114]	@ movhi
 189:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y2 > y_last) blend_area.y2 = y_last;
 1042              		.loc 1 189 13 is_stmt 1 view .LVU370
 189:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y2 > y_last) blend_area.y2 = y_last;
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 41


 1043              		.loc 1 189 43 is_stmt 0 view .LVU371
 1044 01cc 0D9A     		ldr	r2, [sp, #52]
 1045 01ce 12FA83F3 		uxtah	r3, r2, r3
 1046 01d2 9BB2     		uxth	r3, r3
 189:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y2 > y_last) blend_area.y2 = y_last;
 1047              		.loc 1 189 51 view .LVU372
 1048 01d4 013B     		subs	r3, r3, #1
 1049 01d6 1BB2     		sxth	r3, r3
 189:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y2 > y_last) blend_area.y2 = y_last;
 1050              		.loc 1 189 27 view .LVU373
 1051 01d8 ADF87630 		strh	r3, [sp, #118]	@ movhi
 190:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 1052              		.loc 1 190 13 is_stmt 1 view .LVU374
 190:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 1053              		.loc 1 190 15 is_stmt 0 view .LVU375
 1054 01dc 5345     		cmp	r3, r10
 1055 01de B0DD     		ble	.L34
 190:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 1056              		.loc 1 190 40 is_stmt 1 discriminator 1 view .LVU376
 190:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 1057              		.loc 1 190 54 is_stmt 0 discriminator 1 view .LVU377
 1058 01e0 ADF876A0 		strh	r10, [sp, #118]	@ movhi
 1059 01e4 ADE7     		b	.L34
 1060              	.LVL111:
 1061              	.L50:
 190:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 1062              		.loc 1 190 54 discriminator 1 view .LVU378
 1063              	.LBE72:
 1064              	.LBE63:
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 1065              		.loc 1 65 32 discriminator 2 view .LVU379
 1066 01e6 099B     		ldr	r3, [sp, #36]
 1067 01e8 042B     		cmp	r3, #4
 1068 01ea 7FF43EAF 		bne	.L26
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 1069              		.loc 1 65 73 discriminator 3 view .LVU380
 1070 01ee BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 1071              		.loc 1 65 62 discriminator 3 view .LVU381
 1072 01f0 002B     		cmp	r3, #0
 1073 01f2 7FF43AAF 		bne	.L26
  66:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1074              		.loc 1 66 9 is_stmt 1 view .LVU382
  66:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1075              		.loc 1 66 27 is_stmt 0 view .LVU383
 1076 01f6 0C9B     		ldr	r3, [sp, #48]
 1077 01f8 1693     		str	r3, [sp, #88]
  68:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1078              		.loc 1 68 9 is_stmt 1 view .LVU384
  68:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1079              		.loc 1 68 30 is_stmt 0 view .LVU385
 1080 01fa CDF85480 		str	r8, [sp, #84]
  69:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 1081              		.loc 1 69 9 is_stmt 1 view .LVU386
 1082 01fe 15A9     		add	r1, sp, #84
 1083 0200 0798     		ldr	r0, [sp, #28]
 1084 0202 FFF7FEFF 		bl	lv_draw_sw_blend
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 42


 1085              	.LVL112:
 1086 0206 AEE0     		b	.L24
 1087              	.L51:
  71:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_area_t clipped_coords;
 1088              		.loc 1 71 37 is_stmt 0 discriminator 2 view .LVU387
 1089 0208 099B     		ldr	r3, [sp, #36]
 1090 020a 0E2B     		cmp	r3, #14
 1091 020c 7FF432AF 		bne	.L25
 1092              	.LBB82:
  72:lvgl/src/draw/sw/lv_draw_sw_img.c ****         if(!_lv_area_intersect(&clipped_coords, coords, draw_ctx->clip_area)) return;
 1093              		.loc 1 72 9 is_stmt 1 view .LVU388
  73:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1094              		.loc 1 73 9 view .LVU389
  73:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1095              		.loc 1 73 13 is_stmt 0 view .LVU390
 1096 0210 079C     		ldr	r4, [sp, #28]
 1097              	.LVL113:
  73:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1098              		.loc 1 73 13 view .LVU391
 1099 0212 A268     		ldr	r2, [r4, #8]
 1100 0214 4146     		mov	r1, r8
 1101 0216 13A8     		add	r0, sp, #76
 1102 0218 FFF7FEFF 		bl	_lv_area_intersect
 1103              	.LVL114:
  73:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1104              		.loc 1 73 11 view .LVU392
 1105 021c 0028     		cmp	r0, #0
 1106 021e 00F0A280 		beq	.L24
  75:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = coords;
 1107              		.loc 1 75 9 is_stmt 1 view .LVU393
  75:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = coords;
 1108              		.loc 1 75 28 is_stmt 0 view .LVU394
 1109 0222 0C9B     		ldr	r3, [sp, #48]
 1110 0224 1893     		str	r3, [sp, #96]
  76:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = NULL;
 1111              		.loc 1 76 9 is_stmt 1 view .LVU395
  76:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = NULL;
 1112              		.loc 1 76 29 is_stmt 0 view .LVU396
 1113 0226 CDF86880 		str	r8, [sp, #104]
  77:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.color = draw_dsc->recolor;
 1114              		.loc 1 77 9 is_stmt 1 view .LVU397
  77:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.color = draw_dsc->recolor;
 1115              		.loc 1 77 27 is_stmt 0 view .LVU398
 1116 022a 0023     		movs	r3, #0
 1117 022c 1693     		str	r3, [sp, #88]
  78:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1118              		.loc 1 78 9 is_stmt 1 view .LVU399
  78:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1119              		.loc 1 78 25 is_stmt 0 view .LVU400
 1120 022e 3B89     		ldrh	r3, [r7, #8]
 1121 0230 ADF85C30 		strh	r3, [sp, #92]	@ movhi
  79:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1122              		.loc 1 79 9 is_stmt 1 view .LVU401
  79:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1123              		.loc 1 79 28 is_stmt 0 view .LVU402
 1124 0234 0223     		movs	r3, #2
 1125 0236 8DF86430 		strb	r3, [sp, #100]
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 43


  81:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1126              		.loc 1 81 9 is_stmt 1 view .LVU403
  81:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1127              		.loc 1 81 30 is_stmt 0 view .LVU404
 1128 023a CDF85480 		str	r8, [sp, #84]
  82:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 1129              		.loc 1 82 9 is_stmt 1 view .LVU405
 1130 023e 15A9     		add	r1, sp, #84
 1131 0240 2046     		mov	r0, r4
 1132 0242 FFF7FEFF 		bl	lv_draw_sw_blend
 1133              	.LVL115:
 1134              	.LBE82:
  71:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_area_t clipped_coords;
 1135              		.loc 1 71 68 is_stmt 0 view .LVU406
 1136 0246 8EE0     		b	.L24
 1137              	.LVL116:
 1138              	.L52:
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 1139              		.loc 1 85 37 discriminator 2 view .LVU407
 1140 0248 099B     		ldr	r3, [sp, #36]
 1141 024a 142B     		cmp	r3, #20
 1142 024c 7FF419AF 		bne	.L30
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 1143              		.loc 1 85 76 discriminator 3 view .LVU408
 1144 0250 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 1145              		.loc 1 85 65 discriminator 3 view .LVU409
 1146 0252 002B     		cmp	r3, #0
 1147 0254 7FF415AF 		bne	.L30
 1148              	.LBB83:
  86:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_h = lv_area_get_height(coords);
 1149              		.loc 1 86 9 is_stmt 1 view .LVU410
 1150              	.LVL117:
 1151              	.LBB84:
 1152              	.LBI84:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1153              		.loc 3 123 26 view .LVU411
 1154              	.LBB85:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1155              		.loc 3 125 5 view .LVU412
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1156              		.loc 3 125 31 is_stmt 0 view .LVU413
 1157 0258 B8F80430 		ldrh	r3, [r8, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1158              		.loc 3 125 44 view .LVU414
 1159 025c B8F80020 		ldrh	r2, [r8]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1160              		.loc 3 125 36 view .LVU415
 1161 0260 9B1A     		subs	r3, r3, r2
 1162 0262 9BB2     		uxth	r3, r3
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1163              		.loc 3 125 49 view .LVU416
 1164 0264 0133     		adds	r3, r3, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1165              		.loc 3 125 12 view .LVU417
 1166 0266 1BB2     		sxth	r3, r3
 1167              	.LVL118:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 44


 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1168              		.loc 3 125 12 view .LVU418
 1169              	.LBE85:
 1170              	.LBE84:
  87:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 1171              		.loc 1 87 9 is_stmt 1 view .LVU419
 1172              	.LBB86:
 1173              	.LBI86:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1174              		.loc 3 133 26 view .LVU420
 1175              	.LBB87:
 1176              		.loc 3 135 5 view .LVU421
 1177              		.loc 3 135 31 is_stmt 0 view .LVU422
 1178 0268 B8F80620 		ldrh	r2, [r8, #6]
 1179              		.loc 3 135 44 view .LVU423
 1180 026c B8F80210 		ldrh	r1, [r8, #2]
 1181              		.loc 3 135 36 view .LVU424
 1182 0270 521A     		subs	r2, r2, r1
 1183 0272 92B2     		uxth	r2, r2
 1184              		.loc 3 135 49 view .LVU425
 1185 0274 0132     		adds	r2, r2, #1
 1186              		.loc 3 135 12 view .LVU426
 1187 0276 12B2     		sxth	r2, r2
 1188              	.LVL119:
 1189              		.loc 3 135 12 view .LVU427
 1190              	.LBE87:
 1191              	.LBE86:
  88:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = (lv_opa_t *)src_buf;
 1192              		.loc 1 88 9 is_stmt 1 view .LVU428
  88:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf = (lv_opa_t *)src_buf;
 1193              		.loc 1 88 27 is_stmt 0 view .LVU429
 1194 0278 0C99     		ldr	r1, [sp, #48]
 1195 027a 1691     		str	r1, [sp, #88]
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf += sizeof(lv_color_t) * src_w * src_h;
 1196              		.loc 1 89 9 is_stmt 1 view .LVU430
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_buf += sizeof(lv_color_t) * src_w * src_h;
 1197              		.loc 1 89 28 is_stmt 0 view .LVU431
 1198 027c 1891     		str	r1, [sp, #96]
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
 1199              		.loc 1 90 9 is_stmt 1 view .LVU432
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
 1200              		.loc 1 90 58 is_stmt 0 view .LVU433
 1201 027e 02FB03F3 		mul	r3, r2, r3
 1202              	.LVL120:
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
 1203              		.loc 1 90 28 view .LVU434
 1204 0282 01EB4303 		add	r3, r1, r3, lsl #1
 1205 0286 1893     		str	r3, [sp, #96]
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = coords;
 1206              		.loc 1 91 9 is_stmt 1 view .LVU435
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_area = coords;
 1207              		.loc 1 91 30 is_stmt 0 view .LVU436
 1208 0288 CDF85480 		str	r8, [sp, #84]
  92:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1209              		.loc 1 92 9 is_stmt 1 view .LVU437
  92:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1210              		.loc 1 92 29 is_stmt 0 view .LVU438
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 45


 1211 028c CDF86880 		str	r8, [sp, #104]
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1212              		.loc 1 93 9 is_stmt 1 view .LVU439
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1213              		.loc 1 93 28 is_stmt 0 view .LVU440
 1214 0290 0223     		movs	r3, #2
 1215 0292 8DF86430 		strb	r3, [sp, #100]
  94:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 1216              		.loc 1 94 9 is_stmt 1 view .LVU441
 1217 0296 15A9     		add	r1, sp, #84
 1218 0298 0798     		ldr	r0, [sp, #28]
 1219 029a FFF7FEFF 		bl	lv_draw_sw_blend
 1220              	.LVL121:
  94:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 1221              		.loc 1 94 9 is_stmt 0 view .LVU442
 1222              	.LBE83:
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t src_w = lv_area_get_width(coords);
 1223              		.loc 1 85 108 view .LVU443
 1224 029e 62E0     		b	.L24
 1225              	.LVL122:
 1226              	.L53:
 1227              	.LBB88:
 133:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                            draw_dsc->zoom != LV_IMG_ZOOM_NONE) ?
 1228              		.loc 1 133 90 discriminator 2 view .LVU444
 1229 02a0 3B68     		ldr	r3, [r7]
 1230 02a2 B3F1807F 		cmp	r3, #16777216
 1231 02a6 01D0     		beq	.L48
 133:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                            draw_dsc->zoom != LV_IMG_ZOOM_NONE) ?
 1232              		.loc 1 133 28 view .LVU445
 1233 02a8 0223     		movs	r3, #2
 1234 02aa 48E7     		b	.L33
 1235              	.L48:
 1236 02ac 0123     		movs	r3, #1
 1237 02ae 46E7     		b	.L33
 1238              	.LVL123:
 1239              	.L35:
 1240              	.LBB81:
 148:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 1241              		.loc 1 148 17 is_stmt 1 view .LVU446
 1242 02b0 089B     		ldr	r3, [sp, #32]
 1243 02b2 0493     		str	r3, [sp, #16]
 1244 02b4 0396     		str	r6, [sp, #12]
 1245 02b6 099B     		ldr	r3, [sp, #36]
 1246 02b8 0293     		str	r3, [sp, #8]
 1247 02ba 0197     		str	r7, [sp, #4]
 1248 02bc 0F9A     		ldr	r2, [sp, #60]
 1249 02be 0092     		str	r2, [sp]
 1250 02c0 0E9B     		ldr	r3, [sp, #56]
 1251 02c2 0C99     		ldr	r1, [sp, #48]
 1252 02c4 13A8     		add	r0, sp, #76
 1253 02c6 FFF7FEFF 		bl	convert_cb
 1254              	.LVL124:
 1255 02ca 6CE7     		b	.L36
 1256              	.L55:
 1257              	.LBB75:
 153:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_opa_t recolor_opa = draw_dsc->recolor_opa;
 1258              		.loc 1 153 17 view .LVU447
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 46


 154:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_color_t recolor = draw_dsc->recolor;
 1259              		.loc 1 154 17 view .LVU448
 1260              	.LVL125:
 155:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_color_premult(recolor, recolor_opa, premult_v);
 1261              		.loc 1 155 17 view .LVU449
 155:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_color_premult(recolor, recolor_opa, premult_v);
 1262              		.loc 1 155 28 is_stmt 0 view .LVU450
 1263 02cc 3B89     		ldrh	r3, [r7, #8]
 156:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 recolor_opa = 255 - recolor_opa;
 1264              		.loc 1 156 17 is_stmt 1 view .LVU451
 1265              	.LVL126:
 1266              	.LBB76:
 1267              	.LBI76:
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1268              		.loc 2 474 42 view .LVU452
 1269              	.LBB77:
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1270              		.loc 2 477 5 view .LVU453
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1271              		.loc 2 477 24 is_stmt 0 view .LVU454
 1272 02ce C3F3C422 		ubfx	r2, r3, #11, #5
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1273              		.loc 2 477 42 view .LVU455
 1274 02d2 02FB0BF2 		mul	r2, r2, fp
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1275              		.loc 2 477 12 view .LVU456
 1276 02d6 ADF84420 		strh	r2, [sp, #68]	@ movhi
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1277              		.loc 2 478 5 is_stmt 1 view .LVU457
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1278              		.loc 2 478 24 is_stmt 0 view .LVU458
 1279 02da C3F34512 		ubfx	r2, r3, #5, #6
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1280              		.loc 2 478 42 view .LVU459
 1281 02de 0BFB02F2 		mul	r2, fp, r2
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1282              		.loc 2 478 12 view .LVU460
 1283 02e2 ADF84620 		strh	r2, [sp, #70]	@ movhi
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1284              		.loc 2 479 5 is_stmt 1 view .LVU461
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1285              		.loc 2 479 24 is_stmt 0 view .LVU462
 1286 02e6 03F01F03 		and	r3, r3, #31
 1287              	.LVL127:
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1288              		.loc 2 479 42 view .LVU463
 1289 02ea 0BFB03F3 		mul	r3, fp, r3
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1290              		.loc 2 479 12 view .LVU464
 1291 02ee ADF84830 		strh	r3, [sp, #72]	@ movhi
 1292              	.LVL128:
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1293              		.loc 2 479 12 view .LVU465
 1294              	.LBE77:
 1295              	.LBE76:
 157:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint32_t i;
 1296              		.loc 1 157 17 is_stmt 1 view .LVU466
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 47


 157:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint32_t i;
 1297              		.loc 1 157 29 is_stmt 0 view .LVU467
 1298 02f2 6FEA0B0B 		mvn	fp, fp
 1299              	.LVL129:
 157:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint32_t i;
 1300              		.loc 1 157 29 view .LVU468
 1301 02f6 5FFA8BFB 		uxtb	fp, fp
 1302              	.LVL130:
 158:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(i = 0; i < buf_size; i++) {
 1303              		.loc 1 158 17 is_stmt 1 view .LVU469
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 1304              		.loc 1 159 17 view .LVU470
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 1305              		.loc 1 159 23 is_stmt 0 view .LVU471
 1306 02fa 0024     		movs	r4, #0
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 1307              		.loc 1 159 17 view .LVU472
 1308 02fc 08E0     		b	.L38
 1309              	.LVL131:
 1310              	.L39:
 160:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 1311              		.loc 1 160 21 is_stmt 1 discriminator 3 view .LVU473
 160:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 1312              		.loc 1 160 34 is_stmt 0 discriminator 3 view .LVU474
 1313 02fe 5A46     		mov	r2, fp
 1314 0300 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 1315 0304 11A8     		add	r0, sp, #68
 1316 0306 FFF7FEFF 		bl	lv_color_mix_premult
 1317              	.LVL132:
 1318 030a 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 1319              		.loc 1 159 43 is_stmt 1 discriminator 3 view .LVU475
 1320 030e 0134     		adds	r4, r4, #1
 1321              	.LVL133:
 1322              	.L38:
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 1323              		.loc 1 159 30 discriminator 1 view .LVU476
 1324 0310 4C45     		cmp	r4, r9
 1325 0312 F4D3     		bcc	.L39
 1326 0314 4DE7     		b	.L37
 1327              	.LVL134:
 1328              	.L56:
 159:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     rgb_buf[i] = lv_color_mix_premult(premult_v, rgb_buf[i], recolor_opa);
 1329              		.loc 1 159 30 is_stmt 0 discriminator 1 view .LVU477
 1330              	.LBE75:
 1331              	.LBB78:
 166:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_opa_t * mask_buf_tmp = mask_buf;
 1332              		.loc 1 166 17 is_stmt 1 view .LVU478
 167:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(y = blend_area.y1; y <= blend_area.y2; y++) {
 1333              		.loc 1 167 17 view .LVU479
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1334              		.loc 1 168 17 view .LVU480
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1335              		.loc 1 168 23 is_stmt 0 view .LVU481
 1336 0316 BDF97240 		ldrsh	r4, [sp, #114]
 1337              	.LVL135:
 167:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(y = blend_area.y1; y <= blend_area.y2; y++) {
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 48


 1338              		.loc 1 167 28 view .LVU482
 1339 031a DDF820B0 		ldr	fp, [sp, #32]
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1340              		.loc 1 168 17 view .LVU483
 1341 031e 09E0     		b	.L41
 1342              	.LVL136:
 1343              	.L57:
 1344              	.LBB79:
 173:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1345              		.loc 1 173 25 is_stmt 1 view .LVU484
 1346 0320 2946     		mov	r1, r5
 1347 0322 5846     		mov	r0, fp
 1348              	.LVL137:
 173:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1349              		.loc 1 173 25 is_stmt 0 view .LVU485
 1350 0324 FFF7FEFF 		bl	lv_memset_00
 1351              	.LVL138:
 174:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1352              		.loc 1 174 25 is_stmt 1 view .LVU486
 174:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1353              		.loc 1 174 44 is_stmt 0 view .LVU487
 1354 0328 0223     		movs	r3, #2
 1355 032a 8DF86430 		strb	r3, [sp, #100]
 1356              	.L43:
 179:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 1357              		.loc 1 179 21 is_stmt 1 discriminator 2 view .LVU488
 179:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 1358              		.loc 1 179 34 is_stmt 0 discriminator 2 view .LVU489
 1359 032e AB44     		add	fp, fp, r5
 1360              	.LVL139:
 179:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 1361              		.loc 1 179 34 discriminator 2 view .LVU490
 1362              	.LBE79:
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1363              		.loc 1 168 61 is_stmt 1 discriminator 2 view .LVU491
 1364 0330 0134     		adds	r4, r4, #1
 1365              	.LVL140:
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1366              		.loc 1 168 61 is_stmt 0 discriminator 2 view .LVU492
 1367 0332 24B2     		sxth	r4, r4
 1368              	.LVL141:
 1369              	.L41:
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1370              		.loc 1 168 42 is_stmt 1 discriminator 1 view .LVU493
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1371              		.loc 1 168 55 is_stmt 0 discriminator 1 view .LVU494
 1372 0334 BDF97630 		ldrsh	r3, [sp, #118]
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_line;
 1373              		.loc 1 168 42 discriminator 1 view .LVU495
 1374 0338 A342     		cmp	r3, r4
 1375 033a FFF63EAF 		blt	.L40
 1376              	.LBB80:
 169:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_res_line = lv_draw_mask_apply(mask_buf_tmp, blend_area.x1, y, blend_w);
 1377              		.loc 1 169 21 is_stmt 1 view .LVU496
 170:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1378              		.loc 1 170 21 view .LVU497
 170:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 49


 1379              		.loc 1 170 37 is_stmt 0 view .LVU498
 1380 033e 2B46     		mov	r3, r5
 1381 0340 2246     		mov	r2, r4
 1382 0342 BDF97010 		ldrsh	r1, [sp, #112]
 1383 0346 5846     		mov	r0, fp
 1384 0348 FFF7FEFF 		bl	lv_draw_mask_apply
 1385              	.LVL142:
 172:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_00(mask_buf_tmp, blend_w);
 1386              		.loc 1 172 21 is_stmt 1 view .LVU499
 172:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_00(mask_buf_tmp, blend_w);
 1387              		.loc 1 172 23 is_stmt 0 view .LVU500
 1388 034c 0028     		cmp	r0, #0
 1389 034e E7D0     		beq	.L57
 176:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1390              		.loc 1 176 26 is_stmt 1 view .LVU501
 176:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1391              		.loc 1 176 28 is_stmt 0 view .LVU502
 1392 0350 0228     		cmp	r0, #2
 1393 0352 ECD1     		bne	.L43
 177:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1394              		.loc 1 177 25 is_stmt 1 view .LVU503
 177:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1395              		.loc 1 177 44 is_stmt 0 view .LVU504
 1396 0354 8DF86400 		strb	r0, [sp, #100]
 1397 0358 E9E7     		b	.L43
 1398              	.LVL143:
 1399              	.L54:
 177:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1400              		.loc 1 177 44 view .LVU505
 1401              	.LBE80:
 1402              	.LBE78:
 1403              	.LBE81:
 193:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_mem_buf_release(rgb_buf);
 1404              		.loc 1 193 9 is_stmt 1 view .LVU506
 1405 035a 0898     		ldr	r0, [sp, #32]
 1406 035c FFF7FEFF 		bl	lv_mem_buf_release
 1407              	.LVL144:
 194:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 1408              		.loc 1 194 9 view .LVU507
 1409 0360 3046     		mov	r0, r6
 1410 0362 FFF7FEFF 		bl	lv_mem_buf_release
 1411              	.LVL145:
 1412              	.L24:
 194:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 1413              		.loc 1 194 9 is_stmt 0 view .LVU508
 1414              	.LBE88:
 196:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1415              		.loc 1 196 1 view .LVU509
 1416 0366 21B0     		add	sp, sp, #132
 1417              	.LCFI6:
 1418              		.cfi_def_cfa_offset 36
 1419              		@ sp needed
 1420 0368 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 196:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1421              		.loc 1 196 1 view .LVU510
 1422              		.cfi_endproc
 1423              	.LFE161:
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 50


 1425              		.text
 1426              	.Letext0:
 1427              		.file 4 "/usr/local/include/sys/_types/_int8_t.h"
 1428              		.file 5 "/usr/local/include/sys/_types/_int16_t.h"
 1429              		.file 6 "/usr/local/include/sys/_types/_int32_t.h"
 1430              		.file 7 "/usr/local/include/_types/_uint8_t.h"
 1431              		.file 8 "/usr/local/include/_types/_uint16_t.h"
 1432              		.file 9 "/usr/local/include/_types/_uint32_t.h"
 1433              		.file 10 "/usr/local/include/arm/_types.h"
 1434              		.file 11 "lvgl/src/draw/sw/../../misc/lv_types.h"
 1435              		.file 12 "/usr/local/include/sys/_types/_size_t.h"
 1436              		.file 13 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 1437              		.file 14 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 1438              		.file 15 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 1439              		.file 16 "lvgl/src/draw/sw/../../misc/lv_style.h"
 1440              		.file 17 "lvgl/src/draw/sw/../lv_draw_mask.h"
 1441              		.file 18 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 1442              		.file 19 "lvgl/src/draw/sw/../lv_img_buf.h"
 1443              		.file 20 "lvgl/src/draw/sw/../../core/lv_obj.h"
 1444              		.file 21 "lvgl/src/draw/sw/../lv_draw_rect.h"
 1445              		.file 22 "lvgl/src/draw/sw/../lv_draw_label.h"
 1446              		.file 23 "lvgl/src/draw/sw/../lv_draw_img.h"
 1447              		.file 24 "lvgl/src/draw/sw/../lv_draw_line.h"
 1448              		.file 25 "lvgl/src/draw/sw/../lv_draw_arc.h"
 1449              		.file 26 "lvgl/src/draw/sw/../lv_draw_layer.h"
 1450              		.file 27 "lvgl/src/draw/sw/../lv_draw.h"
 1451              		.file 28 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 1452              		.file 29 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 1453              		.file 30 "lvgl/src/draw/sw/../../core/lv_group.h"
 1454              		.file 31 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 1455              		.file 32 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 1456              		.file 33 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 1457              		.file 34 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
 1458              		.file 35 "lvgl/src/draw/sw/../../core/lv_event.h"
 1459              		.file 36 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 1460              		.file 37 "lvgl/src/draw/sw/../lv_draw_transform.h"
 1461              		.file 38 "lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  /var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_img.c
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:21     .text.lv_color_mix_premult:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:26     .text.lv_color_mix_premult:00000000 lv_color_mix_premult
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:86     .text.convert_cb:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:91     .text.convert_cb:00000000 convert_cb
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:139    .text.convert_cb:00000028 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:610    .text.lv_draw_sw_img_decoded:00000000 $t
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:616    .text.lv_draw_sw_img_decoded:00000000 lv_draw_sw_img_decoded
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:156    .text.convert_cb:00000039 $d
/var/folders/21/t9g5rlb91ys800n5npymflf80000gn/T//ccuXKfc7.s:156    .text.convert_cb:0000003a $t

UNDEFINED SYMBOLS
lv_area_get_size
lv_memset_ff
lv_memcpy
lv_draw_mask_is_any
lv_memset_00
_lv_refr_get_disp_refreshing
lv_disp_get_hor_res
lv_mem_buf_get
lv_area_move
lv_draw_transform
lv_draw_sw_blend
_lv_area_intersect
lv_draw_mask_apply
lv_mem_buf_release
